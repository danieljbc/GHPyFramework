{
    "403": [],
    "309": [],
    "3644": [],
    "5": [
        "kryo\u517c\u5bb9\u6027\u548c\u7a33\u5b9a\u6027\u8fd8\u4e0d\u662f\u592a\u5b8c\u7f8e\n",
        "dubbo\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5e8f\u5217\u5316\u6269\u5c55\u70b9\u7684\uff0c\u6211\u505a\u4e86\u4e00\u4e2akryo\u7684\u6269\u5c55\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\uff1a\nhttps://github.com/crnlmchina/dubbo-extension\n"
    ],
    "8": [
        "\u5347\u7ea7\u52302.5.3\u5c31\u597d\u4e86\uff0c\u65b0\u7248\u672c\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\n",
        "simple monitor\u8fd8\u662f\u4e0d\u80fd\u7528\n"
    ],
    "2198": [],
    "9": [],
    "4505": [],
    "3421": [],
    "17": [
        "Recommend the use of slf4j,if someone want to expand some features, such as make a new log wheel,he only has to include 5 class:Logger,ILoggerFactory,StaticLoggerBinder,StaticMarkerBinder and optional StaticMDCBinder class\n",
        "I've met the same problem. My whole project uses logback for logging, but dubbo's introduing log4j breaks everything down...\n",
        "We will to consider using slf4j as the standard log framework\u3002\n"
    ],
    "5362": [],
    "19": [
        "I am considering about it. https://github.com/apache/incubator-dubbo/pull/1801"
    ],
    "22": [
        "\u6211\u4eec\u4f1a\u5c3d\u5feb\u5427\u6587\u6863\u8fc1\u79fb\u5230github\n\n\u53d1\u4ef6\u4eba: ronaldoliubo [mailto:notifications@github.com] \n\u53d1\u9001\u65f6\u95f4: 2014\u5e742\u670810\u65e5 11:19\n\u6536\u4ef6\u4eba: alibaba/dubbo\n\u4e3b\u9898: [dubbo] code.alibabatech.com\u4e0d\u80fd\u8bbf\u95ee\u4e86\uff0c\u662f\u963f\u91cc\u4e0d\u8ba9\u7528\u4e86\u5417 (#22)\n\nhttp://code.alibabatech.com/wiki/display/dubbo\n\u4e0d\u80fd\u8bbf\u95ee\uff0c\u6211\u8fd8\u6709\u597d\u591adubbo\u7684\u914d\u7f6e\u8981\u53bb\u67e5\u5462\uff0c\u600e\u4e48\u529e\uff1f\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/alibaba/dubbo/issues/22 .  https://github.com/notifications/beacon/62398__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcwNzUzNTEzNiwiZGF0YSI6eyJpZCI6MjUyOTM2ODR9fQ==--b73ead3c3ebf492b334ac3efbba57dc7525dc027.gif \n",
        "\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\uff1a\u4eca\u5929\u4f1a\u628a\u6587\u6863\u79bb\u7ebf\u4e0b\u8f7d\u6253\u5305\u653e\u5230Github\u4e0a\uff0c\u4f9b\u5927\u5bb6\u4e0b\u8f7d\u3002\n\n\u6c38\u4e45\u89e3\u51b3\u65b9\u6848\uff1a\u8f6c\u6362\u683c\u5f0f\uff0c\u8fc1\u79fb\u5230Github\u4e0a\uff0c\u4f30\u8ba1\u8981\u5230\u4e8c\u6708\u5e95\u5b8c\u6210\u3002\n- \u4f2f\u660a\n\n\u53d1\u4ef6\u4eba: ronaldoliubo [mailto:notifications@github.com] \n\u53d1\u9001\u65f6\u95f4: 2014\u5e742\u670810\u65e5 11:19\n\u6536\u4ef6\u4eba: alibaba/dubbo\n\u4e3b\u9898: [dubbo] code.alibabatech.com\u4e0d\u80fd\u8bbf\u95ee\u4e86\uff0c\u662f\u963f\u91cc\u4e0d\u8ba9\u7528\u4e86\u5417 (#22)\n\nhttp://code.alibabatech.com/wiki/display/dubbo\n\u4e0d\u80fd\u8bbf\u95ee\uff0c\u6211\u8fd8\u6709\u597d\u591adubbo\u7684\u914d\u7f6e\u8981\u53bb\u67e5\u5462\uff0c\u600e\u4e48\u529e\uff1f\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/alibaba/dubbo/issues/22 .\u56fe\u50cf\u5df2\u88ab\u53d1\u4ef6\u4eba\u5220\u9664\u3002\n",
        "\u79bb\u7ebf\u6587\u6863\u5728\u54ea\u91cc\u5440\uff1f\n",
        "https://github.com/alibaba/dubbo-doc-static\n\n\u8fdb\u884c\u4e2d\uff0c\u5df2\u7ecf\u5728Indexing\u4e86\n",
        "http://alibaba.github.io/dubbo-doc-static/Developer+Guide-zh.htm\n",
        "\u8c8c\u4f3c#21 \u6dfb\u52a0\u7684mirror\u73b0\u5728\u597d\u50cf\u90fd\u4e0d\u53ef\u7528\u4e86\uff0c\u6240\u4ee5master\u7684\u4f9d\u8d56\u5305\uff0c\u4ecd\u7136\u65e0\u6cd5\u4e0b\u8f7d\uff0c\u6709\u8c01\u53ef\u4ee5\u5206\u4eab\u4e0b\u5417\n",
        "not an issue any longer on master branch\n",
        "\u975e\u5e38\u611f\u8c22\uff01\n",
        "2.5.3\u7248\u672c\u65e0\u6cd5\u7f16\u8bd1\uff0copensesame\u5df2\u7ecf\u4e0b\u8f7d\u4e0b\u6765\u4e86\uff0c \u76f8\u5173\u4f9d\u8d56\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u89e3\u51b3\u554a\n[ERROR] Failed to execute goal on project dubbo-common: Could not resolve dependencies for project com.alibaba:dubbo-common:jar:2.5.3: Failed to collect dependencies for [org.slf4j:slf4j-api:jar:1.6.2 (provided), commons-logging:commons-logging-api:jar:1.1 (provided), log4j:log4j:jar:1.2.16 (compile), org.javassist:javassist:jar:3.15.0-GA (compile), com.alibaba:hessian-lite:jar:3.2.1-fixed-2 (compile), com.alibaba:fastjson:jar:1.1.8 (provided), org.jvnet.sorcerer:sorcerer-javac:jar:0.8 (provided), cglib:cglib-nodep:jar:2.2 (test), junit:junit:jar:4.10 (test), org.easymock:easymock:jar:3.0 (test), org.easymock:easymockclassextension:jar:3.0 (test), com.googlecode.jmockit:jmockit:jar:0.999.8 (test)]: Failed to read artifact descriptor for com.alibaba:hessian-lite:jar:3.2.1-fixed-2: Could not transfer artifact com.alibaba:hessian-lite:pom:3.2.1-fixed-2 from/to opensesame.releases (http://code.alibabatech.com/mvn/releases): Error transferring file: Connection refused -> [Help 1]\n",
        " kevin\uff0c\u60a8\u597d\n\n\u6dfb\u52a0\u51e0\u4e2amvn\u955c\u50cf\uff0c \u5fd8\u8bb0\u5177\u4f53\u662f\u54ea\u4e2a\uff0c\u4f46\u662f\u5176\u4e2d\u80af\u5b9a\u6709\u53ef\u4ee5\u7528\u7684\uff1a\n  <mirror>\n      <id>kafeitu</id>\n      <mirrorOf>central</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://maven.kafeitu.me/nexus/content/repositories/public</url>\n    </mirror>\n        <mirror>  \n             <id>ibiblio.org</id>  \n             <name>ibiblio Mirror of http://repo1.maven.org/maven2/</name>  \n             <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>  \n             <mirrorOf>*</mirrorOf>  \n         </mirror>  \n\n```\n        <mirror>  \n         <id>lvu.cn</id>  \n         <name>lvu.cn</name>  \n         <url>http://lvu.cn/nexus/content/groups/public</url>  \n         <mirrorOf>*</mirrorOf>  \n     </mirror>      \n```\n\n5991500\n2014-03-04\n\n\u53d1\u4ef6\u4eba\uff1a kevin\n\u53d1\u9001\u65f6\u95f4\uff1a 2014-03-04 15:17:51\n\u6536\u4ef6\u4eba\uff1a alibaba/dubbo\n\u6284\u9001\uff1a \n\u4e3b\u9898\uff1a Re:_[dubbo]_code.alibabatech.com\u4e0d\u80fd\u8bbf\u95ee\u4e86\uff0c\u662f\u963f\u91cc\u4e0d\u8ba9\u7528\u4e86\u5417_(#22)\n\n2.5.3\u7248\u672c\u65e0\u6cd5\u7f16\u8bd1\uff0copensesame\u5df2\u7ecf\u4e0b\u8f7d\u4e0b\u6765\u4e86\uff0c \u76f8\u5173\u4f9d\u8d56\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u89e3\u51b3\u554a\n[ERROR] Failed to execute goal on project dubbo-common: Could not resolve dependencies for project com.alibaba:dubbo-common:jar:2.5.3: Failed to collect dependencies for [org.slf4j:slf4j-api:jar:1.6.2 (provided), commons-logging:commons-logging-api:jar:1.1 (provided), log4j:log4j:jar:1.2.16 (compile), org.javassist:javassist:jar:3.15.0-GA (compile), com.alibaba:hessian-lite:jar:3.2.1-fixed-2 (compile), com.alibaba:fastjson:jar:1.1.8 (provided), org.jvnet.sorcerer:sorcerer-javac:jar:0.8 (provided), cglib:cglib-nodep:jar:2.2 (test), junit:junit:jar:4.10 (test), org.easymock:easymock:jar:3.0 (test), org.easymock:easymockclassextension:jar:3.0 (test), com.googlecode.jmockit:jmockit:jar:0.999.8 (test)]: Failed to read artifact descriptor for com.alibaba:hessian-lite:jar:3.2.1-fixed-2: Could not transfer artifact com.alibaba:hessian-lite:pom:3.2.1-fixed-2 from/to opensesame.releases (http://code.alibabatech.com/mvn/releases): Error transferring file: Connection refused -> [Help 1]\n\u2014\nReply to this email directly or view it on GitHub.\n",
        "\u73b0\u5728\u6240\u6709\u7684dubbo\u4e0b\u8f7d\u90fd\u5931\u6548\u4e86\u5417\uff1f\n\u6bd4\u5982\uff1ahttp://code.alibabatech.com/mvn/releases/com/alibaba/dubbo/2.4.9/dubbo-2.4.9.jar\n\n\u6211\u4e0b\u8f7dgit\u4e0a\u7684\u6e90\u7801\uff0c\u4f46\u662fmvn install\u8fc7\u4e0d\u53bb\u3002\u8bf4\u627e\u4e0d\u5230hessian-lite:jar:3.2.1-fixed-2\n\u8bf7\u95ee\u662f\u963f\u91cc\u5728\u8c03\u6574\u5417\uff1f\u8fd8\u662f\u6211\u8bbf\u95ee\u7684\u5730\u5740\u4e0d\u5bf9\u3002\n\n[ERROR] Failed to execute goal on project dubbo-common: Could not resolve dependencies for project com.alibaba:dubbo-common:jar:2.5.4-SNAPSHOT: Failed\n to collect dependencies at com.alibaba:hessian-lite:jar:3.2.1-fixed-2: Failed to read artifact descriptor for com.alibaba:hessian-lite:jar:3.2.1-fixe\nd-2: Failure to find com.alibaba:opensesame:pom:1.0 in http://mirrors.ibiblio.org/pub/mirrors/maven2 was cached in the local repository, resolution wi\nll not be reattempted until the update interval of ibiblio.org has elapsed or updates are forced -> [Help 1]\n",
        "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\uff0chessian-lite:jar:3.2.1-fixed-2\u627e\u4e0d\u5230\uff0c\u90a3\u51e0\u4e2amirror\u6211\u4e5f\u8bd5\u4e86\uff0c\u8fd8\u662f\u4e0d\u884c\u3002\n",
        "\u8bb0\u5f55\u4e0b\u81ea\u5df1\u7f16\u8bd1\u8fc7\u7a0b\u9047\u5230\u7684\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6cd5\uff0c\u5e0c\u671b\u6709\u7528\nhttp://www.cnblogs.com/pengkw/p/3674730.html\n",
        "\u641e\u5c41\u554a\uff0c\u5c31\u6015\u8fd9\u79cd\u5f00\u6e90\uff0c\u5404\u79cd\u963f\u91cc\u5185\u90e8\u7684\u4f9d\u8d56\u5305\u627e\u4e0d\u5230\uff0c\u5185\u90e8\u79c1\u670d\u53c8\u4e0d\u5f00\u653e\u3002\u864e\u5934\u86c7\u5c3e\u554a\uff0c\u8fd9\u662f\u56fd\u5185\u5f00\u6e90\u73b0\u72b6\u3002\n",
        "\u81ea\u5df1\u6253\u5305\u7684\u8bdd\u53ef\u4ee5\uff0c\u4fee\u6539\u9879\u76ee\u7684\u4f9d\u8d56\u7248\u672c\uff0c\u4f7f\u7528\u516c\u7f51\u4e0a\u5b58\u5728\u7684\u7248\u672c\n",
        "@chengdedeng \u81ea\u5df1\u6c34\u5e73\u4e0d\u591f\uff0c\u4e0d\u8981\u4e71\u55b7\uff0c\u4eba\u5bb6\u8fd9\u4e48\u957f\u65f6\u95f4\u7684\u52aa\u529b\u7ed9\u4f60\u514d\u8d39\u5b66\u4e60\u514d\u8d39\u7528\uff0c\u4f60\u8fd8\u8981\u600e\u4e48\u6837\uff1f\u505a\u4e3a\u4e00\u4e2a\u7a0b\u5e8f\u5458\u81ea\u5df1\u52a8\u624b\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\u90fd\u6ca1\u6709\uff1f\u4ec0\u4e48\u90fd\u8981\u522b\u4eba\u5f04\u597d\u4e86\uff0c\u653e\u5230\u4f60\u9762\u524d\u5417\uff1f\n",
        "@nezhazheng 1.\u505a\u5f00\u6e90\u9996\u5148\u4e0d\u8981\u89c9\u5f97\u81ea\u5df1\u5728\u5949\u732e\uff0c\u5fc3\u6001\u653e\u7aef\u6b63\u3002 2.\u56fd\u5185\u505a\u5f00\u6e90\u4ece\u6765\u4e0d\u662f\u6280\u672f\u95ee\u9898\uff0c\u800c\u662f\u6001\u5ea6\u95ee\u9898\u30023.\u5144\u53f0\u4e00\u53e5\u8bdd\u5c31\u80fd\u770b\u51fa\u4e00\u4e2a\u4eba\u7684\u6c34\u5e73\uff0c\u8fd9\u4e2a\u6c34\u5e73\u6211\u662f\u4e0d\u884c\u30024.\u5bf9dubbo\u7684\u4ee3\u7801\u4ece\u6ca1\u6709\u62b1\u6028\u8fc7\uff0c\u4ee3\u7801\u5199\u7684\u597d\u4e0d\u597d\uff0c\u90a3\u662f\u80fd\u529b\u95ee\u9898\uff0c\u5e76\u4e14dubbo\u4ee3\u7801\u786e\u5b9e\u4e0d\u9519\u3002\u4f46\u662f\u6587\u6863\u548c\u5404\u79cd\u4f9d\u8d56\u597d\u4e0d\u597d\u627e\uff0c\u90a3\u662f\u6001\u5ea6\u95ee\u9898\u30025.\u5e0c\u671bdubbo\u8d8a\u505a\u8d8a\u597d\u30026.\u5bf9\u4e8b\u4e0d\u5bf9\u4eba\n",
        "@nezhazheng \n\u9047\u5230\u7f16\u8bd1\u4e0d\u901a\u8fc7\u65f6\uff0c\u975e\u5e38\u8ba9\u4eba\u6cae\u4e27\u3002\n\u5bf9\u6bd4\u56fd\u5916\u540c\u6837\u201c\u77e5\u540d\u4f01\u4e1a\u201d\u652f\u6301\u7684\u5f00\u6e90\u9879\u76ee\u5c31\u6ca1\u6709\u8fd9\u6837\u7684\u95ee\u9898\uff08\u4e5f\u4e0d\u80fd\u8bf4\u7edd\u5bf9\u54c8\uff09\u3002\n\u6240\u4ee5\u6211\u8fd8\u662f\u6bd4\u8f83\u8d5e\u540c @chengdedeng \u7684\u8bf4\u6cd5\uff1a\u5fc3\u6001\u95ee\u9898\u3002\n",
        "@nezhazheng \u5982\u679c\u5144\u5f1f\u5bf9\u6c34\u5e73\u6709\u81ea\u4fe1\u53ef\u5426\u6574\u7406\u4e0b\u7f16\u8bd1\u6210\u529f\u7684\u76f8\u5173\u7ec6\u8282\u554a\uff0c\u4e5f\u6709\u52a9\u4e8e\u83dc\u9e1f\u7684\u6c34\u5e73\u63d0\u5347  @chengdedeng  @takeseem \n",
        "\u6b22\u8fce\u63d0\u4f9b\u5f02\u8bae\u7684\u4e00\u5757\u6765\u5b8c\u5584\u6587\u6863\uff0c\uff0c\u800c\u4e0d\u662f\u6307\u8d23\u5f00\u53d1\u4eba\u5458\u3002\n",
        "\u5206\u4eab\u4e2a\u81ea\u5df1\u7f16\u8bd1simple-monitor\u7684\u7ecf\u9a8c\uff1a\u57fa\u4e8e\u7248\u672c2.5.3\u5f00\u59cb\u4fee\u6539\uff0c\u6ca1\u6709\u52a8parent pom \u800c\u662f\u5728\u9879\u76ee\u91cc\u9762\u5c06\u65e0\u6548\u7684\u7248\u672c\u505a\u4e86\u4fee\u6539\uff0c\u5efa\u8bae\u4f7f\u7528\u548cparent version\u76f8\u540c\u7684scope\u7b49\u7ea7\n",
        "\u697c\u4e0a\u7ed9\u4e2a\u94fe\u63a5\u5427\u3002\n",
        "@fengwuze \u6539\u52a8\u5f88\u5c0f\n\n``` xml\n                <dependency>\n                        <groupId>com.alibaba</groupId>\n                        <artifactId>fastjson</artifactId>\n                        <version>1.1.35</version>\n                        <scope>provided</scope>\n                </dependency>\n```\n\n\u6211\u4fee\u6539\u4e86 `dubbo-simple/dubbo-monitor/pom.xml`\uff0c\u5c06\u6240\u6709\u4e0d\u5b58\u5728\u7684\u4f9d\u8d56\u7248\u672c\u90fd\u66f4\u6362\u6210\u4e86\u53ef\u4ee5\u4e0b\u8f7d\u7684\u7248\u672c\uff0c\n\np.s. \u5fc5\u987b\u5199`scope`\u6807\u7b7e\uff0c\u5426\u5219\u65b0\u7248\u672c\u4e0d\u4f1a\u751f\u6548\uff0c\u81f3\u4e8e`scope`\u7684\u7ea7\u522b\u63a8\u8350\u4f7f\u7528\u548c`parent`\u76f8\u540c\u7684\uff082.5.3\u4e2d\u7684\u4e00\u822c\u4e3a`provided`\uff09\n\n\u5f53\u7136\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u53ea\u80fd\u6682\u65f6\u505a\u5230\u53ef\u4ee5\u7f16\u8bd1\uff0c\u5982\u679c\u9047\u5230\u65b0\u65e7\u7248\u672c\u5e93\u4e0d\u517c\u5bb9\u7684\u60c5\u51b5\u5c31\u4f1a\u5f88\u60b2\u5267\n",
        "@atttx123 \u5f53\u65f6\u6211\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bb0\u5f97\u662f\u5728dubbo\u7684\u90ae\u4ef6\u5217\u8868\u91cc\u627e\u5230\u7684dubbo\u56e2\u961f\u63d0\u4f9b\u7684\u4f9d\u8d56\u5305\u4e0b\u8f7d\u5730\u5740\u3002\u4f60\u53ef\u4ee5google\u4e00\u628a\uff0c\u5982\u679c\u627e\u4e0d\u7740\u4f60\u90ae\u4ef6\u6211\uff0c\u6211\u53d1\u7ed9\u4f60\u3002\n",
        "@chengdedeng  \u7528\u5f00\u6e90\u4e0d\u8981\u89c9\u5f97\u81ea\u5df1\u662f\u4e0a\u5e1d\uff0c\u6240\u4ee5\u5fc3\u6001\u653e\u7aef\u6b63\u8fd9\u53e5\u8bdd\u56de\u9001\u7ed9\u4f60\u3002\u5176\u6b21dubbo\u56e2\u961f\u5df2\u7ecf\u628a\u4e3a\u4ec0\u4e48\u627e\u4e0d\u7740\u4f9d\u8d56\u7684\u539f\u56e0\u5728wiki\u5199\u7684\u6e05\u6e05\u695a\u695a\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e86\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e14\u56de\u7b54\u4e86\u4ecd\u7136\u63d0\u95ee\u8fd9\u4e2a\u95ee\u9898\u7684\u7528\u6237\u3002\u6240\u4ee5\u6211\u771f\u4e0d\u77e5\u9053\u4f60\u53cd\u590d\u63d0\u5230\u7684\u6001\u5ea6\u95ee\u9898\u5230\u5e95\u662f\u5728\u8bf4\u4ec0\u4e48\uff1f\u6700\u540e\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u5458\u4e0d\u4f1a\u52a8\u624b\u53ea\u4f1a\u5410\u69fd\u4e86\uff0c\u90a3\u5c31\u771f\u662f\u6001\u5ea6\u95ee\u9898\u4e86\u3002PS\u4f60\u63d0\u5230\u7684\u4ec0\u4e48\u4e00\u53e5\u8bdd\u6c34\u5e73\u95ee\u9898\uff0c\u8fd9\u8fd8\u9700\u8981\u6211\u89e3\u91ca\u4e48\n",
        "\u627e\u4e0d\u7740\u4f9d\u8d56\u7684\u770b\nhttps://github.com/alibaba/dubbo/issues/21\n\u91cc\u9762\u6709\u4eba\u63d0\u4f9b\u4f9d\u8d56\u5305\u4e0b\u8f7d\u5730\u5740\u4e86\u3002\n",
        "@nezhazheng 21\u91cc\u9762\u7684\u5305\u4e0d\u591f\uff0c\u8fd8\u6709\u5f88\u591a\u7684\u5305\u516c\u7f51\u4e0a\u662f\u6ca1\u6709\u7684\uff0c\u6bd4\u5982fastjson\u76841.1.8\u7248\u672c\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u76ee\u524d\u53ea\u80fd\u901a\u8fc7\u5f3a\u5236\u4fee\u6539\u7248\u672c\u53f7\u89e3\u51b3\n\np.s. \u5982\u679c\u6709\u8c01\u4f9d\u8d56\u5305\u9ebb\u70e6\u4e0a\u4f20\u5230\u516c\u7f51\u7684maven\u4ed3\u5e93\u5427\uff0c\u9020\u798f\u5927\u5bb6\n",
        "\u4eca\u5929\u8bd5\u4e86\u4e00\u4e0b\u697c\u4e0a\u51e0\u4f4d\u8bf4\u7684\uff0c\u5df2\u7ecf\u6210\u529f\u4e86\uff1a\n\u4fee\u6539\u70b9\uff1a\ndubbo\\pom.xml\n1\u3001\u6ce8\u91caparent\u8282\u70b9\n2\u3001\u5728artifactId\u8282\u70b9\u4e0a\u65b9\u52a0\u5165\uff1a<groupId>com.alibaba</groupId>\n3\u3001\u5c06project.build.sourceEncoding\u8282\u70b9\u7684\u503c\u6539\u4e3a: UTF-8\n4\u3001\u6ce8\u91ca\u3010repositories\u3001issueManagement\u3001scm\u3001mailingLists\u3001developers\u3011\u8282\u70b9\n5\u3001\u6700\u5173\u952e\u7684\u4e00\u6b65\uff1a\n\u5c06http://usc.googlecode.com/svn/files/package/alibaba-dubbo-dependency.zip\u538b\u7f29\u5305\uff0c\u4e0b\u8f7d\u89e3\u538b\u5230\u672c\u5730maven\u4ed3\u5e93\uff08\u4e00\u822c\u5728 ~.m2\\repository\\com\\alibaba\uff09\u76ee\u5f55\u4e0b\u9762\uff08\u53ea\u89e3\u538b\u5c31\u597d\u4e86\uff09\n\u7ecf\u8fc7\u4e0a\u9762\u51e0\u6b65\uff0c\uff0cdubbo\u5c31\u53ef\u4ee5\u987a\u5e8f\u7f16\u8bd1\u6210\u529f\u4e86\u3002\u5efa\u8bae\u5728\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5ffd\u7565\u6d4b\u8bd5\u7528\u4f8b\u3002\n\u7f16\u8bd1\u547d\u4ee4\uff1a\nmvn -e install -Dmaven.test.skip=true\n",
        "\u6211\u4eca\u5929\u521a\u521a\u6d4b\u8bd5\u7f16\u8bd12.4.10\uff0c\u611f\u89c9\u8fd8\u662f\u6bd4\u8f83\u987a\u5229\u7684\uff0c\u6309\u7167\u5b98\u65b9\u7684\u89e3\u91ca\u672c\u5730\u5904\u7406opensesame\uff0c\u7136\u540e\u6309\u7167[\u8fd9\u91cc](http://jianshu.io/p/0dde591f21d0)\u8bf4\u7684\uff1a\n\n``` cmd\n<fastjson_version>1.1.8</fastjson_version>\uff0c\u5c061.1.8\u4fee\u6539\u4e3a1.1.39\n```\n\n\u987a\u5229\u7f16\u8bd1\uff0c\u4e0d\u8fc7\u9014\u4e2d\u5f88\u591a\u5904warn\uff0c\u5e76\u4f34\u968f\u7740downloadding\uff0c\u611f\u89c9\u6ca1\u5565\u95ee\u9898\uff08\u521a\u8f6cjava\uff0c\u8001\u9e1f\u52ff\u55b7\uff09\n",
        "\u4f60\u597d\uff0c\u8fc7\u7a0b\u4e2d\u7684Repository\u90fd\u5df2\u7ecf\u4e0d\u53ef\u7528\u4e86\u3002mirror\uff08http://mirrors.ibiblio.org/maven2/com/alibaba/\uff09\u867d\u7136\u53ef\u7528\uff0c\u4f46\u662f\u7f3a\u5c11\u8bb8\u591a\u5305\uff0c\u76ee\u524d\u5b8c\u5168\u65e0\u6cd5\u6784\u5efa\u3002\n1 opensesame \u7f3a\u5c11\uff0c\u53ef\u7528\u901a\u8fc7github\u4e0a\u7684\u5e93\u624b\u5de5\u89e3\u51b3\u3002OK\n2 fastjson_version\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003\u524d\u9762\u610f\u89c1\uff0c\u4f7f\u7528\u66f4\u65b0\u7684\u7248\u672c1.1.38\u4f8b\u5982\u3002OK\n3 hessian lite\u5b8c\u5168\u627e\u4e0d\u5230\n\u6682\u65f6\u5361\u5728\u8fd9\u91cc\u65e0\u6cd5\u7ee7\u7eed\uff0c\u4e5f\u8bf7\u80fd\u7ed9\u4e88\u5e2e\u52a9\uff0c\u8c22\u8c22\n"
    ],
    "4896": [],
    "2236": [],
    "2481": [],
    "27": [
        "not an issue any longer on master branch\n",
        "\u6700\u65b0\u7684tag dubbo-2.5.3 \u53c8\u8bbf\u95ee\nto {}->http://code.alibabatech.com:80: SOCKS: Network unreachable\n\u4e86\u3002\n",
        "\u795e\u5947\u7684\u5207\u6362\u5230master\u53c8\u6210\u529f\u4e86\n",
        "\u524d\u671f\u7684\u4e00\u4e9b\u4f9d\u8d56\u5305\uff0c\u4e0b\u8f7d\u89e3\u538b\u5230\u672c\u5730maven\u4ed3\u5e93\uff08\u4e00\u822c\u5728 ~.m2\\repository\\com\\alibaba\uff09\nhttp://usc.googlecode.com/svn/files/package/alibaba-dubbo-dependency.zip\n",
        "\u8fd8\u662f\u4e0d\u884c\uff0cmvn\u91cc\u9762\u4f9d\u8d56\u7684\u5730\u5740\u90fd\u662f\u4f60\u4eec\u7684\u5185\u90e8\u4ed3\u5e93\u5730\u5740\uff0c\u80fd\u4e0d\u80fd\u628a\u4f9d\u8d56\u6587\u4ef6\u90fd\u8f6c\u79fb\u5230\u4e2d\u592e\u4ed3\u5e93\n",
        "\u6216\u8005\u80fd\u4e0d\u80fd\u628a\u76ee\u524d\u4ee3\u7801\u7684\u6784\u5efa\u7ed3\u679c\u5305\u4e0a\u4f20\u4e00\u4e0b\n"
    ],
    "28": [
        "\u4e8b\u5b9e\u60c5\u51b5\u662f\u5373\u4fbf\u6709\u591a\u4e2a\u670d\u52a1\uff0c\u4ecd\u7136\u4e5f\u7981\u7528\u4e0d\u4e86\n",
        "\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u670d\u52a1\uff0c\u662f\u7981\u6b62\u4e0d\u4e86\u7684\uff0c\u6211\u8fd9\u8fb9\u4e5f\u662f\u4e00\u6837\uff1b\u4f46\u662f\u6709\u591a\u4e2a\u670d\u52a1\u7684\u65f6\u5019\uff0c\u662f\u53ef\u4ee5\u7981\u7528\u7684\u3002\n",
        "@justein \u591a\u4e2a\u670d\u52a1\u662f\u53ef\u4ee5\u7981\u7528\u7684",
        "\u6211\u8fd9\u8fb9\u8bd5\u8fc7\u4e86\uff0c\u591a\u4e2a\u63d0\u4f9b\u8005\u670d\u52a1\u4e5f\u662f\u7981\u7528\u4e0d\u4e86\u7684\u3002\u7981\u7528\u4e4b\u540e\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u670d\u52a1",
        "\u5982 ronaldoliubo  \u6240\u8bf4\uff0c\u5f53\u53ea\u6709\u4e00\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\u65f6\uff0c\u7981\u7528\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff1b\u4f46\u5982\u679c\u6709\u4e24\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5219\u53ef\u4ee5\u6210\u529f\u7981\u7528\u5176\u4e2d\u4e00\u4e2a\uff1b\u7981\u7528\u4e86\u4e00\u4e2a\u4ee5\u4e0b\uff0c\u5269\u4e0b\u7684\u8fd9\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\u518d\u7981\u7528\uff0c\u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\n"
    ],
    "2906": [],
    "26": [
        "not an issue any longer on master branch\n",
        "\u54c8\u54c8\uff0c\u6211\u76f4\u63a5\u5220\u6389\u4e86\u8fd9\u5757\u4ee3\u7801\u3002 \u7136\u540e\u8df3\u8fc7test\n",
        "\u524d\u671f\u7684\u4e00\u4e9b\u4f9d\u8d56\u5305\uff0c\u4e0b\u8f7d\u89e3\u538b\u5230\u672c\u5730maven\u4ed3\u5e93\uff08\u4e00\u822c\u5728 ~.m2\\repository\\com\\alibaba\uff09\nhttp://usc.googlecode.com/svn/files/package/alibaba-dubbo-dependency.zip\n"
    ],
    "31": [],
    "35": [],
    "36": [
        "not an issue any longer on master branch\n",
        "http://usc.googlecode.com/svn/files/package/alibaba-dubbo-dependency.zip\n\n\u770b\u770b\u662f\u5426\u6709\u5e2e\u52a9\n",
        "\u975e\u5e38\u611f\u8c22 @anewstar , \u7f16\u8bd1\u6210\u529f\u4e86\u3002\n"
    ],
    "4601": [],
    "2458": [],
    "713": [],
    "3267": [],
    "694": [],
    "2791": [],
    "1215": [],
    "2247": [],
    "1904": [],
    "3716": [],
    "2825": [],
    "3318": [],
    "2289": [],
    "4586": [],
    "2820": [],
    "67": [
        " \u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u4ec0\u4e48\u65f6\u5019\u4fee\u590d\uff1f @chickenlj "
    ],
    "5366": [],
    "5578": [],
    "5454": [],
    "3851": [],
    "2230": [],
    "3578": [],
    "5565": [],
    "4440": [],
    "4582": [],
    "982": [],
    "5270": [],
    "2609": [],
    "125": [
        "now dubbo admin uses spring boot and the port is 7001, so you can start it with dubbo monitor at the same time.",
        "\u5982\u679c\u4f7f\u7528tomcat\u4f5c\u5bb9\u5668\uff0c\u800c\u4e14\u7aef\u53e3\u8bbe\u7f6e8080\u7684\u8bdd\u4e5f\u4f1a\u62a5\u9519\n"
    ],
    "1403": [],
    "5427": [],
    "2005": [],
    "135": [
        "It looks like it is a user configuration error.",
        "zookeeper\u96c6\u7fa4\u914d\u5236",
        "\u4f60\u7684\u9017\u53f7\uff0c\u662f\u4e2d\u6587\u7684\u5427\n",
        "\u662f\u82f1\u6587\u7684..\u54e5~\n",
        "\u5e94\u8be5\u8fd9\u6837\u914d\u7f6e zookeeper://10.89.113.104:2181?backup=10.89.113.105:2181\n",
        "\u597d\u7684\uff0c\u56de\u5934\u6d4b\u8bd5\u4e0b...\u611f\u8c22~\n"
    ],
    "990": [],
    "3329": [],
    "1189": [],
    "3354": [],
    "151": [
        "\u6211\u4e5f\u53d1\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898, \u8fd9\u91cc\u7684\u5b57\u7b26\u4e32\u5e94\u8be5\u662f \"true\".equals()  \u7684, \u73b0\u5728\u53ea\u80fd\u4f7f\u7528 Stub \u7c7b\u540d\u6765\u4ee3\u66ff\n",
        "\u6709\u66f4\u65b0\u4e86\uff1f\u50f5\u5c38\u9879\u76ee\u8981\u590d\u6d3b\u4e86\u4e48\uff1f\n",
        "@xwarrior \u51c6\u5907\u9002\u5e94\u8fd9\u4e2a\u65f6\u4ee3\uff0c\u628a\u4ed6\u505a\u7684\u66f4\u8f7b\u66f4\u6613\u7528\u3002\n",
        "@teaey  \u73b0\u5728\u7528\u8fd9\u4e2a\u6846\u67b6\u4f1a\u4e0d\u4f1a\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff1f  HSF\u6709\u6e90\u4ee3\u7801\u5417\uff1f\n",
        "@liangz168 \u4f60\u8bf4\u8fc7\u65f6\u662f\u6307\u67b6\u6784\u5417\uff1f\n",
        "@yinjun622  \u6211\u662f\u8be2\u95ee\u4e00\u4e0b\uff0c\u6bd5\u7adf3\u5e74\u6ca1\u6709\u66f4\u65b0\u8fc7\u4e86\n",
        "@teaey \u671f\u5f85\u65b0\u7248\u672c\u7684\u66f4\u65b0\uff01 \u52a0\u6cb9\uff01\n",
        "\u671f\u5f85\n\n> \u5728 2016\u5e743\u670824\u65e5\uff0c\u4e0a\u534811:09\uff0cWilliam.wei notifications@github.com \u5199\u9053\uff1a\n> \n> @teaey https://github.com/teaey \u671f\u5f85\u65b0\u7248\u672c\u7684\u66f4\u65b0\uff01 \u52a0\u6cb9\uff01\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub https://github.com/alibaba/dubbo/issues/151#issuecomment-200634575\n",
        "\u671f\u5f85\u3002dubbo\u600e\u4e48\u8fc7\u65f6\uff1f\u8bf7\u95ee\u600e\u4e48\u52a0\u5165dubbo\u6e90\u7801\u8d21\u732e\u8005\uff1f\n",
        "@slowlizard  \u5173\u952e\u4e0d\u662f\u600e\u4e48\u6210\u4e3adubbo\u7684\u4ee3\u7801\u8d21\u732e\u8005\uff0c\u800c\u662f\u4f60\u6709\u6ca1\u6709\u597d\u7684feture\u3002\n",
        "@teaey \u80fd\u652f\u6301etcd\u548cconsul\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\u5417\uff1f\n",
        "@rexren  \u81ea\u5df1\u6839\u636e\u6ce8\u518c\u4e2d\u5fc3\u63a5\u53e3\u5b9e\u73b0\u4e00\u5957\uff0c\u53ef\u662f\u5f88\u5bb9\u6613\u7684\n"
    ],
    "3593": [],
    "1882": [],
    "3981": [],
    "157": [
        "Hi, could you please send a pull request?",
        "I think it's fine, since the write ops in line 299 and line 462 have no chance to content with the read ops, the lifecycle will guarentee it."
    ],
    "348": [],
    "2377": [],
    "318": [],
    "1717": [],
    "2809": [],
    "3196": [],
    "3363": [],
    "401": [],
    "4485": [],
    "2787": [],
    "2452": [],
    "1797": [],
    "462": [],
    "190": [
        "yeah, it's a spelling mistake\n",
        "oo, low mistake",
        "fixed"
    ],
    "4731": [],
    "5488": [],
    "195": [
        "\u6211\u662f\u76f4\u63a5\u641e\u4e2aspring-dubbo-consumer.xml\r\n\u7528\u4e00\u4e2aDubboConfig Java Config\u65b9\u5f0f\u5f15\u5165\u8fd9\u4e2axml\r\n`@Configuration\r\n@ImportResource(locations = {\"classpath:spring/spring-dubbo-consumer.xml\"})\r\npublic class DubboConfig {\r\n\r\n}\r\n`\r\n`\r\n\u914d\u7f6e\u6587\u4ef6\u91cc\u5c31\u4e00\u4e2a\u914d\u7f6e\r\n    <!-- \u5173\u95ed\u5f15\u7528\u670d\u52a1\u7684\u542f\u52a8\u65f6\u68c0\u67e5 -->\r\n    <dubbo:consumer check=\"false\"/>\r\n`",
        "\u76f4\u63a5\r\n@Reference\r\n\u4e2d\u7684\u9ed8\u8ba4\u503c\u8be5\u4e3atrue \u4e5f\u80fd\u641e\u5b9a\u5427",
        "\u4e5f\u5c31\u662f\u6240\u6709 <\u503c\u8bbe\u7f6e\u4e3a false> \u7684\u90fd\u5c06\u4f1a\u88ab\u5ffd\u7565 \u7136\u540e\u5b9e\u9645\u7528\u5230\u8fd9\u4e2a\u503c\u7684\u5730\u65b9\u6ca1\u6709\u540c\u65f6\u8bbe\u7f6e\u8fd9\u4e2a\u9ed8\u8ba4\u503c.\r\n\r\n\u52a0\u8fd9\u79cd `!value.equals(method.getDefaultValue())` \u81ea\u505a\u806a\u660e\u7684\u5224\u65ad, \u53c8\u4e0d\u628a\u540e\u7eed\u5904\u7406\u7684\u5730\u65b9\u540c\u6b65!\r\n\r\n\u5355\u8bf4\u8fd9\u4e2a\u95ee\u9898, \u76ee\u524d\u770b\u6765\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u52a0\u4e0a `-Ddubbo.reference.check=false` \u8fd9\u4e48\u5904\u7406\u4e86",
        "@liuanxin  \u6211\u5728IDEA\u542f\u52a8\u65f6\u52a0\u4e0a-Ddubbo.reference.check=false \u6267\u884c\u6548\u679c\u662f\u4e00\u6837\u7684\u5462",
        "\u76ee\u524d\u6d4b\u8bd5\u5230spring-boot-starter-dubbo\u9879\u76ee\u5fc5\u987b\u8bbe\u7f6econsumer.check=false\u624d\u884c\uff0c\u8fd9\u6837\u4e00\u6765\u53d8\u6210\u4e86\u6240\u6709\u90fd\u4e0d\u68c0\u67e5\uff0c\u867d\u7136\u4e0d\u662f\u521d\u8877\uff0c\u4f46\u662f\u76ee\u524d\u53ea\u80fd\u8fd9\u6837\u5b50\u4e86\uff0c\u8fd8\u662f\u5e0c\u671b\u5b98\u65b9\u4fee\u590d\u4e0b@Reference\u6ce8\u89e3",
        "@Comven spring.dubbo.consumer.check=false \u6211\u6dfb\u52a0\u8fd9\u4e2a\u914d\u7f6e\u5e76\u6ca1\u6709\u751f\u6548\uff0c\u4ed6\u8fd8\u662f\u4f1a\u6240\u6709\u90fd\u68c0\u6d4b\u4e00\u904d\uff0c\u5982\u679c\u6211\u5e0c\u671b\u6d88\u8d39\u65b9\u5148\u4e8e\u63d0\u4f9b\u65b9\u542f\u52a8\u6709\u4ec0\u4e48\u529e\u6cd5\u5417",
        "@Comven \u6211\u7528-Ddubbo.consumer.check=false\u8fd9\u4e2a\u4e4b\u540e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5ef6\u8fdf\u52a0\u8f7d\u670d\u52a1\u4e86\uff0c\u4f46\u662f\u611f\u89c9\u8fd9\u6837\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u529e\u6cd5"
    ],
    "4629": [],
    "1094": [],
    "199": [
        "Yes, I have send a pull request to address this issue."
    ],
    "3213": [],
    "208": [
        "\u51c6\u786e\u5b9a\u4f4d\u5c31\u662finvocation.getMethodName() \u5728\u5f02\u6b65\u65f6\uff0c\u8bbe\u7f6e\u51fa\u9519\u3002\u8bbe\u7f6e\u6210\u4e86$invoke\n",
        "dubbo.rpc\u6a21\u5757\r\nhack\u4fee\u6539\u8fc7\u4ee3\u7801----------------\r\nStaticContext.java\r\n\r\noldcode:line 62\r\n```java\r\npublic static String getKey(URL url, String methodName, String suffix) {\r\n    return getKey(url.getServiceKey(), methodName, suffix);\r\n}\r\n```\r\n-------change to \r\n```java\r\npublic static String getKey(URL url, String methodName, String suffix) {\r\n    if(\"$invoke\".equals(methodName)){\r\n        methodName = url.getParameter(\"methods\");\r\n    }\r\n    return getKey(url.getServiceKey(), methodName, suffix);\r\n} \r\n```\r\n\u8fd9\u6bb5\u4ee3\u7801\u6bd4\u8f83\u4e11\u964b\u5199\u6b7b$invoke\uff0c\u6682\u65f6\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002\r\n",
        "> \u51c6\u786e\u5b9a\u4f4d\u5c31\u662finvocation.getMethodName() \u5728\u5f02\u6b65\u65f6\uff0c\u8bbe\u7f6e\u51fa\u9519\u3002\u8bbe\u7f6e\u6210\u4e86$invoke\r\n\r\n\u6211\u4eec\u9047\u5230\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u5185\u90e8\u7248\u672c\u4fee\u590d\u6389\u4e86\uff0c\u4f46\u5fd8\u8bb0\u56de\u9988\u7ed9\u793e\u533a\u4e86\uff0c\u62b1\u6b49\u3002",
        "@chickenlj  \u5f02\u6b65\u6cdb\u5316\u8c03\u7528\u9002\u7528\u4e8eAPI\u7f51\u5173\u5bf9\u63a5\u5185\u90e8Dubbo\u5e94\u7528\uff0c\u8fd9\u4e2a\u95ee\u9898\u6709\u66f4\u597d\u7684\u89e3\u6cd5\u5417"
    ],
    "210": [
        "@zhobby @defshine \u8fd9\u6b21\u6392\u67e5\u7ebf\u4e0a\u95ee\u9898\u624d\u53d1\u73b0dubbo\u7684\u8fd9\u4e2abug\uff0c\u5bf9\u6211\u4eec\u5f71\u54cd\u633a\u5e7f\uff0c\u4f60\u4eec\u53ef\u4ee5\u81ea\u5df1\u6253\u5305\u7f16\u8bd1\uff0c\u6211\u7684\u4fee\u590d\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u80fd\u9002\u7528\u7edd\u5927\u591a\u6570\u6b64\u7c7b\u95ee\u9898\u60c5\u51b5\u3002",
        "@defshine\r\n\r\nPlease provides your org.springframework.jdbc version.\r\n",
        "It's same to #1608. So this one can be closed. Feel free to comment under #1608 if also have extra question.",
        "have you slove this problem?how to slove it?"
    ],
    "1017": [],
    "2124": [],
    "215": [
        "dubbo\u7ec8\u4e8e\u6709\u66f4\u65b0\u4e86\uff01\u671f\u5f85\uff01\n"
    ],
    "217": [
        "The dubbo-admin has been refactored to be a spring-boot project. Please check it again!\r\n\r\nhttps://github.com/apache/incubator-dubbo-ops",
        "\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u6709\u4eba\u89e3\u51b3\u4e86\u5417\uff1f\n",
        "\u5148\u542f\u52a8zookeeper\n\u5728\u547d\u4ee4\u884c\u7a97\u53e3\u6267\u884c\nd:\ncd d:\\dubbo.trunk\nmvn -Dmaven.test.skip=true clean install\nmvn jetty:run\n\n\u8bd5\u8bd5\u770b\uff0c\u6211\u7684\u4e5f\u9047\u5230\u8fd9\u4e2a\u9519\u8bef\uff0c\u8fd9\u6837\u5c31\u80fd\u6b63\u5e38\u542f\u52a8\uff0c\u4e0d\u8981\u5728eclipse\u91cc\u542f\u52a8\n",
        "\u6211\u5df2\u7ecf\u653e\u5f03dobbo\u4e86\uff0c\u5f00\u59cb\u5173\u6ce8[spring cloud](http://projects.spring.io/spring-cloud/)\u3002\n",
        "\u540c\u6837\uff0c\u6211\u628a\u9879\u76ee\u6362\u6210gradle\u683c\u5f0f\u4e86\uff0c\u7528gretty\u6d4b\u7684\n\u540e\u9762\u6211\u53c8\u7528mvn\u63d2\u4ef6jetty\u6d4b\u5f97\uff0c\u4e5f\u4e0d\u884c \n\u4f1a\u8bd5\u8bd5tomcat\u63d2\u4ef6\uff0c\u5982\u679c\u53ef\u4ee5\u90a3\u5c31\u662fjetty\u63d2\u4ef6\u68c0\u9a8c\u7684\u592a\u4e25\u4e86\u3002\n"
    ],
    "1001": [],
    "2252": [],
    "1387": [],
    "599": [],
    "3750": [],
    "2975": [],
    "3686": [],
    "4883": [],
    "566": [],
    "4276": [],
    "3078": [],
    "253": [
        "it's already been covered by https://github.com/alibaba/dubbo/pull/112\n"
    ],
    "503": [],
    "4158": [],
    "1650": [],
    "5486": [],
    "3326": [],
    "1454": [],
    "4255": [],
    "274": [],
    "2772": [],
    "4618": [],
    "4040": [],
    "286": [
        "\u627e\u4e0d\u5230MonitorService\uff0c\u53ef\u4ee5\u53bb\u6ce8\u518c\u4e2d\u5fc3\u770b\u770b\u8fd9\u4e2a\u670d\u52a1\u662f\u5426\u6709\u6ce8\u518c\uff0c\u4f30\u8ba1\u662fsimple\uff0dmonitor\u670d\u52a1\u6ca1\u542f\u52a8\u3002\n",
        "\u6211\u6839\u672c\u6ca1\u542f\u52a8simple-monitor\uff0c\u6216\u8005\u8bf4\u6ca1\u5b89\u88c5\uff0c\u4f7f\u7528dubbo\u4e00\u5b9a\u8981\u5b89\u88c5simple-monitor\u5417\n",
        "\u5df2\u7ecf\u627e\u5230\u539f\u56e0\u4e86\uff1a\n\n\u7559\u7ed9\u540e\u6765\u8005\uff1a\n       \u56e0\u4e3a\u6211\u5728\u6d88\u8d39\u8005\u90a3\u91cc\uff0c\u5728\u6ce8\u518c\u4e2d\u5fc3\u53d1\u73b0\u76d1\u63a7\u4e2d\u5fc3\u7684\u5f00\u5173\u6253\u5f00\u4e86\uff0c\u800c\u6211\u4e0d\u9700\u8981\u76d1\u63a7\u4e2d\u5fc3\uff0c\u56e0\u6b64\u6211\u6839\u672c\u6ca1\u6709\u8fd9\u4e2a\u670d\u52a1\u7684\u63d0\u4f9b\u8005\uff0c\u6240\u4ee5\u4f1a\u4e00\u76f4\u62a5\u8fd9\u4e2a\u5f02\u5e38\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u8fd0\u884c\uff0c\u5982\u679c\u4e0d\u60f3\u62a5\u6b64\u5f02\u5e38\uff0c\u53ea\u8981\u628a\u8be5\u914d\u7f6e\u6ce8\u91ca\u6389\uff0c\u6216\u8005\u5f00\u542f\u76d1\u63a7\u4e2d\u5fc3\u670d\u52a1\u5373\u53ef\n",
        "\u6709\u89e3\u51b3\u7684\u4e48",
        "\u6211\u73b0\u5728\u9047\u5230\u7684\u95ee\u9898\u662f\uff0c\u5728test\u73af\u5883\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u5728stage\u73af\u5883\u62a5\u8fd9\u4e2a\u9519\u8bef\uff0c\uff0c\uff0c\u662f\u4e0d\u662f\u914d\u7f6e\u7684\u95ee\u9898\uff1f",
        "\u8bb0\u4e0b\u4e86\u3002",
        "\u9519\u8bef\u539f\u56e0\uff1adubbo\u6e90\u7801\u5256\u6790http://blog.sina.com.cn/s/blog_4adc4b090102x12u.html \r\n\u662fzookeeper\u53d1\u73b0\u76f8\u5173\u670d\u52a1\u63a5\u53e3\u4e0d\u5b58\u5728\u63d0\u4f9b\u8005\u7684\u65f6\u5019\uff0c\u7981\u7528\u4e86\u6d88\u8d39\u8005\u8c03\u7528\u8be5\u670d\u52a1\u63a5\u53e3\u3002\r\n"
    ],
    "4378": [],
    "5060": [],
    "4538": [],
    "4062": [],
    "4360": [],
    "2925": [],
    "4385": [],
    "4533": [],
    "5025": [],
    "443": [],
    "2294": [],
    "5508": [],
    "5086": [],
    "5518": [],
    "4456": [],
    "2817": [],
    "2229": [],
    "2171": [],
    "3609": [],
    "477": [],
    "4870": [],
    "360": [],
    "4975": [],
    "3685": [],
    "4679": [],
    "390": [
        "This issue is fixed from 2.7.1 onwards."
    ],
    "2242": [],
    "397": [
        "\u91cd\u590d\uff0c\u540c#398"
    ],
    "400": [
        "fix from dubbo:master, 2.5.7 : GenericJSONConverter\u4e3b\u8981\u662f\u7528\u5728\u65e5\u5fd7\u90e8\u5206\u8f93\u51fa\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u8f93\u51falocale\u5bf9\u8c61\u65f6\u5c31\u53d1\u751fstack\u6ea2\u51fa\u3002\r\n```\r\njava.lang.StackOverflowError\r\n\tat com.alibaba.dubbo.common.json.JSONWriter.valueString(JSONWriter.java:189)\r\n\tat com.alibaba.dubbo.common.json.GenericJSONConverter$7.encode(GenericJSONConverter.java:100)\r\n\tat com.alibaba.dubbo.common.json.GenericJSONConverter.writeValue(GenericJSONConverter.java:338)\r\n\tat com.alibaba.dubbo.common.json.GenericJSONConverter.writeValue(GenericJSONConverter.java:347)\r\n\tat com.alibaba.dubbo.common.json.GenericJSONConverter.writeValue(GenericJSONConverter.java:395)\r\n\tat com.alibaba.dubbo.common.json.GenericJSONConverter.writeValue(GenericJSONConverter.java:347)\r\n\tat com.alibaba.dubbo.common.json.GenericJSONConverter.writeValue(GenericJSONConverter.java:395)\r\n```",
        "#906 "
    ],
    "402": [],
    "99": [],
    "1991": [],
    "404": [
        "This should not be an issue any more. Feel free to reopen if you still encounter this.",
        "\u540c\u5b66\uff0c\u80fd\u7559\u4e2a\u90ae\u7bb1\u4e48",
        "@teaey takeseem@gmail.com"
    ],
    "3076": [],
    "4884": [],
    "4171": [],
    "5069": [],
    "1315": [],
    "3017": [],
    "4832": [],
    "433": [
        "`\r\n\r\n    @Test\r\n    public void testRoute_matchWhen() {\r\n        Invocation invocation = new RpcInvocation();\r\n\r\n        Router router = new ConditionRouterFactory().getRouter(getRouteUrl(\" => host = 1.2.3.4\"));\r\n        boolean matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n\r\n        router = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"host = 2.2.2.2,1.1.1.1,3.3.3.3 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n\r\n        router = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"host = 2.2.2.2,1.1.1.1,3.3.3.3 & host !=1.1.1.1 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(false, matchWhen);\r\n\r\n        router = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"host !=4.4.4.4 & host = 2.2.2.2,1.1.1.1,3.3.3.3 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n\r\n        router = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"host !=4.4.4.* & host = 2.2.2.2,1.1.1.1,3.3.3.3 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n\r\n        router = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"host = 2.2.2.2,1.1.1.*,3.3.3.3 & host != 1.1.1.1 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(false, matchWhen);\r\n\r\n        router = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"host = 2.2.2.2,1.1.1.*,3.3.3.3 & host != 1.1.1.2 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService\"),\r\n                invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n    }\r\n\r\n    @Test\r\n    public void testRoute_matchFilter() {\r\n        List<Invoker<String>> invokers = new ArrayList<Invoker<String>>();\r\n        Invoker<String> invoker1 = new MockInvoker<String>(URL.valueOf(\"dubbo://10.20.3.3:20880/com.foo.BarService\"));\r\n        Invoker<String> invoker2 = new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost()\r\n                + \":20880/com.foo.BarService\"));\r\n        Invoker<String> invoker3 = new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost()\r\n                + \":20880/com.foo.BarService\"));\r\n        invokers.add(invoker1);\r\n        invokers.add(invoker2);\r\n        invokers.add(invoker3);\r\n\r\n        Router router1 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" => \" + \" host = 10.20.3.3\").addParameter(Constants.FORCE_KEY,\r\n                String.valueOf(true)));\r\n        Router router2 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" => \" + \" host = 10.20.3.* & host != 10.20.3.3\").addParameter(\r\n                Constants.FORCE_KEY, String.valueOf(true)));\r\n        Router router3 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" => \" + \" host = 10.20.3.3  & host != 10.20.3.3\").addParameter(\r\n                Constants.FORCE_KEY, String.valueOf(true)));\r\n        Router router4 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" => \" + \" host = 10.20.3.2,10.20.3.3,10.20.3.4\").addParameter(\r\n                Constants.FORCE_KEY, String.valueOf(true)));\r\n        Router router5 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" => \" + \" host != 10.20.3.3\").addParameter(Constants.FORCE_KEY,\r\n                String.valueOf(true)));\r\n\r\n        List<Invoker<String>> fileredInvokers1 = router1.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), new RpcInvocation());\r\n        List<Invoker<String>> fileredInvokers2 = router2.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), new RpcInvocation());\r\n        List<Invoker<String>> fileredInvokers3 = router3.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), new RpcInvocation());\r\n        List<Invoker<String>> fileredInvokers4 = router4.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), new RpcInvocation());\r\n        List<Invoker<String>> fileredInvokers5 = router5.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), new RpcInvocation());\r\n        Assert.assertEquals(1, fileredInvokers1.size());\r\n        Assert.assertEquals(0, fileredInvokers2.size());\r\n        Assert.assertEquals(0, fileredInvokers3.size());\r\n        Assert.assertEquals(1, fileredInvokers4.size());\r\n        Assert.assertEquals(2, fileredInvokers5.size());\r\n    }\r\n\r\n    @Test\r\n    public void testRoute_methodRoute() {\r\n        Invocation invocation = new RpcInvocation(\"getFoo\", new Class<?>[0], new Object[0]);\r\n        // \u6709\u591a\u4e2a\u65b9\u6cd5\u65f6\uff0c\u6ca1\u6cd5\u5339\u914d\r\n        Router router = new ConditionRouterFactory().getRouter(getRouteUrl(\"methods=getFoo => host = 1.2.3.4\"));\r\n        boolean matchWhen = ((ConditionRouter) router).matchWhen(\r\n                URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService?methods=setFoo,getFoo,findFoo\"), invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n        // \u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u5339\u914d\r\n        matchWhen = ((ConditionRouter) router).matchWhen(\r\n                URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService?methods=getFoo\"), invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n        // \u65b9\u6cd5\u548c\u5176\u4ed6\u53c2\u6570\u4e00\u8d77\uff0c\u6d4b\u8bd5\u65e0\u5f71\u54cd\r\n        Router router2 = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"methods=getFoo & host!=1.1.1.1 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router2).matchWhen(\r\n                URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService?methods=getFoo\"), invocation);\r\n        Assert.assertEquals(false, matchWhen);\r\n\r\n        Router router3 = new ConditionRouterFactory()\r\n                .getRouter(getRouteUrl(\"methods=getFoo & host=1.1.1.1 => host = 1.2.3.4\"));\r\n        matchWhen = ((ConditionRouter) router3).matchWhen(\r\n                URL.valueOf(\"consumer://1.1.1.1/com.foo.BarService?methods=getFoo\"), invocation);\r\n        Assert.assertEquals(true, matchWhen);\r\n        // filter\u8fc7\u6ee4\u6761\u4ef6\u6d4b\u8bd5\r\n        List<Invoker<String>> invokers = new ArrayList<Invoker<String>>();\r\n        Invoker<String> invoker1 = new MockInvoker<String>(URL.valueOf(\"dubbo://10.20.3.3:20880/com.foo.BarService\"));\r\n        Invoker<String> invoker2 = new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost()\r\n                + \":20880/com.foo.BarService\"));\r\n        Invoker<String> invoker3 = new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost()\r\n                + \":20880/com.foo.BarService\"));\r\n        invokers.add(invoker1);\r\n        invokers.add(invoker2);\r\n        invokers.add(invoker3);\r\n\r\n        Router router4 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" & methods = getFoo => \" + \" host = 10.20.3.3\").addParameter(\r\n                Constants.FORCE_KEY, String.valueOf(true)));\r\n        List<Invoker<String>> fileredInvokers1 = router4.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), invocation);\r\n        Assert.assertEquals(1, fileredInvokers1.size());\r\n\r\n        Router router5 = new ConditionRouterFactory().getRouter(getRouteUrl(\r\n                \"host = \" + NetUtils.getLocalHost() + \" & methods = unvalidmethod => \" + \" host = 10.20.3.3\")\r\n                .addParameter(Constants.FORCE_KEY, String.valueOf(true)));\r\n        List<Invoker<String>> fileredInvokers2 = router5.route(invokers,\r\n                URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"), invocation);\r\n        Assert.assertEquals(3, fileredInvokers2.size());\r\n        // \u8c03\u7528\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\u65f6\r\n    }\r\n\r\n`\r\n\u4f7f\u7528\u8bf4\u660e\u6587\u6863\uff1ahttp://dubbo.io/user-guide/demos/%E8%B7%AF%E7%94%B1%E8%A7%84%E5%88%99.html\r\n\u4f46\u662f\u4ee5\u4e0a\u7528\u4f8b\u662f\u8dd1\u4e0d\u8fc7\u7684",
        "\u6539\u52a8\u70b9\uff1a\r\n1. \u9700\u8981\u4eceinvocation\u4e2d\u83b7\u53d6\u771f\u6b63\u7684\u8c03\u7528\u65b9\u6cd5\r\n2. parseRule bug\r\n3. isMatch\u903b\u8f91\r\n"
    ],
    "5579": [],
    "4233": [],
    "2551": [],
    "2153": [],
    "1959": [],
    "4380": [],
    "2211": [],
    "1805": [],
    "5055": [],
    "466": [
        "\u67e5\u4e86\u4e0b\u6e90\u7801\uff0c\u627e\u5230\u4e86\r\n\r\n/dubbo/dubbo-admin/src/main/webapp/WEB-INF/templates/sysinfo/layout/default.vm\r\n\r\n\u8fd9\u4e2a\u6587\u4ef6\u91cc\u7684\r\n\r\n\r\n\t\t\t\t\t\t\t#if($tool.checkUrl($currentUser,\"/sysinfo/$tab\"))\r\n\t\t\t\t\t\t\t<li id=\"$tab\"#if($_type == $tab) class=\"active\"#else style=\"color: white;\"#end onclick=\"window.location.href='/dubbo-admin/sysinfo/$tab';\">$i18n.get($tab)</li>\r\n\t\t\t\t\t\t\t#end\r\n\t\t\t\r\n\r\n\r\nonclick\u89e6\u53d1\u6761\u4ef6\u6709\u95ee\u9898\uff0c\u4e0d\u6e05\u695a\u600e\u4e48\u53bb\u76f8\u5bf9\u5730\u5740\uff0c\u6211\u7ed9\u5199\u6b7b\u4e86\u201c/dubbo-admin/sysinfo/$tab\u201d"
    ],
    "2562": [],
    "1065": [],
    "1946": [],
    "478": [
        "Hi, would you mind send a pull request?",
        "this issue should have been fixed by https://github.com/apache/incubator-dubbo/pull/1792",
        "I also verified generic invocation, it works too.",
        "\u6211\u4eec\u5728\u6cdb\u5316\u5f15\u7528\u9500\u6bc1consumer\u65f6\u4e5f\u78b0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c @chickenlj \u60f3\u95ee\u4e0b\u8fd9\u4e2a\u95ee\u9898\u6709\u5177\u4f53\u4fee\u590d\u8ba1\u5212\u5417\uff1f"
    ],
    "4078": [],
    "3197": [],
    "2221": [],
    "3980": [],
    "4634": [],
    "1369": [],
    "275": [],
    "2288": [],
    "1764": [],
    "2107": [],
    "3115": [],
    "5613": [],
    "3376": [],
    "2214": [],
    "261": [],
    "148": [],
    "5264": [],
    "5167": [],
    "538": [
        "I think the following actions should be made:\r\n\r\n* Add a documentation on how to get ip and register to registry\r\n* Add this kind to question to FAQ.\r\n\r\nRelated issue: #560 ",
        "goot suggestion!",
        "\u6211\u88c5\u8fc7 vmware\uff0c\u7136\u540e\u591a\u4e86\u4e24\u4e2a\u865a\u62df\u7f51\u5361\u3002dubbo \u628a\u6211\u7684VMnet1\u7684ip\u89e3\u6790\u6210\u672c\u673a\u5730\u5740\u4e86\u3002\r\n",
        " netInterfaces = NetworkInterface.getNetworkInterfaces();\r\n\u7136\u540e\u4ece\u4e2d\u9009\u4e00\u4e2a\u5408\u9002\u7684\uff0c\u884c\u5417 \uff1f\u53c2\u8003\u7684\u662felastic-job-lite\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u7684\u8bdd \uff0c\u53ef\u4ee5PR\u4e0b",
        "@zcap \u53ef\u4ee5\u4f7f\u7528dubbo provider\u7684\u6307\u5b9ahost\u7684\u914d\u7f6e",
        "@Xiaobaxi \u8fd9\u6837\u7684\u8bddIP\u5c31\u88ab\u9650\u5b9a\u6b7b\u4e86\u3002\u3002\u3002\u5bf9\u4e8e\u5176\u4ed6\u673a\u5668\u6765\u8bf4\u662f\u6709\u95ee\u9898\u7684\u3002\u3002\u3002\u3002",
        "\u5728 provider\u6240\u5728\u7684\u673a\u5668\uff0cping\u4e0b hostname\uff0c\u770b\u8fd4\u56de\u7684IP\u662f\u4e0d\u662f180.168.41.175\u3002\r\n\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8bf7\u786e\u8ba4hosts\u6587\u4ef6\u6b63\u786e\u3002  "
    ],
    "56": [],
    "2501": [],
    "5561": [],
    "558": [
        "\u5341\u5206\u611f\u8c22\uff0c\u5982\u679c\u80fd\u63d0\u4e2aPR\u5c31\u66f4\u597d\u4e86\u301c"
    ],
    "2603": [],
    "3654": [],
    "2401": [],
    "3863": [],
    "4324": [],
    "5403": [],
    "1630": [],
    "4523": [],
    "3996": [],
    "1298": [],
    "3281": [],
    "5637": [],
    "3425": [],
    "2296": [],
    "5623": [],
    "2591": [],
    "4065": [],
    "1726": [],
    "3767": [],
    "619": [
        "```\r\njava.lang.ArithmeticException\r\n        at sun.reflect.GeneratedConstructorAccessor62.newInstance(Unknown Source)\r\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n        at com.alibaba.com.caucho.hessian.io.JavaDeserializer.instantiate(JavaDeserializer.java:305)\r\n        at com.alibaba.com.caucho.hessian.io.JavaDeserializer.readObject(JavaDeserializer.java:194)\r\n        at com.alibaba.com.caucho.hessian.io.SerializerFactory.readObject(SerializerFactory.java:481)\r\n        at com.alibaba.com.caucho.hessian.io.Hessian2Input.readObjectInstance(Hessian2Input.java:2743)\r\n        at com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:2683)\r\n        at com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:2657)\r\n        at com.alibaba.dubbo.common.serialize.support.hessian.Hessian2ObjectInput.readObject(Hessian2ObjectInput.java:76)\r\n        at com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:92)\r\n        at com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:109)\r\n        at com.alibaba.dubbo.rpc.protocol.dubbo.DubboCodec.decodeBody(DubboCodec.java:90)\r\n        at com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:118)\r\n        at com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:79)\r\n        at com.alibaba.dubbo.rpc.protocol.dubbo.DubboCountCodec.decode(DubboCountCodec.java:46)\r\n        at com.alibaba.dubbo.remoting.transport.netty.NettyCodecAdapter$InternalDecoder.messageReceived(NettyCodecAdapter.java:134)\r\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:80)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\r\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:274)\r\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:261)\r\n        at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:349)\r\n        at org.jboss.netty.channel.socket.nio.NioWorker.processSelectedKeys(NioWorker.java:280)\r\n        at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:200)\r\n        at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\r\n        at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:44)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```",
        "use `-XX:-OmitStackTraceInFastThrow`  can solve such exception without stack trace.",
        "Hi, can you provide an example to reproduce this issue?",
        "Please check the link provided in @chickenlj 's comments.\r\n\r\nI am going to close this issue, feel free to reopen it if it still exists.",
        "@chickenlj @ralf0131 \u5927\u4f6c\u4eec\r\n\u6211\u4eec\u8fd8\u662f\u6709\u8fd9\u4e2a\u95ee\u9898,\u5076\u73b0\u7684,\u5e16\u5b50\u91cc\u9762\u8bf4\u7684\u52a0\u4e0a\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\u4e5f\u8bd5\u8fc7\u4e86,\u8fd8\u662f\u5076\u73b0\u6709\u95ee\u9898\r\n`\r\njava.lang.NullPointerException: null\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat com.alibaba.com.caucho.hessian.io.JavaDeserializer.instantiate(JavaDeserializer.java:271)\r\n\tat com.alibaba.com.caucho.hessian.io.JavaDeserializer.readObject(JavaDeserializer.java:155)\r\n\tat com.alibaba.com.caucho.hessian.io.SerializerFactory.readObject(SerializerFactory.java:397)\r\n\tat com.alibaba.com.caucho.hessian.io.Hessian2Input.readObjectInstance(Hessian2Input.java:2070)\r\n\tat com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:2005)\r\n\tat com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:1990)\r\n\tat com.alibaba.dubbo.common.serialize.support.hessian.Hessian2ObjectInput.readObject(Hessian2ObjectInput.java:88)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:92)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:109)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboCodec.decodeBody(DubboCodec.java:97)\r\n\tat com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:129)\r\n\tat com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:90)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboCountCodec.decode(DubboCountCodec.java:46)\r\n\tat com.alibaba.dubbo.remoting.transport.netty.NettyCodecAdapter$InternalDecoder.messageReceived(NettyCodecAdapter.java:134)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\r\n\tat org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\r\n\tat org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n`\r\n\u6211\u4eec\u7684DTO\u5982\u4e0b:\r\n`\r\n@Setter\r\n@Getter\r\n@ToString\r\npublic class ModelPriceDTO extends BaseModelDTO implements Serializable {\r\n\r\n    private static final long serialVersionUID = 3714041108118216990L;\r\n    /**\r\n     * \u5b98\u65b9\u6307\u5bfc\u4ef7(\u5143)\r\n     */\r\n    private Integer guidePrice;\r\n\r\n    /**\r\n     * \u7ecf\u9500\u5546\u6307\u5bfc\u4ef7(\u5143)\r\n     */\r\n    private Integer dealerPrice;\r\n\r\n    /**\r\n     * \u5e73\u5747\u4ef7\u683c(\u5143)\r\n     */\r\n    private Integer avgPrice;\r\n\r\n    /**\r\n     * \u8d2d\u7f6e\u7a0e(\u5143)\r\n     */\r\n    private Integer purchase;\r\n\r\n    /**\r\n     * \u4ef7\u683c\u522b\u540d\r\n     */\r\n    private String alias;\r\n\r\n    public ModelPriceDTO() {\r\n    }\r\n\r\n    public ModelPriceDTO(String modelCode) {\r\n        super.setModelCode(modelCode);\r\n    }\r\n}\r\n`\r\nBaseModelDTO\u5982\u4e0b:\r\n`\r\n@Setter\r\n@Getter\r\n@ToString\r\npublic abstract class BaseModelDTO {\r\n\r\n    /**\r\n     * \u8f66\u578b\u7f16\u7801\r\n     */\r\n    private String modelCode;\r\n}\r\n`",
        "@yangxujia @miniFrank @footmanFF @zhaixiaoxiang  \r\n\u6211\u4eec\u5728\u751f\u4ea7\u73af\u5883\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5176\u5b9e\u95ee\u9898\u6839\u6e90\u662f\u63d0\u4f9b\u8005\u62a5\u4e86\u5927\u91cf\u7684 NPE \u5f02\u5e38\uff0c**JVM \u4e3a\u4e86\u6027\u80fd\u4f1a\u505a\u4f18\u5316\uff0c\u5982\u679c\u9891\u7e41\u5730\u629b\u51fa\u67d0\u4e2a\u5f02\u5e38\uff0c\u4f1a\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e0d\u518d\u6253\u5370\u5f02\u5e38\u5806\u6808\u3002** \u8fd9\u6837\u63d0\u4f9b\u8005\u7aef\u4f1a\u53d1\u73b0\u770b\u4e0d\u5230`\u5f02\u5e38\u7684stackTrace`\uff1a\r\n```\r\njava.lang.NullPointerException: null\r\n```\r\n\u63d0\u4f9b\u8005\u8fd4\u56de\uff1a`RpcResult {\"result\":null,\"exception\":java.lang.NullPointerException(null)\u5b9e\u4f8b}`\u3002\r\n\r\n\u800c\u6d88\u8d39\u8005\u4f7f\u7528\u7684Hessian2\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u4f7f\u7528`Constructor.newInstance()`\u53cd\u5c04\u6784\u9020\u5f02\u5e38\u5b9e\u4f8b\uff1a\r\n```\r\n    protected Object instantiate()\r\n            throws Exception {\r\n        try {\r\n            if (_constructor != null)\r\n                // \u901a\u8fc7\u6784\u9020\u5668\u53cd\u5c04\u5b9e\u4f8b\u5316\u5f02\u5e38\u5b9e\u4f8b\r\n                return _constructor.newInstance(_constructorArgs);\r\n            else\r\n                return _type.newInstance();\r\n        } catch (Exception e) {\r\n            throw new HessianProtocolException(\"'\" + _type.getName() + \"' could not be instantiated\", e);\r\n        }\r\n    }\r\n\r\n    // \u5b9e\u4f8b\u5316\u5f02\u5e38\u5bf9\u8c61\r\n    public NullPointerException() {\r\n        super();\r\n    }\r\n\r\n    public RuntimeException() {\r\n        super();\r\n    }\r\n\r\n    public Exception() {\r\n        super();\r\n    }\r\n\r\n    public Throwable() {\r\n        fillInStackTrace();\r\n    }\r\n\r\n    public synchronized Throwable fillInStackTrace() {\r\n        if (stackTrace != null ||\r\n            backtrace != null /* Out of protocol state */ ) {\r\n            fillInStackTrace(0);\r\n            stackTrace = UNASSIGNED_STACK;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // \u56e0\u4e3a\u63d0\u4f9b\u8005\u8fd4\u56de\u7684NPE\u5f02\u5e38\u4fe1\u606f\u4e3anull\uff0c\u7ed3\u679c\u6b63\u597d\u4f7f\u7528\u4e86Java\u5f02\u5e38\u521d\u59cb\u5316\u5806\u6808\u8ddf\u8e2aStackTrace\u3002\u7ed3\u679c\u6211\u4eec\u770b\u5230\u7684\u662f\u5047\u7684\u8c03\u7528\u5806\u6808\u8ddf\u8e2a\r\n    private native Throwable fillInStackTrace(int dummy);\r\n\r\n```\r\n**\u56e0\u4e3a\u63d0\u4f9b\u8005\u8fd4\u56de\u7684NPE\u5f02\u5e38\u4fe1\u606f\u4e3anull\uff0c\u7ed3\u679c\u6b63\u597d\u4f7f\u7528\u4e86Java\u5f02\u5e38\u521d\u59cb\u5316\u5806\u6808\u8ddf\u8e2aStackTrace\u3002\u7ed3\u679c\u6211\u4eec\u770b\u5230\u7684\u662f\u5047\u7684\u8c03\u7528\u5806\u6808\u8ddf\u8e2a\uff0c\u5f88\u51d1\u5de7\u3002**\r\n\r\n\u8be6\u7ec6\u5206\u6790\u89c1 [\u65e5\u5fd7\u672a\u6253\u5370Java\u5f02\u5e38\u5806\u6808\u8ddf\u8e2astackTrace](https://github.com/edwardlee03/issue-case/blob/master/java/exception/10.%E6%97%A5%E5%BF%97%E6%9C%AA%E6%89%93%E5%8D%B0Java%E5%BC%82%E5%B8%B8%E5%A0%86%E6%A0%88%E8%B7%9F%E8%B8%AAstackTrace.md)\r\n",
        "> Hi, can you provide an example to reproduce this issue?\r\n\r\nHi, \r\nThis demo can recur this issue: https://github.com/zhaixiaoxiang/dubbo-examples/tree/master/hessian-npe-demo.\r\nAnd this is my analysis for this issue: https://www.yuque.com/fa902k/id5z6r/sr041v",
        "> > Hi, can you provide an example to reproduce this issue?\r\n> \r\n> Hi,\r\n> This demo can recur this issue: https://github.com/zhaixiaoxiang/dubbo-examples/tree/master/hessian-npe-demo.\r\n> And this is my analysis for this issue: https://www.yuque.com/fa902k/id5z6r/sr041v\r\n\r\n\u6211\u786e\u5b9e\u53ea\u5217\u51fa\u4e86\u5173\u952e\u70b9\uff0c\u4f46\u4f60\u7684\u6587\u7ae0\u5f88\u68d2\ud83d\udc4d\uff0c\u975e\u5e38\u7ec6\u81f4\u5b8c\u6574\u5730\u5206\u6790\u3002\u4f60\u7684\u7b2c`5`\u6b65\u4e4b\u540e\uff0c\u6211\u5c31\u6ca1\u518d\u4ee3\u7801\u8d70\u8bfb\u4e0b\u53bb\u3002 @zhaixiaoxiang ",
        "\u6839\u636e\u5806\u6808\u9519\u8bef\u5e94\u8be5\u53d1\u751f\u5728\u53cd\u5e8f\u5217\u5316\u9636\u6bb5\uff0c\u53d1\u5e8f\u5217\u5316\u8c03\u7528\u6784\u9020\u51fd\u6570\u751f\u6210\u793a\u4f8b\u629bNPE\u3002\u68c0\u67e5\u4e00\u4e0bDTO\u76f8\u5173\u7684\u7c7b\uff0c\u6784\u9020\u51fd\u6570\u6709\u6ca1\u6709\u5305\u542b\u5904\u7406\u903b\u8f91\u7684\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u4f1a\u629b\u51fa\u5f02\u5e38\uff1f\r\n\r\n\u53c2\u8003\u4e00\u4e0b\uff1a  \r\nhttp://pfmiles.github.io/blog/recently-hessian-deserialize-problem-and-thread-pool-executor-experience/",
        "+1",
        "```\r\nc.e.a.ControllerMethodTimeActive - URL\u8c03\u7528\u5f02\u5e38. \u65b9\u6cd5:com.edol.sale.web.GoodsV2Controller#queryPromotionPage, \u5165\u53c2:[EdolRequest(campusId=null, areaId=672687, orgId=268, adminId=null, userId=11789258, userNo=09da17e232834aa05cbbef52f0fbb238e86a7771, deviceNo=400e3066-6062-4bb2-bd2a-50a578d74817, deviceName=iPhone6sPlus, appVersion=IOS_4.0.3, requestIp=null, device_no=null, app_version=IOS_4.0.3, deviceId=null, ip=null, isMiniApp=null)]\r\njava.lang.NullPointerException: null\r\n\tat sun.reflect.GeneratedConstructorAccessor318.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat com.alibaba.com.caucho.hessian.io.JavaDeserializer.instantiate(JavaDeserializer.java:271)\r\n\tat com.alibaba.com.caucho.hessian.io.JavaDeserializer.readObject(JavaDeserializer.java:155)\r\n\tat com.alibaba.com.caucho.hessian.io.SerializerFactory.readObject(SerializerFactory.java:523)\r\n\tat com.alibaba.com.caucho.hessian.io.Hessian2Input.readObjectInstance(Hessian2Input.java:2070)\r\n\tat com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:2005)\r\n\tat com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:1990)\r\n\tat com.alibaba.dubbo.common.serialize.support.hessian.Hessian2ObjectInput.readObject(Hessian2ObjectInput.java:88)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:104)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:121)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboCodec.decodeBody(DubboCodec.java:97)\r\n\tat com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:145)\r\n\tat com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:91)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboCountCodec.decode(DubboCountCodec.java:67)\r\n\tat com.alibaba.dubbo.remoting.transport.netty.NettyCodecAdapter$InternalDecoder.messageReceived(NettyCodecAdapter.java:134)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\r\n\tat org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\r\n\tat org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```",
        "![image](https://user-images.githubusercontent.com/6265345/33647684-415eab00-da91-11e7-8ef5-32d65b09e8ed.png)\r\n",
        "+1"
    ],
    "3043": [],
    "3681": [],
    "2643": [],
    "572": [],
    "3448": [],
    "1872": [],
    "393": [],
    "2276": [],
    "1874": [],
    "3228": [],
    "4025": [],
    "659": [
        "\u611f\u8c22\u4f60\u7684\u5efa\u8bae\uff0c\u8fd9\u4e2a\u5de5\u4f5c\u5728\u8fd1\u671f\u4f18\u5148\u7ea7\u4f1a\u4f4e\u4e00\u4e9b\uff1f\u6b22\u8fce\u63d0pull request",
        "\u90a3\u6211\u5728\u9605\u8bfb\u4ee3\u7801\u540e\uff0c\u63d0\u4ea4\u6ce8\u91ca\u4f1a\u88abmerge\u4e48",
        "\u6b22\u8fce\u63d0\u4ea4\u6ce8\u91ca\uff0c\u8fd9\u6837\u80fd\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u4e5f\u65b9\u4fbf\u793e\u533a\u7684\u53c2\u4e0e",
        "@chickenlj  \u63d0\u4ea4\u4e86\u4e00\u4e2apull request  #676  \u5bf9DubboBeanDefinitionParser\u8fdb\u884c\u62c6\u5206"
    ],
    "3834": [],
    "4638": [],
    "672": [
        "\u697c\u4e3b\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417 @timqq ",
        "\u89e3\u51b3\u4e86\uff0c\u627e\u9ed8\u7136\u5927\u4f6c\u89e3\u51b3\u7684",
        "\u662f\u5b58\u5728\u963b\u585e\u8bf7\u6c42\u7684\u60c5\u51b5"
    ],
    "5481": [],
    "677": [
        "dead lock will not happen since this is the only place to use `str.intern()` in dubbo code base, but to be safe, I decide to change it to:\r\n\r\n```java\r\n        synchronized ((key + \".lock\").intern()) {\r\n            ...\r\n       }\r\n```\r\n\r\nto solve the potential issue.",
        "@beiwei30 how about a lock pool, so basically this pool always return the same lock instance with the same key, and use something like access time to collect unused instance",
        "@aCoder2013 a lock pool certainly works, but it make no difference with str.intern() if recycling is not considered, furthermore, it should occupy more memory. Are we facing overhead design here? :)",
        "@beiwei30  interning a string will make it a global object, but each service can have its own lock pool .\r\nI didn't read all  the source code here ,do we need to consider memory consumption\uff1f",
        "@aCoder2013 how about this:\r\n\r\n```java\r\n\r\n    ConcurrentMap<String, Object> locks = new ConcurrentHashMap<String, Object>();\r\n\r\n    /**\r\n     * Get shared connection\r\n     */\r\n    private ExchangeClient getSharedClient(URL url) {\r\n        String key = url.getAddress();\r\n        ReferenceCountExchangeClient client = referenceClientMap.get(key);\r\n        if (client != null) {\r\n            if (!client.isClosed()) {\r\n                client.incrementAndGetCount();\r\n                return client;\r\n            } else {\r\n                referenceClientMap.remove(key);\r\n            }\r\n        }\r\n        locks.putIfAbsent(key, new Object());\r\n        synchronized (locks.get(key)) {\r\n            if (referenceClientMap.containsKey(key)) {\r\n                return referenceClientMap.get(key);\r\n            }\r\n            \r\n            ExchangeClient exchangeClient = initClient(url);\r\n            client = new ReferenceCountExchangeClient(exchangeClient, ghostClientMap);\r\n            referenceClientMap.put(key, client);\r\n            ghostClientMap.remove(key);\r\n            locks.remove(key);\r\n            return client;\r\n        }\r\n    }\r\n```",
        "LGTM\uff01",
        ":)",
        "If we put all export/refer actions into a single serial process, we can get rid locks.\r\nWe've decided to solve this problem that way."
    ],
    "5515": [],
    "2159": [],
    "4259": [],
    "685": [
        "Without more discussion about this issue, I'll close it. Feel free to reopen if necessary.",
        "\ud83d\udc4d\u975e\u5e38\u597d\u7684\u95ee\u9898\uff0c\u6da8\u7ecf\u9a8c\u5566\u3002\u201c\u4f7f\u7528\u59ff\u52bf\u201d\u5f88\u91cd\u8981\uff0c\u529f\u80fd\u597d\u574f\u5728\u4e8e\u600e\u4e48\u4f7f\u7528\u3002\r\n\r\n\u540c\u673a\u623f\u8c03\u7528\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u4e00\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u5373\u53ef\uff0c\u5efa\u8bae\u4f18\u5148\u4f7f\u7528\u670d\u52a1\u5206\u7ec4\u6216\u670d\u52a1\u7248\u672c\u505a\u9694\u79bb\uff1b\u8de8\u673a\u623f\u8c03\u7528\u573a\u666f\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u3002",
        "\u8fd9\u6837\u7684\u95ee\u9898\u51fa\u73b0\u7684\u6982\u7387\u975e\u5e38\u4f4e\uff0c\u4f46\u662f\u4e00\u65e6\u51fa\u73b0\u6bd4\u8f83\u81f4\u547d",
        "\u4f60\u4eec\u96c6\u7fa4\u548c\u670d\u52a1\u6570\u91cf\u7684\u89c4\u6a21\u662f\u591a\u5c11\uff0c\u4f60\u4e0a\u9762\u7684cache\u6587\u4ef6\u8fdc\u9ad8\u4e8e\u4f60\u4eec\u5b9e\u9645\u7684\u670d\u52a1\u89c4\u6a21\u5417\uff1f\u4f60\u7684\u6ce8\u518c\u4e2d\u5fc3\u6587\u4ef6\u6837\u672c\u80fd\u63d0\u4f9b\u4e00\u90e8\u5206\u5417\uff1fdump\u7684\u5806\u6808\u4e5f\u63d0\u4f9b\u4e00\u4e0b\u3002\u8c22\u8c22",
        "\u76ee\u524d\u96c6\u7fa4\u670d\u52a1\u5668\u6570\u91cf\u53ea\u6709100\u53f0\u5de6\u53f3\uff0c\u5176\u4e2d\u6d88\u8d39\u8005\u548c\u63d0\u4f9b\u8005\u5927\u6982\u662f3:4\u7684\u6bd4\u7387\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0bcache\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff0c\u8fd9\u662f\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\u670d\u52a1\u7aef\u7684cache\u6587\u4ef6\uff1b\r\n\u6b63\u5e38\u7684cache\u6587\u4ef6\u5c31\u5982\u4e0b\u7684\u5185\u5bb9\uff0c\u95ee\u9898\u51fa\u73b0\u65f6\u7684cache\u6587\u4ef6\u5df2\u7ecf\u6709900M\uff0c\u8fdc\u9ad8\u4e8e\u5b9e\u9645\u670d\u52a1\u6b63\u5e38cache\u6587\u4ef6\u5927\u5c0f\r\n`#Dubbo Registry Cache\r\n#Wed Jul 06 18:15:53 CST 2016\r\nintegration-sc/com.th.mycompany.bms.reportform.api.OutpMedicalQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.OutpMedicalQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.OutpMedicalQueryService&methods\\=getMedicalAfterFootData,getMedicalFootData&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136425\r\nintegration-sc/com.th.mycompany.bms.inbill.api.ManualDiscountService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.ManualDiscountService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.ManualDiscountService&methods\\=discountFeeDetail,discountFeeGroup,findDiscountMoney,findBillItemGroup,findFeeDetailCount,findBillItemByPage&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133315\r\nintegration-sc/com.th.mycompany.bms.outbill.api.CardBizLogService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.CardBizLogService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.CardBizLogService&methods\\=saveCardBizLog&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130265\r\nintegration-sc/com.th.mycompany.external.emr.api.OutpOrdersChargeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.emr.api.OutpOrdersChargeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.emr.api.OutpOrdersChargeService&methods\\=outpOrdersChargeByApply,outpOrdersCharge,outpCharge,outpOrdersChargeByApplyAndDetail&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130702\r\nintegration-sc/com.th.mycompany.external.emr.api.ClinicAndPriceService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.emr.api.ClinicAndPriceService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.emr.api.ClinicAndPriceService&methods\\=findClinicGoodsPriceById,findClinicPriceListsByIdAndDept,findClinicPriceListsByIdAndDeptBatch,findClinicGoodsPriceByIdAndDept,findChargeItemsByClinicItemsForApplyBatch,findBillIngByCode,findClinicGoodsPriceByIdAndDeptBatchMap,findGoodsBasicInfosByClinicPriceId,findClinicPriceListsByIdAndDeptBatchMap,findClinicGoodsPriceByIdAndDeptBatch&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130931\r\nintegration-sc/com.th.mycompany.external.xml.api.AccountOuterService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.xml.api.AccountOuterService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.xml.api.AccountOuterService&methods\\=inpRecharge&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138548\r\nintegration-sc/com.th.mycompany.emr.cpoe.comm.DocumentQueryService=dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.DocumentQueryService&methods\\=findDocument,findDocumentDetailed,findMainDocument,findFeeItemsListByNo&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447736229 dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.DocumentQueryService&methods\\=findDocument,findDocumentDetailed,findMainDocument,findFeeItemsListByNo&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447777821 dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.DocumentQueryService&methods\\=findDocument,findDocumentDetailed,findMainDocument,findFeeItemsListByNo&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447733377 dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.DocumentQueryService&methods\\=findDocument,findDocumentDetailed,findMainDocument,findFeeItemsListByNo&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467687663042 dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.DocumentQueryService&methods\\=findDocument,findDocumentDetailed,findMainDocument,findFeeItemsListByNo&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447749637 override\\://0.0.0.0/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?category\\=configurators&dynamic\\=false&enabled\\=true&group\\=integration-sc&loadbalance\\=leastactive empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.comm.DocumentQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.comm.DocumentQueryService&methods\\=findDocument,findDocumentDetailed,findMainDocument,findFeeItemsListByNo&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437115832\r\nintegration-sc/com.th.mycompany.bms.common.api.PunishmentService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.PunishmentService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.PunishmentService&methods\\=getPunishmentReport&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137922\r\nintegration-sc/com.th.mycompany.emr.cpoe.out.DocumentExecService=dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.out.DocumentExecService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.out.DocumentExecService&methods\\=addDocumentExec&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447736299 dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.out.DocumentExecService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.out.DocumentExecService&methods\\=addDocumentExec&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447777936 dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.out.DocumentExecService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.out.DocumentExecService&methods\\=addDocumentExec&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447733464 dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.out.DocumentExecService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.out.DocumentExecService&methods\\=addDocumentExec&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467687663244 dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.out.DocumentExecService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.out.DocumentExecService&methods\\=addDocumentExec&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447749735 override\\://0.0.0.0/com.th.mycompany.emr.cpoe.out.DocumentExecService?category\\=configurators&dynamic\\=false&enabled\\=true&group\\=integration-sc&loadbalance\\=leastactive empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.out.DocumentExecService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.out.DocumentExecService&methods\\=addDocumentExec&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437119899\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BmsPaiVisitMapByWardCodeQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BmsPaiVisitMapByWardCodeQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BmsPaiVisitMapByWardCodeQueryService&methods\\=findNotInPaiVisitMapByWardCode&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134152\r\nintegration-sc/com.th.mycompany.bms.basic.inbill.PtsInPatientAdtLogInfoService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.inbill.PtsInPatientAdtLogInfoService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.inbill.PtsInPatientAdtLogInfoService&methods\\=findInPatientAdtLogInfoById&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132416\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService=dubbo\\://192.168.13.139\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService&methods\\=findInpPatAdtLogWithBedCode,findInPatientAdtWithDept,findInpPaiAdtLogWithTransferDate,findInpPatAllAdtLog,findInPatientAdtLogInfoById,findInPatientAdtInfoById&pid\\=29213&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436856384 dubbo\\://192.168.13.138\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService&methods\\=findInpPatAdtLogWithBedCode,findInPatientAdtWithDept,findInpPaiAdtLogWithTransferDate,findInpPatAllAdtLog,findInPatientAdtLogInfoById,findInPatientAdtInfoById&pid\\=3775&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436838884 dubbo\\://192.168.13.162\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService&methods\\=findInpPatAdtLogWithBedCode,findInPatientAdtWithDept,findInpPaiAdtLogWithTransferDate,findInpPatAllAdtLog,findInPatientAdtLogInfoById,findInPatientAdtInfoById&pid\\=23417&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686476 dubbo\\://192.168.13.161\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService&methods\\=findInpPatAdtLogWithBedCode,findInPatientAdtWithDept,findInpPaiAdtLogWithTransferDate,findInpPatAllAdtLog,findInPatientAdtLogInfoById,findInPatientAdtInfoById&pid\\=22888&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686323 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService&methods\\=findInpPatAdtLogWithBedCode,findInPatientAdtWithDept,findInpPaiAdtLogWithTransferDate,findInpPatAllAdtLog,findInPatientAdtLogInfoById,findInPatientAdtInfoById&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437118536 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientAdtQueryService&methods\\=findInpPatAdtLogWithBedCode,findInPatientAdtWithDept,findInpPaiAdtLogWithTransferDate,findInpPatAllAdtLog,findInPatientAdtLogInfoById,findInPatientAdtInfoById&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437118536\r\nintegration-sc/com.th.mycompany.bms.inbill.api.AddMaterialService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.AddMaterialService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.AddMaterialService&methods\\=findBillItemsByStandardItemCode,findChargeItemChilds,findMainItemByCodeOrNameAndPaiVisitId,saveMaterial,findChargeItemByClinicId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132277\r\nintegration-sc/com.th.mycompany.isms.storage.apply.service.IsmsTicketApplyNoticeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.apply.service.IsmsTicketApplyNoticeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.apply.service.IsmsTicketApplyNoticeService&methods\\=modifyIsmsTicketApplyNotice,getIsmsTicketApplyNoticeById,removeIsmsTicketApplyNotice,getIsmsTicketApplyNoticeListWithPagingCount,modifyIsmsTicketApplyNoticeByExample,getIsmsTicketApplyNoticeListWithPaging,addIsmsTicketApplyNotice&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139484\r\nintegration-sc/com.th.mycompany.emr.cpoe.in.OrderExecRecoService=dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.OrderExecRecoService&methods\\=addOrdExecReco&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447778118 dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.OrderExecRecoService&methods\\=addOrdExecReco&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447736362 dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.OrderExecRecoService&methods\\=addOrdExecReco&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467687663402 dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.OrderExecRecoService&methods\\=addOrdExecReco&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447749844 dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.OrderExecRecoService&methods\\=addOrdExecReco&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447733550 override\\://0.0.0.0/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?category\\=configurators&dynamic\\=false&enabled\\=true&group\\=integration-sc&loadbalance\\=leastactive empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.in.OrderExecRecoService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.in.OrderExecRecoService&methods\\=addOrdExecReco&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437121948\r\nintegration-sc/com.th.mycompany.bms.inbill.api.FootAfterSearchService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.FootAfterSearchService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.FootAfterSearchService&methods\\=findUsersByDate,getGroupFootData,getSettleInfo,findFiFoEmpByDate&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133647\r\nintegration-sc/com.th.mycompany.bms.inbill.api.SettleCheckService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.SettleCheckService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.SettleCheckService&methods\\=findChargeItemsByTime,checkUnhandleApplyByPaivistid,findDerateOrArrearageReasons,checkUnrekHistory,findBillItemsByPaiVisitId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133846\r\nintegration-sc/com.th.mycompany.bms.inbill.api.TicketMendService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.TicketMendService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.TicketMendService&methods\\=mendPosAndPrepaymentInv,findPayInfoByInvNo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131978\r\nintegration-sc/com.th.mycompany.external.presccharge.api.OutpChargeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.presccharge.api.OutpChargeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.presccharge.api.OutpChargeService&methods\\=outpDetailCharge&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138314\r\nintegration-sc/com.th.mycompany.bms.inbill.api.DoctorOrdersFeeBillingService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.DoctorOrdersFeeBillingService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.DoctorOrdersFeeBillingService&methods\\=doctorCpoeOrdCheckFeeBilling,getCpoeOrdUnBillingPatientIds,getCpoeOrdCheckFeeItemListByPatientInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timeout\\=300000&timestamp\\=1467437137055\r\nintegration-sc/com.th.mycompany.bms.inbill.api.ManySettlePrintService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.ManySettlePrintService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.ManySettlePrintService&methods\\=getInSettleBillRecordsVOs,assemblyPrintStringByList&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133783\r\nintegration-sc/com.th.mycompany.bms.reportform.api.FinancialAuditReportService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.FinancialAuditReportService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.FinancialAuditReportService&methods\\=financialAfterAccount,financialBeforeAccount&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136956\r\nintegration-sc/com.th.mycompany.isms.handaccount.service.IsmsStockSnapshotDetailService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.handaccount.service.IsmsStockSnapshotDetailService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.handaccount.service.IsmsStockSnapshotDetailService&methods\\=findIsmsStockSnapshotDetails,addIsmsStockSnapshotDetails&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437140372\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.BdsClinicPriceListService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.BdsClinicPriceListService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.BdsClinicPriceListService&methods\\=findBdsClinicPriceListByAnyCode,getBdsClinicPriceListByItemId,getBdsClinicPriceListByItemCodeOrgCode,findParentByChildCode,findBdsClinicPriceListByClinicId,getBdsClinicPriceListByItemCode,getBdsClinicPriceListByID,findCountByCode,getBdsClinicPriceListByItemCodes&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129487\r\nintegration-sc/com.th.mycompany.bms.inbill.api.RenewNoticeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.RenewNoticeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.RenewNoticeService&methods\\=findRenewNoticeList&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131384\r\nintegration-sc/com.th.mycompany.mips.external.api.InsuranceSearchService=dubbo\\://192.168.13.146\\:20880/com.th.mycompany.mips.external.api.InsuranceSearchService?anyhost\\=true&application\\=mips-server&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.mips.external.api.InsuranceSearchService&methods\\=getItemLevelCodeInfo,getInsuranceInfo&pid\\=32296&revision\\=0.3.81&side\\=provider&threads\\=100&timestamp\\=1467122687222 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.InsuranceSearchService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.InsuranceSearchService&methods\\=getItemLevelCodeInfo,getInsuranceInfo&pid\\=13403&revision\\=0.3.70&side\\=consumer&timeout\\=6000&timestamp\\=1467437117162 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.InsuranceSearchService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.InsuranceSearchService&methods\\=getItemLevelCodeInfo,getInsuranceInfo&pid\\=13403&revision\\=0.3.70&side\\=consumer&timeout\\=6000&timestamp\\=1467437117162\r\nintegration-sc/com.th.mycompany.bms.outbill.api.RefundService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.RefundService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.RefundService&methods\\=anotherCharge,refund,refundApply,revertRefundApply&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138644\r\nintegration-sc/com.th.mycompany.bms.reportform.api.OutpFootMergeQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.OutpFootMergeQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.OutpFootMergeQueryService&methods\\=getPersonalFootAfterInfo,getFootContentPersonalTotal&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136517\r\nintegration-sc/com.th.mycompany.bms.outbill.api.RechargeVoucherProcessService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.RechargeVoucherProcessService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.RechargeVoucherProcessService&methods\\=assemblyPrintDocument&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131230\r\nintegration-sc/com.th.mycompany.bms.outbill.api.CollateService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.CollateService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.CollateService&methods\\=findCollationTemplateDetailsListByExample,findCollationDetailsPagingByMap,importOutCityMedicareDeatils,downloadFile,manualCollationDetailsList,getXmlFile,autoCollateBusinessCompDetail,checkTimeRange,creatUploadsNewFile,findMedicareHangDate,createAttachsNewFile,getHangTotalAmount,findCollationHangeDetailsPagingByMap,getTotalAmount,hangCollationDetailsList,modifyCollationDetailsList,findAttachsFile&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timeout\\=360000&timestamp\\=1467437139019\r\nintegration-sc/com.th.mycompany.isms.storage.stock.service.IsmsTicketStockOutService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.stock.service.IsmsTicketStockOutService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.stock.service.IsmsTicketStockOutService&methods\\=saveAbolishOfOutDocu,saveUseOfOutDocu&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139257\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BmsForgeinInsuranceService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BmsForgeinInsuranceService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BmsForgeinInsuranceService&methods\\=findForeignInsurClass&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132813\r\nintegration-sc/com.th.mycompany.bms.common.api.PcaServiceProxy=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.PcaServiceProxy?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.PcaServiceProxy&methods\\=refundSchemeQuery,refundTreatment,guaranteeTreatment,rechargeTreatment,transferTreatment,paymentTreatment,changeGuaranteeTreatment,getOutpayPosInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437135106\r\nintegration-sc/com.th.mycompany.bms.common.api.MateriaBylClinicItemService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.MateriaBylClinicItemService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.MateriaBylClinicItemService&methods\\=findClinicGoodsPriceByIdAndDept,findPagedGoodsPriceByAnyCode,findPagedClinicGoodsPriceById&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437135273\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InPatientInfoService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InPatientInfoService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InPatientInfoService&methods\\=getInPatientInfoByPaiVisit,findALLPaiVisitListByPatientIdList,findALLPaiVisitListByPaiVisitIdList,modifyPatientChargeType,findInPatientInfo,getInPatientInfoByPid,getInPatientInfoByVisitId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131323\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.BdsCodeTableItemService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.BdsCodeTableItemService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.BdsCodeTableItemService&methods\\=findOrgCode,getBdsCodeTableItemsByStandardCode&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129282\r\nintegration-sc/com.th.mycompany.bms.inbill.api.SeparateSettleReceiptService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.SeparateSettleReceiptService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.SeparateSettleReceiptService&methods\\=findReceipts&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133255\r\nintegration-sc/com.th.mycompany.bms.inbill.api.NurseStationBillingService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.NurseStationBillingService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.NurseStationBillingService&methods\\=findChargeItemByCondition,findAllOrderTypes,findInCpoeOrdInfoChargeItems,findBillItemsClinicalItemIdByOrderId,findBillItemsByItemCode,findAllChargeItemTypes,findInCpoeOrdInfo,findFixedFeeChargeItems,findOrderChargeItems,findPatientInfosByParam,findBillItemsByOrderId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timeout\\=300000&timestamp\\=1467437133512\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BillingByPriceItemsService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BillingByPriceItemsService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BillingByPriceItemsService&methods\\=findBillIngBySpellCode,addItemTemplate,deleteTemplateDetailByIdList,findItemTemplateDetailsByTemplate,tempalateVsPrice,findBillIngByClinicId,saveItemTemplate,updateItemTemplate,deleteItemTemplate,modifyBmsItemTemplateDetail,getCountByCode,findItemplatesByDeptCode&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132638\r\nintegration-sc/com.th.mycompany.isms.storage.stock.service.IsmsTicketDeptService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.stock.service.IsmsTicketDeptService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.stock.service.IsmsTicketDeptService&methods\\=removeIsmsTicketDeptByMap,findSubDept,findIsmsTicketDeptListByMap,modifyIsmsTicketDept,addIsmsTicketDept&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437140086\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InBillingPricingService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InBillingPricingService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InBillingPricingService&methods\\=doPricingByOragnizationCode,doPricingAllOragnizations,executeJob&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138487\r\nintegration-sc/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService=dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447750618 dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467687676066 dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447736835 dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447778982 dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=1000000&timestamp\\=1467447734491 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437117996 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.comm.OutPathologyPrintService&methods\\=printExe&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437117996\r\nintegration-sc/com.th.mycompany.bms.inbill.api.DischargeSettleService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.DischargeSettleService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.DischargeSettleService&methods\\=findBillItemLogInfo,findNotBillPrepaymentRecords,checkSettleCondiction,findChargeItemGroupByPaiVisitId,findChargeItemsByOutOrgPrescNo,sumChargesByPaiVisitId,findSumChargeItemGroupByPaiVisitId,findChargeItemByTime,findInvRePrintInfos,findChargeItem&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132706\r\nintegration-sc/com.th.mycompany.isms.stock.inventory.service.IsmsInventoryResultService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.stock.inventory.service.IsmsInventoryResultService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.stock.inventory.service.IsmsInventoryResultService&methods\\=getInventoryResultVOs&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139803\r\nintegration-sc/com.th.mycompany.bms.reportform.api.OutpFootCommonQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.OutpFootCommonQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.OutpFootCommonQueryService&methods\\=getFootDate,getOutpFootOperator&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136340\r\nintegration-sc/com.th.mycompany.mips.external.api.RekRelSettlementInfoService=dubbo\\://192.168.13.146\\:20880/com.th.mycompany.mips.external.api.RekRelSettlementInfoService?anyhost\\=true&application\\=mips-server&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.mips.external.api.RekRelSettlementInfoService&methods\\=findSettlementInfoByRekId,findAportionByRekId,saveRekSettlementInfo,removeRekSettlementInfo&pid\\=32296&revision\\=0.3.81&side\\=provider&threads\\=100&timestamp\\=1467122687832 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.RekRelSettlementInfoService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.RekRelSettlementInfoService&methods\\=findSettlementInfoByRekId,findAportionByRekId,saveRekSettlementInfo,removeRekSettlementInfo&pid\\=13403&revision\\=0.3.70&side\\=consumer&timeout\\=6000&timestamp\\=1467437119675 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.RekRelSettlementInfoService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.RekRelSettlementInfoService&methods\\=findSettlementInfoByRekId,findAportionByRekId,saveRekSettlementInfo,removeRekSettlementInfo&pid\\=13403&revision\\=0.3.70&side\\=consumer&timeout\\=6000&timestamp\\=1467437119675\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.modify.in.PtsExtInPatientVisitSettleStatusModifyService=empty\\://192.168.13.121\\:20880/com.th.mycompany.pts.external.patient.api.modify.in.PtsExtInPatientVisitSettleStatusModifyService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.modify.in.PtsExtInPatientVisitSettleStatusModifyService&methods\\=cancelPaiVisit,changeSettleStatus&pid\\=13403&revision\\=0.32.12&side\\=provider&threads\\=200&timestamp\\=1467437135672\r\nintegration-sc/com.th.mycompany.bms.outbill.api.DrugsService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.DrugsService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.DrugsService&methods\\=findPagedDrugs,findChargeItemAttribute&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129612\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.BdsClinicPriceVsGoodsService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.BdsClinicPriceVsGoodsService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.BdsClinicPriceVsGoodsService&methods\\=findGoodsDetailByTubeType,findGoodDetailByItemCode,findGoodsBasicInfosByClinicPriceId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132553\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.ApplyOrderService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.ApplyOrderService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.ApplyOrderService&methods\\=findApplyPrintInfo,findApplyListByMap,findChargedApplyList,findApplyList&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129199\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService=dubbo\\://192.168.13.161\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService&methods\\=findInPatientVisit,findPcaPatientAllInfo,findPaiDiagnosisByExample,findEmrDoctorAllInPaiInfo,findInPatientVisitBySettle,findInPatientVisitInfoListOutOrg,findInPatientVisitInfoListCurrentOrg,findInPatientVisitInfoListByTeam,findALLPaiVisitListByPatientIdList,getInPatientCount,getInPatientVisitInfo,findPaiVisitCountWithNewInDeptDateAndDischargeDate,findALLPaiVisitListByPaiVisitIdList,inPatientVisitModify,findInPaiInfoByPatientId,findPaiVisitListWithNewInDeptDateAndDischargeDate,findInPatientVisitInfoOutNoArchive,findInPaiDiagnosisListByPaiVistIdList,getPatientCountQuant,findInPatientVisitList,findMyInPatientVisitInfoList,findInPatientSetVisit,findEmrPrintPaiVisitList,findSpecifiedInPatientVisitList&pid\\=22888&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686246 dubbo\\://192.168.13.139\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService&methods\\=findInPatientVisit,findPcaPatientAllInfo,findPaiDiagnosisByExample,findEmrDoctorAllInPaiInfo,findInPatientVisitBySettle,findInPatientVisitInfoListOutOrg,findInPatientVisitInfoListCurrentOrg,findALLPaiVisitListByPatientIdList,findInPatientVisitInfoListByTeam,getInPatientCount,getInPatientVisitInfo,findALLPaiVisitListByPaiVisitIdList,findPaiVisitCountWithNewInDeptDateAndDischargeDate,inPatientVisitModify,findInPaiInfoByPatientId,findPaiVisitListWithNewInDeptDateAndDischargeDate,findInPatientVisitInfoOutNoArchive,getPatientCountQuant,findInPaiDiagnosisListByPaiVistIdList,findInPatientVisitList,findMyInPatientVisitInfoList,findInPatientSetVisit,findEmrPrintPaiVisitList,findSpecifiedInPatientVisitList&pid\\=29213&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436856242 dubbo\\://192.168.13.138\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService&methods\\=findPcaPatientAllInfo,findInPatientVisit,findPaiDiagnosisByExample,findEmrDoctorAllInPaiInfo,findInPatientVisitBySettle,findInPatientVisitInfoListOutOrg,findInPatientVisitInfoListCurrentOrg,findALLPaiVisitListByPatientIdList,findInPatientVisitInfoListByTeam,getInPatientCount,findALLPaiVisitListByPaiVisitIdList,getInPatientVisitInfo,findPaiVisitCountWithNewInDeptDateAndDischargeDate,inPatientVisitModify,findInPaiInfoByPatientId,findPaiVisitListWithNewInDeptDateAndDischargeDate,findInPatientVisitInfoOutNoArchive,getPatientCountQuant,findInPaiDiagnosisListByPaiVistIdList,findInPatientVisitList,findMyInPatientVisitInfoList,findInPatientSetVisit,findSpecifiedInPatientVisitList,findEmrPrintPaiVisitList&pid\\=3775&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436838744 dubbo\\://192.168.13.162\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService&methods\\=findInPatientVisit,findPcaPatientAllInfo,findPaiDiagnosisByExample,findEmrDoctorAllInPaiInfo,findInPatientVisitBySettle,findInPatientVisitInfoListOutOrg,findInPatientVisitInfoListCurrentOrg,findInPatientVisitInfoListByTeam,findALLPaiVisitListByPatientIdList,getInPatientCount,getInPatientVisitInfo,findPaiVisitCountWithNewInDeptDateAndDischargeDate,findALLPaiVisitListByPaiVisitIdList,inPatientVisitModify,findInPaiInfoByPatientId,findPaiVisitListWithNewInDeptDateAndDischargeDate,findInPatientVisitInfoOutNoArchive,findInPaiDiagnosisListByPaiVistIdList,getPatientCountQuant,findInPatientVisitList,findMyInPatientVisitInfoList,findInPatientSetVisit,findEmrPrintPaiVisitList,findSpecifiedInPatientVisitList&pid\\=23417&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686391 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService&methods\\=findInPatientVisit,findPcaPatientAllInfo,findPaiDiagnosisByExample,findEmrDoctorAllInPaiInfo,findInPatientVisitInfoListOutOrg,findInPatientVisitBySettle,findInPatientVisitInfoListCurrentOrg,findInPatientVisitInfoListByTeam,findALLPaiVisitListByPatientIdList,getInPatientCount,getInPatientVisitInfo,findPaiVisitCountWithNewInDeptDateAndDischargeDate,findALLPaiVisitListByPaiVisitIdList,inPatientVisitModify,findInPaiInfoByPatientId,findPaiVisitListWithNewInDeptDateAndDischargeDate,findInPatientVisitInfoOutNoArchive,findInPaiDiagnosisListByPaiVistIdList,getPatientCountQuant,findInPatientVisitList,findMyInPatientVisitInfoList,findSpecifiedInPatientVisitList,findEmrPrintPaiVisitList&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437116586 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInPatientVisitQueryService&methods\\=findInPatientVisit,findPcaPatientAllInfo,findPaiDiagnosisByExample,findEmrDoctorAllInPaiInfo,findInPatientVisitInfoListOutOrg,findInPatientVisitBySettle,findInPatientVisitInfoListCurrentOrg,findInPatientVisitInfoListByTeam,findALLPaiVisitListByPatientIdList,getInPatientCount,getInPatientVisitInfo,findPaiVisitCountWithNewInDeptDateAndDischargeDate,findALLPaiVisitListByPaiVisitIdList,inPatientVisitModify,findInPaiInfoByPatientId,findPaiVisitListWithNewInDeptDateAndDischargeDate,findInPatientVisitInfoOutNoArchive,findInPaiDiagnosisListByPaiVistIdList,getPatientCountQuant,findInPatientVisitList,findMyInPatientVisitInfoList,findSpecifiedInPatientVisitList,findEmrPrintPaiVisitList&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437116586\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.PatientService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.PatientService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.PatientService&methods\\=getOutPatientInfoByPatientId,getPatientInfoByPatientId,getPatientInfoByCradNo,getOutPatientInfo,getPatientInfoByTrackData,getPatientInfoByCardNo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129343\r\nintegration-sc/com.th.mycompany.external.presccharge.api.InpPrescChargeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.presccharge.api.InpPrescChargeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.presccharge.api.InpPrescChargeService&methods\\=writeBackFeeStatus,refundPrescription,putPrescription,findCanRefundPrescription&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130637\r\nintegration-sc/com.th.mycompany.bms.outbill.api.BalanceService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.BalanceService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.BalanceService&methods\\=modifyBalancePrintState&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130361\r\nintegration-sc/com.th.mycompany.isms.storage.stock.service.IsmsTransferService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.stock.service.IsmsTransferService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.stock.service.IsmsTransferService&methods\\=findStock,transfer,fingTransfer&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437140273\r\nintegration-sc/com.th.mycompany.isms.storage.stock.service.IsmsTicketStockService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.stock.service.IsmsTicketStockService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.stock.service.IsmsTicketStockService&methods\\=findStockList,validation,getIsmsTicketStockNumber,findIsmsDocuRecordVOByExample,getMiniIsmsTicketStockVO,deleteInout,submitInoutNumber,findIsmsTicketStockVOList,findIsmsTicketStockList,findIsmsTicketStockVOCount,findIsmsDocuClassByType,getNextDocuCode&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139379\r\nintegration-sc/com.th.mycompany.bms.reportform.api.UnionpayTransactionQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.UnionpayTransactionQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.UnionpayTransactionQueryService&methods\\=findUnionpayTransactionInfo,printUnionpayTransactionInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137146\r\nintegration-sc/com.th.mycompany.bms.common.api.PmsParameterService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.PmsParameterService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.PmsParameterService&methods\\=getPmsParameterValue&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133909\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.modify.PtsModifyPaiVisitCostService=empty\\://192.168.13.121\\:20880/com.th.mycompany.pts.external.patient.api.modify.PtsModifyPaiVisitCostService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.modify.PtsModifyPaiVisitCostService&methods\\=ModifyPaiVisit&pid\\=13403&revision\\=0.32.12&side\\=provider&threads\\=200&timestamp\\=1467437135769\r\nintegration-sc/com.th.mycompany.bms.common.api.CommonBillInfoSerivce=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.CommonBillInfoSerivce?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.CommonBillInfoSerivce&methods\\=findPatCommonBillInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134647\r\nintegration-sc/com.th.mycompany.bms.outbill.api.RefundBillProcessorService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.RefundBillProcessorService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.RefundBillProcessorService&methods\\=saveRefundBillInfo,verifyApplyStatus,refundBill&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129730\r\nintegration-sc/com.th.mycompany.external.common.api.InpExternalChargeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.common.api.InpExternalChargeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.common.api.InpExternalChargeService&methods\\=refundFee,inpDetailCharge&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138400\r\nintegration-sc/com.th.mycompany.external.xml.api.BillOuterSearchService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.xml.api.BillOuterSearchService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.xml.api.BillOuterSearchService&methods\\=findPrepaymentByPatientInfos,findChargeItemByTimeFrame,getChargeItemByApply&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137744\r\nintegration-sc/com.th.mycompany.bms.outbill.api.OutBillChargeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.OutBillChargeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.OutBillChargeService&methods\\=findInspectionAreas&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129928\r\nintegration-sc/com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService=dubbo\\://192.168.13.146\\:20880/com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService?anyhost\\=true&application\\=mips-server&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService&methods\\=checkInsuranceType&pid\\=32296&revision\\=0.3.81&side\\=provider&threads\\=100&timestamp\\=1467122687328 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService&methods\\=checkInsuranceType&pid\\=13403&revision\\=0.3.70&side\\=consumer&timeout\\=6000&timestamp\\=1467437117295 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.MipsChargeTypeVsInsuranceTypeService&methods\\=checkInsuranceType&pid\\=13403&revision\\=0.3.70&side\\=consumer&timeout\\=6000&timestamp\\=1467437117295\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BmsForeignInsurRcptVsService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BmsForeignInsurRcptVsService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BmsForeignInsurRcptVsService&methods\\=checkForeignInsurRcptVsBylist&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132870\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InFootService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InFootService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InFootService&methods\\=getFootContentMedicalDetail,getOperatorInfos,getPcaUnsettleOperators,getPcaSettledOperators,findPrepayFootInfo,executeManualFoot,getUnsettleOperatorsDistinct,getFootContentPersonalTotal,footByOne&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133580\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BmsTypeVsClassDefaultMaintainService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BmsTypeVsClassDefaultMaintainService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BmsTypeVsClassDefaultMaintainService&methods\\=modifyBmsTypeVsClassDefault,findBmsTypeVsClassDefaultByWordbook&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134213\r\nintegration-sc/com.th.mycompany.bms.basic.inbill.InbillPatientInfoService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.inbill.InbillPatientInfoService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.inbill.InbillPatientInfoService&methods\\=findALLPaiVisitListByPatientIdList,findInPatientInfoByParam,findALLPaiVisitListByPaiVisitIdList,findInPatientInfoByPid,findInPatientInfoByOrgCode,getBedPriceCodeByPatientInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132114\r\nintegration-sc/com.th.mycompany.isms.storage.stock.service.IsmsDocuRecordService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.stock.service.IsmsDocuRecordService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.stock.service.IsmsDocuRecordService&methods\\=findDocuRecordsByMap&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437140460\r\nintegration-sc/com.th.mycompany.bms.inbill.api.SettlePaymentService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.SettlePaymentService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.SettlePaymentService&methods\\=getUnionpayAmount,toPrepay,toAccount,isUnionpayInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133169\r\nintegration-sc/com.th.mycompany.bms.reportform.api.OutpCardRecService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.OutpCardRecService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.OutpCardRecService&methods\\=getOutpPatRecByExample,getExcelDataByExample&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136054\r\nintegration-sc/com.th.mycompany.bms.common.api.AssemblyTemplateService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.AssemblyTemplateService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.AssemblyTemplateService&methods\\=assemblyPayOrgTemplate&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437135358\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InBillingApplyService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InBillingApplyService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InBillingApplyService&methods\\=findBmsInBillingApplyByDeptCode,saveInbillingApply,findInBillingApplyDetailByApply,checkOperatorJurisdiction,modifyInBillingApplyByApplyNo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133710\r\nintegration-sc/com.th.mycompany.bms.reportform.api.CostQueryPrintService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.CostQueryPrintService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.CostQueryPrintService&methods\\=getPatDeptFeeByExample,getCostQueryPrintInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437135947\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.InnerInsuranceService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.InnerInsuranceService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.InnerInsuranceService&methods\\=getInnerInsuranceInfoByContractNo,executeInnerInsuranceDecompose,getInnerInsuranceInfoByCardId&pid\\=1934&revision\\=0.20.4&side\\=provider&threads\\=200&timestamp\\=1465396219600\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InvManageInfoQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InvManageInfoQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InvManageInfoQueryService&methods\\=invInfoView&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134073\r\nintegration-sc/com.th.mycompany.bms.inbill.api.AccountUpdateService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.AccountUpdateService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.AccountUpdateService&methods\\=refundAccount&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134950\r\nintegration-sc/com.th.mycompany.bdsutil.api.ChargeCalculateOuterService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bdsutil.api.ChargeCalculateOuterService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bdsutil.api.ChargeCalculateOuterService&methods\\=chargeCalculate&pid\\=13403&revision\\=0.7.12&side\\=provider&threads\\=200&timestamp\\=1467437135861\r\nintegration-sc/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService=dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447734407 dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467687675078 dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447778910 dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447736766 dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447750551 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437117431 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.comm.OrderDurgQueryService&methods\\=findDurgDetailed&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437117431\r\nintegration-sc/com.th.mycompany.bms.common.api.BmsInsuranceSearchService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.BmsInsuranceSearchService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.BmsInsuranceSearchService&methods\\=checkInsuranceType,setPharmInsuranceLevel,setOutChargeItemsInsuranceTypeAndLevel,setChargeItemsInsuranceType,setChargeItemsInsuranceTypeAndLevel&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138115\r\nintegration-sc/com.th.mycompany.bms.outbill.api.BusinessSequenceBuilderService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.BusinessSequenceBuilderService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.BusinessSequenceBuilderService&methods\\=builderBusinessSequenceRushBranchNo,builderBusinessSequenceBranchNo,builderBusinessSequenceOutInvNo,builderBusinessSequenceInvNo,builderBusinessSequenceCancBranchNo,builderBusinessSequenceApplyNo,builderBusinessSequencePosBranchNo,builderBusinessSequence,builderBusinessSequenceSettle,builderBusinessSequenceV,builderBusinessSequenceOutReceiptNo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130306\r\nintegration-sc/com.th.mycompany.bms.common.api.FootValidateService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.FootValidateService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.FootValidateService&methods\\=findFootInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437135024\r\nintegration-sc/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService=dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447778453 dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447733737 dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467687663915 dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447736516 dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447750120 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437119576 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.in.EmrOutOrgPrescQueryService&methods\\=getOutOrgPrescNos&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437119576\r\nintegration-sc/com.th.mycompany.bms.inbill.api.RefundChargeItemService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.RefundChargeItemService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.RefundChargeItemService&methods\\=saveRefundApplys,findRpctApplyTypes,getChargeItemsCount,getBillingApplyVOs,getReportResultVOByApplyNo,getChargeItems&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137226\r\nintegration-sc/com.th.mycompany.bms.outbill.api.OutSettleService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.OutSettleService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.OutSettleService&methods\\=queryPatientRekItems,chargeItemsRekByChargedAppl,chargeItemsRek&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134814\r\nintegration-sc/com.th.mycompany.bms.inbill.api.RecordByOperatorService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.RecordByOperatorService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.RecordByOperatorService&methods\\=findPrePayItemByOperator,findChargeDetailByOperator&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133378\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService=dubbo\\://192.168.13.138\\:20880/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService&methods\\=findOutPatientVisitInfoList,notwithdrawRegFlag,findOutPatientVisitInfoByDate,findOutPatientList,findOutpPatientVisitCountByMap,findOutpPatientVisitInfoListByCard,withdrawnRegFlag&pid\\=3775&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436839423 dubbo\\://192.168.13.161\\:20880/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService&methods\\=findOutPatientVisitInfoList,notwithdrawRegFlag,findOutPatientVisitInfoByDate,findOutpPatientVisitCountByMap,findOutPatientList,findOutpPatientVisitInfoListByCard,withdrawnRegFlag&pid\\=22888&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686674 dubbo\\://192.168.13.162\\:20880/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService&methods\\=findOutPatientVisitInfoList,notwithdrawRegFlag,findOutPatientVisitInfoByDate,findOutpPatientVisitCountByMap,findOutPatientList,findOutpPatientVisitInfoListByCard,withdrawnRegFlag&pid\\=23417&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686818 dubbo\\://192.168.13.139\\:20880/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService&methods\\=findOutPatientVisitInfoList,notwithdrawRegFlag,findOutPatientVisitInfoByDate,findOutPatientList,findOutpPatientVisitCountByMap,findOutpPatientVisitInfoListByCard,withdrawnRegFlag&pid\\=29213&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436857092 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService&methods\\=findOutPatientVisitInfoList,notwithdrawRegFlag,findOutPatientVisitInfoByDate,findOutpPatientVisitCountByMap,findOutPatientList,findOutpPatientVisitInfoListByCard,withdrawnRegFlag&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437119283 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.out.PtsExtOutPatientVisitQueryService&methods\\=findOutPatientVisitInfoList,notwithdrawRegFlag,findOutPatientVisitInfoByDate,findOutpPatientVisitCountByMap,findOutPatientList,findOutpPatientVisitInfoListByCard,withdrawnRegFlag&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437119283\r\nintegration-sc/com.th.mycompany.isms.stock.inventory.service.IsmsInventoryRecordService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.stock.inventory.service.IsmsInventoryRecordService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.stock.inventory.service.IsmsInventoryRecordService&methods\\=getInventoryRecordsCount,getInventoryRecords&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139891\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService=dubbo\\://192.168.13.138\\:20880/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService&methods\\=findPatientVisitInfoByPaiId,getPatientVisitInfoByCard,findPatientVisitInfoByCard&pid\\=3775&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436839672 dubbo\\://192.168.13.162\\:20880/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService&methods\\=findPatientVisitInfoByPaiId,getPatientVisitInfoByCard,findPatientVisitInfoByCard&pid\\=23417&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686985 dubbo\\://192.168.13.161\\:20880/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService&methods\\=findPatientVisitInfoByPaiId,getPatientVisitInfoByCard,findPatientVisitInfoByCard&pid\\=22888&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686842 dubbo\\://192.168.13.139\\:20880/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService&methods\\=findPatientVisitInfoByPaiId,getPatientVisitInfoByCard,findPatientVisitInfoByCard&pid\\=29213&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436857446 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService&methods\\=findPatientVisitInfoByPaiId,getPatientVisitInfoByCard,findPatientVisitInfoByCard&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437116973 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.PatientVisitMapInfoQueryService&methods\\=findPatientVisitInfoByPaiId,getPatientVisitInfoByCard,findPatientVisitInfoByCard&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437116973\r\nintegration-sc/com.th.mycompany.bms.common.api.AddApplyChargeRecService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.AddApplyChargeRecService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.AddApplyChargeRecService&methods\\=addApplyChargeRec&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134729\r\nintegration-sc/com.th.mycompany.external.emr.api.InOrdersBillingService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.emr.api.InOrdersBillingService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.emr.api.InOrdersBillingService&methods\\=inOrdersRefundByApply,inOrdersBillingByApply,inOrderBillingByApplys&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130772\r\nintegration-sc/com.th.mycompany.bms.outbill.api.BillService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.BillService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.BillService&methods\\=getClinicalVSChargeItem,getPrescriptionVSChargeItem,getWesternMedicineBag,getDecomposeInfo,getApplyOrderVSChargeItem,chargeItemRek,getIsAllowCharge,findChargedItemsByApplyOrderInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129547\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.ClinicItemService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.ClinicItemService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.ClinicItemService&methods\\=findClinicGoodsPriceById,findPriceListsByClinicItem,findPriceListsByClinicItemBatch,findBdsClinicItemByIds,findBdsClinicItemByCodes,findPagedClinicGoodsPriceById,findPagedCheckClinicItems,getClinicIdByClinicCode,findClinicGoodsPriceByIdAndDeptBatch,findBdsClinicItemPropertiesByItemcode,findGoodsBasicInfoByCode,findPagedClinicItems,findClinicGoodsPriceByIdAndDept,findPagedClinicGoodsInfoByAnyCode,findBdsClinicItemById,findBdsClinicPriceListByItemCode&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129405\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService=dubbo\\://192.168.13.162\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService&methods\\=getBedInfo,getBedBasicInfo&pid\\=23417&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686553 dubbo\\://192.168.13.139\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService&methods\\=getBedInfo,getBedBasicInfo&pid\\=29213&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436856488 dubbo\\://192.168.13.138\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService&methods\\=getBedInfo,getBedBasicInfo&pid\\=3775&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436838979 dubbo\\://192.168.13.161\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService&methods\\=getBedInfo,getBedBasicInfo&pid\\=22888&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686383 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService&methods\\=getBedInfo,getBedBasicInfo&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437116806 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PtsExtInBedInfoQueryService&methods\\=getBedInfo,getBedBasicInfo&pid\\=13403&revision\\=0.32.12&side\\=consumer&timestamp\\=1467437116806\r\nintegration-sc/com.th.mycompany.bms.outbill.api.BizToInvService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.BizToInvService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.BizToInvService&methods\\=updateInvCanc,getRekByCardNo,findInvPatientInfoByBranchNo,findInvPatientInfoByCardNo,findPayInfosByRekId,findInvPatientInfoByPatientId,updateInvByBranchNo,findBillItemListByBranchNo,getPatientIdByBranchNo,saveInvBillInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130208\r\nintegration-sc/com.th.mycompany.bms.outbill.api.PriceListVsChargeItemService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.PriceListVsChargeItemService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.PriceListVsChargeItemService&methods\\=findChargeItemsByClinicItems,findChargeItemsBySheetList&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129868\r\nintegration-sc/com.th.mycompany.bms.outbill.api.OutFootService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.OutFootService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.OutFootService&methods\\=getFootUnionPay,getFootContentBill,getPcaUnsettleOperators,getFootAuditInfo,getPcaSettledOperators,executeManualFoot,getFootRekDetail,getUnsettleOperatorsDistinct,getAllToFootOperatorsManual,getFootContentPersonalTotal,footByOne&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130098\r\nintegration-sc/com.th.mycompany.emr.patient.PatientDiagnosisService=dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.patient.PatientDiagnosisService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-5&interface\\=com.th.mycompany.emr.patient.PatientDiagnosisService&methods\\=findDiagnosis&pid\\=29524&revision\\=0.5.7&side\\=provider&threadpool\\=cached&threads\\=100&timestamp\\=1445025278063 dubbo\\://192.168.13.140\\:20880/com.th.mycompany.emr.patient.PatientDiagnosisService?anyhost\\=true&application\\=sde-server&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-5&interface\\=com.th.mycompany.emr.patient.PatientDiagnosisService&methods\\=findDiagnosis&pid\\=14795&revision\\=0.5.6&side\\=provider&threads\\=100&timestamp\\=1445025366652 dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.patient.PatientDiagnosisService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-5&interface\\=com.th.mycompany.emr.patient.PatientDiagnosisService&methods\\=findDiagnosis&pid\\=19864&revision\\=0.5.7&side\\=provider&threadpool\\=cached&threads\\=100&timestamp\\=1445025284854 dubbo\\://192.168.13.141\\:20880/com.th.mycompany.emr.patient.PatientDiagnosisService?anyhost\\=true&application\\=sde-server&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-5&interface\\=com.th.mycompany.emr.patient.PatientDiagnosisService&methods\\=findDiagnosis&pid\\=30354&revision\\=0.5.6&side\\=provider&threads\\=100&timestamp\\=1445025349265 empty\\://192.168.13.121/com.th.mycompany.emr.patient.PatientDiagnosisService?application\\=bms-service&category\\=configurators&default.check\\=false&dubbo\\=2.5.4-thzk-5&group\\=integration-sc&interface\\=com.th.mycompany.emr.patient.PatientDiagnosisService&methods\\=findDiagnosis&pid\\=4350&revision\\=0.4.7&side\\=consumer&timeout\\=1000000&timestamp\\=1445025286591 empty\\://192.168.13.121/com.th.mycompany.emr.patient.PatientDiagnosisService?application\\=bms-service&category\\=routers&default.check\\=false&dubbo\\=2.5.4-thzk-5&group\\=integration-sc&interface\\=com.th.mycompany.emr.patient.PatientDiagnosisService&methods\\=findDiagnosis&pid\\=4350&revision\\=0.4.7&side\\=consumer&timeout\\=1000000&timestamp\\=1445025286591\r\nintegration-sc/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService=dubbo\\://192.168.13.137\\:20880/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=3036&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467687663763 dubbo\\://192.168.13.163\\:20880/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=21435&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447736473 dubbo\\://192.168.13.136\\:20880/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=27772&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447778376 dubbo\\://192.168.13.164\\:20880/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=10619&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447733695 dubbo\\://192.168.13.143\\:20880/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?anyhost\\=true&application\\=emr-out-doctor-service&default.group\\=integration-sc&default.retries\\=0&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=9344&revision\\=0.21.19&side\\=provider&threadpool\\=cached&threads\\=200&timeout\\=100000&timestamp\\=1467447750046 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437121616 empty\\://192.168.13.121/com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.emr.cpoe.in.InOrderCheckedQueryService&methods\\=getCheckedInOrder&pid\\=13403&revision\\=0.21.7&side\\=consumer&timestamp\\=1467437121616\r\nintegration-sc/com.th.mycompany.pds.external.api.AdapterPrescMessageExtService=dubbo\\://192.168.13.131\\:20880/com.th.mycompany.pds.external.api.AdapterPrescMessageExtService?anyhost\\=true&application\\=pds-server&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pds.external.api.AdapterPrescMessageExtService&methods\\=findPrescAuditStatusBatch,findPrescAuditStResult&pid\\=17996&retries\\=0&revision\\=0.20.8&side\\=provider&threads\\=200&timeout\\=10000&timestamp\\=1467631938388 dubbo\\://192.168.13.130\\:20880/com.th.mycompany.pds.external.api.AdapterPrescMessageExtService?anyhost\\=true&application\\=pds-server&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pds.external.api.AdapterPrescMessageExtService&methods\\=findPrescAuditStatusBatch,findPrescAuditStResult&pid\\=17598&retries\\=0&revision\\=0.20.8&side\\=provider&threads\\=200&timeout\\=10000&timestamp\\=1467631900810 empty\\://192.168.13.121/com.th.mycompany.pds.external.api.AdapterPrescMessageExtService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pds.external.api.AdapterPrescMessageExtService&methods\\=findPrescAuditStatusBatch,findPrescAuditStResult&pid\\=13403&revision\\=0.16.2&side\\=consumer&timeout\\=10000&timestamp\\=1467437122209 empty\\://192.168.13.121/com.th.mycompany.pds.external.api.AdapterPrescMessageExtService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pds.external.api.AdapterPrescMessageExtService&methods\\=findPrescAuditStatusBatch,findPrescAuditStResult&pid\\=13403&revision\\=0.16.2&side\\=consumer&timeout\\=10000&timestamp\\=1467437122209\r\nintegration-sc/com.th.mycompany.mips.external.api.AuditDischargeService=dubbo\\://192.168.13.146\\:20880/com.th.mycompany.mips.external.api.AuditDischargeService?anyhost\\=true&application\\=mips-server&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.mips.external.api.AuditDischargeService&methods\\=cancelAuditDischarge&pid\\=32296&revision\\=0.3.81&side\\=provider&threads\\=100&timestamp\\=1467122688783 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.AuditDischargeService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.AuditDischargeService&methods\\=cancelAuditDischarge&pid\\=13403&revision\\=0.3.70&side\\=consumer&timestamp\\=1467437119792 empty\\://192.168.13.121/com.th.mycompany.mips.external.api.AuditDischargeService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.mips.external.api.AuditDischargeService&methods\\=cancelAuditDischarge&pid\\=13403&revision\\=0.3.70&side\\=consumer&timestamp\\=1467437119792\r\nintegration-sc/com.th.mycompany.bms.common.api.RechargeOperationService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.RechargeOperationService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.RechargeOperationService&methods\\=refundTreatment,reCharge&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437135211\r\nintegration-sc/com.th.mycompany.bms.inbill.api.DiscountService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.DiscountService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.DiscountService&methods\\=getCountByPatientId,getDiscountCost,discountChargeItems,findInPatientAdtLogInfoById,findBillItemByPage&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132357\r\nintegration-sc/com.th.mycompany.bms.basic.bds.api.BdsOrganizationService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.bds.api.BdsOrganizationService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.bds.api.BdsOrganizationService&methods\\=findOragnizationsInfo,findPagedOrganizations&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131143\r\nintegration-sc/com.th.mycompany.bms.reportform.api.OutpPrePayAccountQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.OutpPrePayAccountQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.OutpPrePayAccountQueryService&methods\\=getPrepayBeforeAccountData,getPrepayAfterAccountData&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136242\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InvoiceManagerService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InvoiceManagerService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InvoiceManagerService&methods\\=validation,getIsmsTicketStockNumber,findAllTicketDictionary,updateInvoice,findInvoiceBySearchDTO,saveUseOfOutDocu,findInvoiceCountBySearchDTO,findFineTicketDictionary,cancelInvoice,getMiniIsmsTicketStockVO&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134007\r\nintegration-sc/com.th.mycompany.bms.common.api.ApplyToChargeItemService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.ApplyToChargeItemService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.ApplyToChargeItemService&methods\\=mappingToChargeItem&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137328\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BmsBedFeeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BmsBedFeeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BmsBedFeeService&methods\\=getBmsBedFeeItemSeq,addBmsBedFeeMaster,saveBmsBedFeeItem,deleteBmsFeeMasterById,findBmsBedFeeItemById,getBmsBedFeeMasterSeq,findBmsBedFeeItemByMasterId,saveBmsBedFeeMaster,addBmsBedFeeItem,findBmsBedFeeMasterInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138804\r\nintegration-sc/com.th.mycompany.bms.inbill.api.UnionPayService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.UnionPayService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.UnionPayService&methods\\=findPayInfoByInvNo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132052\r\nintegration-sc/com.th.mycompany.bms.outbill.api.BillPrintService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.BillPrintService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.BillPrintService&methods\\=getDocument&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130408\r\nintegration-sc/com.th.mycompany.bms.basic.inbill.InbillTransactionRecordQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.basic.inbill.InbillTransactionRecordQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.basic.inbill.InbillTransactionRecordQueryService&methods\\=findPcaTransactionInfoByPaiId,queryRefundApplyRecordsByBalanceSn&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136781\r\nintegration-sc/com.th.mycompany.bms.inbill.api.InvoiceOvertypeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.InvoiceOvertypeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.InvoiceOvertypeService&methods\\=cancelInv,invoiceOvertype,checkInviceDate,numberToCN&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131912\r\nintegration-sc/com.th.mycompany.external.xml.api.BillOuterService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.xml.api.BillOuterService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.xml.api.BillOuterService&methods\\=clinicItemBilling,outpChargeItemRek,inpChargeItemRek,refundBill&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137654\r\nintegration-sc/com.th.mycompany.bms.inbill.api.PayModeMaintainService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.PayModeMaintainService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.PayModeMaintainService&methods\\=findPayModeList&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133004\r\nintegration-sc/com.th.mycompany.bms.reportform.api.RechargeRecodePrintService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.RechargeRecodePrintService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.RechargeRecodePrintService&methods\\=printRechargeInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136868\r\nintegration-sc/com.th.mycompany.external.emr.api.OrdersInfoService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.emr.api.OrdersInfoService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.emr.api.OrdersInfoService&methods\\=findReferenceAmountByDurgInfo,findChargedApplyByApplyNo,findChargedApplyByAppNo,getApplyDetailByApply,findChargedApplyByAppNoInner&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130836\r\nintegration-sc/com.th.mycompany.bms.outbill.api.PatiSnapshotInfoService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.PatiSnapshotInfoService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.PatiSnapshotInfoService&methods\\=getPatiSnapshotInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129989\r\nintegration-sc/com.th.mycompany.bms.reportform.api.DayReceiptsPrintService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.DayReceiptsPrintService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.DayReceiptsPrintService&methods\\=getDayReceiptsPrintInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136610\r\nintegration-sc/com.th.mycompany.isms.baseinfo.dictionary.service.IsmsTicketDictionaryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.baseinfo.dictionary.service.IsmsTicketDictionaryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.baseinfo.dictionary.service.IsmsTicketDictionaryService&methods\\=addIsmsDictionaryUnit,removeDictionaryUnit,findIsmsTicketDictionaryCountByExample,modifyIsmsTicketDictionary,findDeptTicketDictionary,removeIsmsTicketDictionary,getIsmsTicketDictionaryById,findIsmsTicketDictionaryList,removeIsmsDictionaryVersion,addIsmsTicketDictionary,addIsmsIsmsDictionaryVersion&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139597\r\nintegration-sc/com.th.mycompany.bms.inbill.api.UnionpayUnilateralService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.UnionpayUnilateralService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.UnionpayUnilateralService&methods\\=getUnionpayUnilateralInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131840\r\nintegration-sc/com.th.mycompany.bms.outbill.api.BillPrintProcessService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.BillPrintProcessService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.BillPrintProcessService&methods\\=rePrintInvoice,rePrintInvoiceChargeItems,checkChargeItemIsPrint,assemblyPrintDocument,getRekByRekNeg,cancelOutBillInvoice,cancelInvoice&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130151\r\nintegration-sc/com.th.mycompany.external.classifier.ClassifierService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.classifier.ClassifierService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.classifier.ClassifierService&methods\\=addChargeItem,injectClassifier,getClassifier&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134284\r\nintegration-sc/com.th.mycompany.external.common.api.InBillingFeeSearchService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.common.api.InBillingFeeSearchService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.common.api.InBillingFeeSearchService&methods\\=getPresettleTotalFeeByPaiAndDept,compareFixedFeeByPaiAndWard&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131616\r\nintegration-sc/com.th.mycompany.isms.baseinfo.dictionary.service.IsmsTicketDictionaryOutService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.baseinfo.dictionary.service.IsmsTicketDictionaryOutService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.baseinfo.dictionary.service.IsmsTicketDictionaryOutService&methods\\=findAllTicketDictionary,findFineTicketDictionary&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139718\r\nintegration-sc/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService=dubbo\\://192.168.13.162\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService&methods\\=findPaiVisitMapByWardCode,findPaiVisitMapByNurseUnit&pid\\=23417&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255687045 dubbo\\://192.168.13.138\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService&methods\\=findPaiVisitMapByWardCode,findPaiVisitMapByNurseUnit&pid\\=3775&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436839760 dubbo\\://192.168.13.139\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService&methods\\=findPaiVisitMapByWardCode,findPaiVisitMapByNurseUnit&pid\\=29213&revision\\=0.36.6&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467436857558 dubbo\\://192.168.13.161\\:20880/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService?anyhost\\=true&application\\=pts-service&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService&methods\\=findPaiVisitMapByWardCode,findPaiVisitMapByNurseUnit&pid\\=22888&revision\\=0.36.3&side\\=provider&threadpool\\=cached&threads\\=200&timestamp\\=1467255686901 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService?application\\=bms-service&category\\=configurators&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService&methods\\=findPaiVisitMapByWardCode,findPaiVisitMapByNurseUnit&pid\\=13403&revision\\=0.32.12&side\\=consumer&timeout\\=1000000&timestamp\\=1467437118985 empty\\://192.168.13.121/com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService?application\\=bms-service&category\\=routers&default.check\\=false&default.retries\\=0&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.pts.external.patient.api.query.in.PaiVisitMapByWardCodeQueryService&methods\\=findPaiVisitMapByWardCode,findPaiVisitMapByNurseUnit&pid\\=13403&revision\\=0.32.12&side\\=consumer&timeout\\=1000000&timestamp\\=1467437118985\r\nintegration-sc/com.th.mycompany.bms.inbill.api.AccountOprationService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.AccountOprationService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.AccountOprationService&methods\\=updateOverdraftAmountBypaiVisitId,modifyPrepaymentOverdraftReserve,queryAllAccountOverdraft,queryAccountOverdraft,findAccountOverdraft&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134458\r\nintegration-sc/com.th.mycompany.isms.storage.stock.service.IsmsSignService=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.storage.stock.service.IsmsSignService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.storage.stock.service.IsmsSignService&methods\\=sign,getSignData&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437140176\r\nintegration-sc/com.th.mycompany.external.presccharge.api.OutpPrescChargeService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.presccharge.api.OutpPrescChargeService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.presccharge.api.OutpPrescChargeService&methods\\=updatePerformedByExternalIds,findCanRefundPrescriptionForOut&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130576\r\nintegration-sc/com.th.mycompany.external.presccharge.api.OutpPrescRefundService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.presccharge.api.OutpPrescRefundService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.presccharge.api.OutpPrescRefundService&methods\\=addRefundApply,addRefundApplyForApplies&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131056\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BillQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BillQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BillQueryService&methods\\=getNewInDate,findBillItemAndOrderViewByOrderId,findChargeItemByView,findFeeOrderedByOrPerfomdeBy&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138219\r\nintegration-sc/com.th.mycompany.isms.stock.inventory.service.IsmsInventoryHandleServer=empty\\://192.168.13.121\\:20880/com.th.mycompany.isms.stock.inventory.service.IsmsInventoryHandleServer?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&interface\\=com.th.mycompany.isms.stock.inventory.service.IsmsInventoryHandleServer&methods\\=submit,findActual,findInventory,addInventory&pid\\=13403&revision\\=0.0.19&side\\=provider&threads\\=200&timestamp\\=1467437139978\r\nintegration-sc/com.th.mycompany.bms.inbill.api.SettleSaveService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.SettleSaveService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.SettleSaveService&methods\\=disChargeSettle&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132209\r\nintegration-sc/com.th.mycompany.bms.inbill.api.BillInputDiscountService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.BillInputDiscountService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.BillInputDiscountService&methods\\=refundMaterialIsOk,checkMaterialIsEnough,billRefundOneByOne&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131706\r\nintegration-sc/com.th.mycompany.bms.inbill.api.PrepaymentPayService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.PrepaymentPayService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.PrepaymentPayService&methods\\=findValidPrepaymentOverdraftReserves,findPrepaymentOverdraftReserveListByGuarantee,getPaymentAbolishInfoByInvNo,findPrepaymentOverdraftList,findPrepaymentRecords,getPrepayments,checkCreditAmountOverproof,findPrepaymentOverdraftListByEmp,findPrePaymentListBySearchDTO,findEmployeeGuaranteeDictsByName,findChequeBanks,findPrepaymentOverdraftReserves&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131464\r\nintegration-sc/com.th.mycompany.bms.inbill.api.AppFormBillingService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.AppFormBillingService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.AppFormBillingService&methods\\=findChargedItemsByApplyOrderInfos,findAllApplyTypes,findChargedItemsByApplyOrderInfo,chargeBillingCore&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133440\r\nintegration-sc/com.th.mycompany.bms.inbill.api.PriceMaintainService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.PriceMaintainService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.PriceMaintainService&methods\\=findBmsPriceLists,deletePriceList,saveBmsPriceList,findBmsPriceListsCount&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132492\r\nintegration-sc/com.th.mycompany.external.fixed.api.FixedFeeQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.fixed.api.FixedFeeQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.fixed.api.FixedFeeQueryService&methods\\=findAllFixedFeeCommbo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138719\r\nintegration-sc/com.th.mycompany.bms.common.api.DiscountHandlerService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.DiscountHandlerService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.DiscountHandlerService&methods\\=registerDicountHandle,inpDiscountHandle,outpDiscountHandle&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437137834\r\nintegration-sc/com.th.mycompany.bms.reportform.api.ReceiptQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.ReceiptQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.ReceiptQueryService&methods\\=findReceiptContentByBranchNo,findPrepaidInfo,findRekReceiptByPatientInfo,findRefundApplyInfo,findPaymentContent&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136151\r\nintegration-sc/com.th.mycompany.bms.common.api.PhamService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.PhamService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.PhamService&methods\\=findFactorListByID,setPhamPrice,findVPhamInfoPagingByVPhamInfos&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timeout\\=6000&timestamp\\=1467437138016\r\nintegration-sc/com.th.mycompany.external.common.api.PrepaymentExternalService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.common.api.PrepaymentExternalService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.common.api.PrepaymentExternalService&methods\\=findPrepaymentByPatientInfos,querySettleRequisitionInfo,queryPatientChargeInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131529\r\nintegration-sc/com.th.mycompany.bms.inbill.api.RefundCreditCardService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.RefundCreditCardService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.RefundCreditCardService&methods\\=getPrintResultByConfig,saveRefundApply,findUnionpayInfoByPaiVisitId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437133070\r\nintegration-sc/com.th.mycompany.external.register.api.RegisterService=empty\\://192.168.13.121\\:20880/com.th.mycompany.external.register.api.RegisterService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.external.register.api.RegisterService&methods\\=findRecordPayByCountAndCardNo,refundByRekNo,getPriceByCodeandAreaCode,registerCharge,findPriceByCodeandAreaCode&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437130471\r\nintegration-sc/com.th.mycompany.bms.common.api.InnerInsuranceService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.common.api.InnerInsuranceService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.common.api.InnerInsuranceService&methods\\=cancelRegister,findChargePriceSpecialDictByLists,getInnerInsuranceInfoByStr,registerFeeDetail,findFeeDetailCount,findRegisterMoney,findBillItemByPage&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437138906\r\nintegration-sc/com.th.mycompany.bms.inbill.api.CancelSettleService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.CancelSettleService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.CancelSettleService&methods\\=cancChargeRek,getRekPatientInfo,findPayInfoByRekId,findChargeItemByBranchNo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437132929\r\nintegration-sc/com.th.mycompany.bms.outbill.api.ArrearageService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.ArrearageService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.ArrearageService&methods\\=findOperatorClosingAccountInfo,refundCharges,findAllArrearageSettleInfo,closingAccount,findChargeItemOrGroupByRekId,findArrearageSettleInfo&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129789\r\nintegration-sc/com.th.mycompany.bms.reportform.api.OutpInvoiceReportQueryService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.reportform.api.OutpInvoiceReportQueryService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.reportform.api.OutpInvoiceReportQueryService&methods\\=findInvoiceReport&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437136696\r\nintegration-sc/com.th.mycompany.bms.inbill.api.ClassifyDetailMaintainService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.ClassifyDetailMaintainService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.ClassifyDetailMaintainService&methods\\=deleteClassifyDetailById,addClassCodeProcess,modifyDetails,findClassifyDetailPageByDetailCode,findBdsCodeTableItemByCode,findClassifyCountByDetailCode&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134394\r\nintegration-sc/com.th.mycompany.bms.inbill.api.PrepaymentPayProcessorService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.PrepaymentPayProcessorService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.PrepaymentPayProcessorService&methods\\=checkSinglePrePaymentAccount,translatorPayInfo,savePrepaymentPayInfo,cancelPrePaymentPay,cancelPrepaymentOverdraftReserveByBalanceSn,cancelPrepaymentOverdraftReserve,savePrepaymentOverdraftReserve&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437131773\r\nintegration-sc/com.th.mycompany.bms.outbill.api.RefundApplyService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.outbill.api.RefundApplyService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.outbill.api.RefundApplyService&methods\\=getRefundInfoByRekNo,getRefundInfoByRekNoForRefund,getRefundApplyList,findChargeItemsByRekIdAndPerformedBy,findPerformedRekRecordsBySearchRekDTO,getRefundInfoByRefundApplyId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437129667\r\nintegration-sc/com.th.mycompany.bms.inbill.api.SttleFeesReviewService=empty\\://192.168.13.121\\:20880/com.th.mycompany.bms.inbill.api.SttleFeesReviewService?anyhost\\=true&application\\=bms-service&category\\=configurators&check\\=false&default.group\\=integration-sc&default.service.filter\\=-exception,frameworkExceptionFilter&default.timeout\\=10000&dubbo\\=2.5.4-thzk-6&group\\=integration-sc&interface\\=com.th.mycompany.bms.inbill.api.SttleFeesReviewService&methods\\=auditAllFee,findChargeItemsByPaiVisitIdAndType,findBmsInBillingApplyCountByExample,cancelAllAudit,cancelAudit,feesReview,cancelBundleAccount,findDepartmentByPaiVisitId,findSettleDepartmentsByPaiVisitId&pid\\=13403&revision\\=0.22.17&side\\=provider&threads\\=200&timestamp\\=1467437134882\r\ncom.alibaba.dubbo.monitor.MonitorService=dubbo\\://192.168.13.107\\:7070/com.alibaba.dubbo.monitor.MonitorService?anyhost\\=true&application\\=sc-dubbo-mon-db&dubbo\\=2.5.3&interface\\=com.alibaba.dubbo.monitor.MonitorService&methods\\=lookup,collect&organization\\=Data&owner\\=rui.bai&pid\\=19251&revision\\=2.5.3&side\\=provider&timestamp\\=1467800053145 dubbo\\://192.168.13.108\\:7070/com.alibaba.dubbo.monitor.MonitorService?anyhost\\=true&application\\=simple-monitor&delay\\=-1&dubbo\\=2.4.9&interface\\=com.alibaba.dubbo.monitor.MonitorService&methods\\=lookup,collect&pid\\=16631&revision\\=2.4.9&side\\=provider&timestamp\\=1467121266208 empty\\://192.168.13.121/com.alibaba.dubbo.monitor.MonitorService?category\\=configurators&dubbo\\=2.5.4-thzk-6&interface\\=com.alibaba.dubbo.monitor.MonitorService&pid\\=13403&timestamp\\=1467437116653 empty\\://192.168.13.121/com.alibaba.dubbo.monitor.MonitorService?category\\=routers&dubbo\\=2.5.4-thzk-6&interface\\=com.alibaba.dubbo.monitor.MonitorService&pid\\=13403&timestamp\\=1467437116653\r\n`",
        "\u6cc4\u9732\u5806\u6808\u4e3a\r\n\r\nDubboSaveRegistryCache-thread-1\r\n  at java.util.Properties.loadConvert([CII[C)Ljava/lang/String; (Properties.java:573)\r\n  at java.util.Properties.load0(Ljava/util/Properties$LineReader;)V (Properties.java:390)\r\n  at java.util.Properties.load(Ljava/io/InputStream;)V (Properties.java:341)\r\n  at com.alibaba.dubbo.registry.support.AbstractRegistry.doSaveProperties(J)V (AbstractRegistry.java:192)\r\n  at com.alibaba.dubbo.registry.support.AbstractRegistry$SaveProperties.run()V (AbstractRegistry.java:170)\r\n  at java.util.concurrent.Executors$RunnableAdapter.call()Ljava/lang/Object; (Executors.java:471)\r\n  at java.util.concurrent.FutureTask.run()V (FutureTask.java:262)\r\n  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;)V (ScheduledThreadPoolExecutor.java:178)\r\n  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run()V (ScheduledThreadPoolExecutor.java:292)\r\n  at java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V (ThreadPoolExecutor.java:1145)\r\n  at java.util.concurrent.ThreadPoolExecutor$Worker.run()V (ThreadPoolExecutor.java:615)\r\n  at java.lang.Thread.run()V (Thread.java:745)\r\n\r\n",
        "\u6cc4\u9732\u7684\u5177\u4f53\u5bf9\u8c61\u4e3a\uff0c\u6ce8\u610f\u7740\u53ea\u662f\u6cc4\u9732\u7684java.lang.Thread @ 0x779569808 DubboSaveRegistryCache-thread-1  \u5173\u8054\u7684\u4e00\u90e8\u5206\u5bf9\u8c61\uff0c\u5927\u6982200\u591aM\r\n\u7c7b\u4f3c\u7684\u6cc4\u9732\u5bf9\u8c61\u8fd8\u6709\u597d\u51e0\u4e2a\r\n\r\nName | Shallow Heap | Retained Heap\r\n-- | -- | --\r\njava.util.Hashtable$Entry @  0x79b5bdb00 | 32 | 8,952,288\r\nnext java.util.Hashtable$Entry @  0x79b5bdaa0 | 32 | 12,456,600\r\nnext java.util.Hashtable$Entry @  0x79b5bda40 | 32 | 14,387,672\r\nnext java.util.Hashtable$Entry @  0x79b5bd9e0 | 32 | 17,904,944\r\nnext java.util.Hashtable$Entry @  0x79b5bd980 | 32 | 19,835,656\r\nnext java.util.Hashtable$Entry @  0x799b5a2d0 | 32 | 19,841,216\r\nnext java.util.Hashtable$Entry @  0x799b5a270 | 32 | 23,358,128\r\nnext java.util.Hashtable$Entry @  0x799b5a210 | 32 | 26,855,192\r\nnext java.util.Hashtable$Entry @  0x799b5a1b0 | 32 | 30,322,352\r\nnext java.util.Hashtable$Entry @  0x799b5a150 | 32 | 33,844,200\r\nnext java.util.Hashtable$Entry @  0x799b593b8 | 32 | 33,847,680\r\nnext java.util.Hashtable$Entry @  0x799b57ee8 | 32 | 33,853,008\r\nnext java.util.Hashtable$Entry @  0x799b57138 | 32 | 33,856,512\r\nnext java.util.Hashtable$Entry @  0x799b570d8 | 32 | 37,354,912\r\nnext java.util.Hashtable$Entry @  0x799b57078 | 32 | 39,983,992\r\nnext java.util.Hashtable$Entry @  0x799b560f8 | 32 | 39,987,960\r\nnext java.util.Hashtable$Entry @  0x799b56098 | 32 | 43,538,496\r\nnext java.util.Hashtable$Entry @  0x799b56038 | 32 | 47,073,912\r\nnext java.util.Hashtable$Entry @  0x7a76b1cf8 | 32 | 50,599,704\r\nnext java.util.Hashtable$Entry @  0x7a6586840 | 32 | 54,120,360\r\nnext java.util.Hashtable$Entry @  0x7a65867e0 | 32 | 57,654,168\r\nnext java.util.Hashtable$Entry @  0x7a6586780 | 32 | 57,659,456\r\nnext java.util.Hashtable$Entry @  0x7a65863a0 | 32 | 57,660,448\r\nnext java.util.Hashtable$Entry @  0x7a46d51a0 | 32 | 57,664,120\r\nnext java.util.Hashtable$Entry @  0x7a46d5140 | 32 | 61,161,792\r\nnext java.util.Hashtable$Entry @  0x7a46d42d8 | 32 | 61,165,480\r\nnext java.util.Hashtable$Entry @  0x7a46d4278 | 32 | 64,715,576\r\nnext java.util.Hashtable$Entry @  0x7a9efc818 | 32 | 65,147,408\r\nnext java.util.Hashtable$Entry @  0x7a9efb810 | 32 | 65,151,512\r\nnext java.util.Hashtable$Entry @  0x7a9efb7b0 | 32 | 68,650,408\r\nnext java.util.Hashtable$Entry @  0x7a7a0ff78 | 32 | 68,653,376\r\nnext java.util.Hashtable$Entry @  0x7a7a0ff18 | 32 | 72,150,072\r\nnext java.util.Hashtable$Entry @  0x7a7a0feb8 | 32 | 75,691,288\r\nnext java.util.Hashtable$Entry @  0x7a7a0fe58 | 32 | 79,216,680\r\nnext java.util.Hashtable$Entry @  0x7a7a0fdf8 | 32 | 79,221,120\r\nnext java.util.Hashtable$Entry @  0x7aa68a2d8 | 32 | 82,747,776\r\nnext java.util.Hashtable$Entry @  0x7aa68a278 | 32 | 86,239,536\r\nnext java.util.Hashtable$Entry @  0x7aa6893e8 | 32 | 86,243,264\r\nnext java.util.Hashtable$Entry @  0x7aa689388 | 32 | 89,734,184\r\nnext java.util.Hashtable$Entry @  0x7aa689328 | 32 | 93,243,496\r\nnext java.util.Hashtable$Entry @  0x7aa6892c8 | 32 | 96,773,024\r\nnext java.util.Hashtable$Entry @  0x7aa688630 | 32 | 96,776,248\r\nnext java.util.Hashtable$Entry @  0x7ae997518 | 32 | 100,285,040\r\nnext java.util.Hashtable$Entry @  0x7ae9974b8 | 32 | 102,911,232\r\nnext java.util.Hashtable$Entry @  0x7ae997458 | 32 | 106,422,344\r\nnext java.util.Hashtable$Entry @  0x7ae9961b0 | 32 | 106,427,120\r\nnext java.util.Hashtable$Entry @  0x7ae996150 | 32 | 109,966,296\r\nnext java.util.Hashtable$Entry @  0x7ad8dbdc8 | 32 | 109,969,416\r\nnext java.util.Hashtable$Entry @  0x7ad8dbd68 | 32 | 109,974,720\r\nnext java.util.Hashtable$Entry @  0x7ad8dbd08 | 32 | 113,450,400\r\nnext java.util.Hashtable$Entry @  0x7ad8dbbe0 | 32 | 113,450,696\r\nnext java.util.Hashtable$Entry @  0x7ad8db420 | 32 | 113,452,680\r\nnext java.util.Hashtable$Entry @  0x7ad8da788 | 32 | 113,455,904\r\nnext java.util.Hashtable$Entry @  0x7b08a3528 | 32 | 116,975,688\r\nnext java.util.Hashtable$Entry @  0x7b08a34c8 | 32 | 116,981,144\r\nnext java.util.Hashtable$Entry @  0x7b08a3468 | 32 | 120,519,968\r\nnext java.util.Hashtable$Entry @  0x7b08a2080 | 32 | 120,525,064\r\nnext java.util.Hashtable$Entry @  0x7b1cfb358 | 32 | 124,057,672\r\nnext java.util.Hashtable$Entry @  0x7b1cf05c8 | 32 | 127,513,424\r\nnext java.util.Hashtable$Entry @  0x7b1cf04a8 | 32 | 131,006,392\r\nnext java.util.Hashtable$Entry @  0x7b1cef378 | 32 | 131,010,792\r\nnext java.util.Hashtable$Entry @  0x7b1ceefb8 | 32 | 131,011,752\r\nnext java.util.Hashtable$Entry @  0x7b3450df0 | 32 | 134,533,264\r\nnext java.util.Hashtable$Entry @  0x7b3450d90 | 32 | 134,537,488\r\nnext java.util.Hashtable$Entry @  0x7b344f7e8 | 32 | 138,061,032\r\nnext java.util.Hashtable$Entry @  0x7b344f788 | 32 | 138,065,520\r\nnext java.util.Hashtable$Entry @  0x7b4f44d10 | 32 | 141,582,528\r\nnext java.util.Hashtable$Entry @  0x7b4f44cb0 | 32 | 143,515,000\r\nnext java.util.Hashtable$Entry @  0x7b4f44c50 | 32 | 147,053,808\r\nnext java.util.Hashtable$Entry @  0x7b4f44bf0 | 32 | 147,058,480\r\nnext java.util.Hashtable$Entry @  0x7b6987d48 | 32 | 150,564,184\r\nnext java.util.Hashtable$Entry @  0x7b6987ce8 | 32 | 150,569,720\r\nnext java.util.Hashtable$Entry @  0x7b6987c88 | 32 | 154,091,496\r\nnext java.util.Hashtable$Entry @  0x7b8156f70 | 32 | 157,607,128\r\nnext java.util.Hashtable$Entry @  0x7b8156f10 | 32 | 161,142,400\r\nnext java.util.Hashtable$Entry @  0x7b8156eb0 | 32 | 164,670,552\r\nnext java.util.Hashtable$Entry @  0x7b8156e50 | 32 | 168,188,416\r\nnext java.util.Hashtable$Entry @  0x7b8156df0 | 32 | 171,725,336\r\nnext java.util.Hashtable$Entry @  0x7b8156290 | 32 | 171,728,248\r\nnext java.util.Hashtable$Entry @  0x7bb4671d8 | 32 | 175,215,360\r\nnext java.util.Hashtable$Entry @  0x7bb467178 | 32 | 178,720,264\r\nnext java.util.Hashtable$Entry @  0x7bb467118 | 32 | 182,251,064\r\nnext java.util.Hashtable$Entry @  0x7bb4670b8 | 32 | 185,761,736\r\nnext java.util.Hashtable$Entry @  0x7bb467058 | 32 | 189,292,776\r\nnext java.util.Hashtable$Entry @  0x7bb466ff8 | 32 | 192,806,160\r\nnext java.util.Hashtable$Entry @  0x7bb466f98 | 32 | 196,269,632\r\nnext java.util.Hashtable$Entry @  0x7bb466f38 | 32 | 199,785,912\r\nnext java.util.Hashtable$Entry @  0x7bb466ed8 | 32 | 203,325,168\r\nnext java.util.Hashtable$Entry @  0x7bb466e78 | 32 | 206,868,856\r\nnext java.util.Hashtable$Entry @  0x7bb466e18 | 32 | 210,390,880\r\nnext java.util.Hashtable$Entry @  0x7bb466db8 | 32 | 213,891,800\r\nnext java.util.Hashtable$Entry @  0x7bb466d58 | 32 | 217,388,296\r\nnext java.util.Hashtable$Entry @  0x7bb466cf8 | 32 | 220,897,392\r\nnext java.util.Hashtable$Entry @  0x7bb465778 | 32 | 220,902,896\r\nnext java.util.Hashtable$Entry @  0x7bb465718 | 32 | 224,411,968\r\nnext java.util.Hashtable$Entry @  0x7bb4656b8 | 32 | 227,899,904\r\nnext java.util.Hashtable$Entry @  0x7bb465658 | 32 | 231,415,336\r\nnext java.util.Hashtable$Entry @  0x7bb4655f8 | 32 | 234,929,256\r\nnext java.util.Hashtable$Entry @  0x7bb465598 | 32 | 238,450,376\r\nnext java.util.Hashtable$Entry @  0x7bb465538 | 32 | 241,948,920\r\nnext java.util.Hashtable$Entry @  0x7bb4654d8 | 32 | 245,473,336\r\n\r\n",
        "\u6211\u4eec\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86,\u5206\u6790dump\u51fa\u6765\u7684\u5185\u5b58,\u662fZookeeperRegistry\u5bf9\u8c61\u7684properties\u5c5e\u6027\u8fc7\u5927(\u6bcf\u4e2a\u5bf9\u8c61\u4e24\u767e\u5146\u5de6\u53f3,\u4e00\u517114\u4e2a\u5bf9\u8c61\u8fbe\u5230\u4e86\u8fd13\u4e2ag),key\u4e2d\u5168\u90e8\u6216\u8005\u90e8\u5206\u5305\u542b\u975e\u5e38\u591a\u7684\\u0000\u5b57\u7b26,\u67e5\u770b\u672c\u5730\u7684cache\u6587\u4ef6,\u4e5f\u662f\u5f88\u591a\\u0000,\u4e0e\u5185\u5b58\u7684\u60c5\u51b5\u4e00\u81f4,\u5076\u53d1\u6027\u7684,\u8bf7\u95ee\u662f\u4ec0\u4e48\u539f\u56e0\u554a?",
        "@zhangzacks @maodie007  \u6309\u7406\u8bf4\uff0cZookeeperRegistry \u53ea\u4f1a\u6709\u4e00\u4e2a\u3002\u3002\u3002\u4f60\u4eec\u662f\u6709\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u4e48\uff1f",
        "@qinliujie  \u53ea\u6709\u4e00\u4e2a\u6ce8\u518c\u4e2d\u5fc3",
        "@qinliujie \u53e6\u5916\u8865\u5145\u4e00\u70b9\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u662f\u5b58\u5728Jboss\u70ed\u90e8\u7f72\u7684\uff0c\u5b9e\u9645\u4e0adubbo\u5728Jboss\u7684\u70ed\u90e8\u7f72\u7684\u65f6\u5019\u4e5f\u5b58\u5728\u95ee\u9898\uff0c\u6bd4\u5982\u4e00\u4e9b\u7ebf\u7a0b\u6c60\u6216\u8005\u9759\u6001\u5f15\u7528\u5728Jboss\u70ed\u90e8\u7f72\u7684\u65f6\u5019\u5e76\u4e0d\u80fd\u6b63\u5e38\u91ca\u653e\uff0c\u5bfc\u81f4\u90e8\u7f72\u7684\u5305\u65e0\u6cd5\u6b63\u5e38\u5378\u8f7d\u3002\u8fd9\u4e2a\u95ee\u9898\u4e0d\u4e00\u5b9a\u548c\u8fd9\u4e2aIssue\u6709\u5173\u7cfb\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u5c3d\u53ef\u80fd\u7684\u5c06\u73af\u5883\u63cf\u8ff0\u6e05\u695a\uff0c\u8c22\u8c22\u4f60\u4eec\u5bf9\u95ee\u9898\u7684\u5173\u6ce8\uff01",
        "\u5927\u81f4\u4e86\u89e3\u4e86 @maodie007 \u4f60\u90a3\u91cc\u80fd\u63d0\u4f9b\u4e00\u4e0b\u51fa\u9519\u65f6\u6587\u4ef6\u7684\u90e8\u5206\u5185\u5bb9\u4e48\u3002\u3002\u6211\u73b0\u5728\u89c9\u5f97\u6bd4\u8f83\u5947\u602a\uff0c\u8fd9\u4e2a\u4e0d\u5e94\u8be5\u5f15\u5165 \\u0000 \u624d\u5bf9\u554a",
        "\u65f6\u9694\u6bd4\u8f83\u4e45\uff0c\u73b0\u5728\u53ea\u80fd\u627e\u5230\u5f53\u521d\u7684\u622a\u56fe\u7247\u65ad\u4e86\uff0c\u5171\u4eab\u5230\u4e86\u8fd9\u91cc\r\nhttp://pan.baidu.com/s/1slRtTzn\r\n@qinliujie ",
        "\u4f60\u4eec\u6709\u901a\u8fc7ops\u5411zk\u4e2d\u5199\u914d\u7f6e\u4fe1\u606f\u5417\uff1f\u6709\u6ca1\u6709\u53ef\u80fd\\u0000\u662f\u4ece\u5916\u90e8\u5f15\u5165\u7684",
        "\u4e3a\u4ec0\u4e48\u4f1a\u6709\u90a3\u4e48\u591aZookeeperRegistry\u5bf9\u8c61\uff0c\u4f1a\u4e0d\u4f1a\u548c\u70ed\u90e8\u7f72\u6709\u5173\u7cfb\u3002\u80fd\u4e0d\u80fd\u5728\u670d\u52a1\u6b63\u5e38\u542f\u52a8\u540e\uff0c\u591a\u6b21\u70ed\u90e8\u7f72\u540e\u5206\u522bdump\u4e00\u4efd\u6570\u636e\uff0c\u786e\u5b9a\u4e0bZookeeperRegistry\u5bf9\u8c61\u6570\u91cf\uff1f",
        "\u8fd9\u79cdBUG\u51fa\u73b0\u7684\u6982\u7387\u5f88\u4f4e\uff0c\u800c\u6211\u4eec\u7684\u70ed\u90e8\u7f72\u975e\u5e38\u9891\u7e41\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u70ed\u90e8\u7f72\u548c\u8fd9\u4e2a\u4efb\u52a1\u76f8\u5173\u53ef\u80fd\u6027\u4e0d\u5927\uff0c\u6211\u4eec\u4e4b\u524d\u4e5fDUMP\u8fc7\u5728\u6ca1\u6709\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u6709\u8fd9\u4e2aBUG\u7684\r\n\r\n\u6ca1\u6709\u53cd\u5199zk\u914d\u7f6e\u4fe1\u606f\u7684\u884c\u4e3a\u3002",
        "@qinliujie zk\u96c6\u7fa4\u53ea\u6709\u4e00\u4e2a,\u4f46\u662f\u4e0d\u540c\u7cfb\u7edf\u7684\u670d\u52a1\u5728zk\u4e0a\u7684\u5206\u7ec4\u4e0d\u4e00\u6837,\u6240\u4ee5\u8de8\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\u914d\u7f6e\u4e86\u591a\u4e2adubbo:registry",
        "@maodie007 \r\n1. \u540c\u4e00\u4e2a\u5de5\u7a0b\u4e2d\u914d\u7f6e\u4e86\u591a\u4e2adubbo:registry\uff1f\u5177\u4f53\u662f\u51e0\u4e2a\u90a3\uff1f\r\n2. \u65e2\u7136\u662f\u540c\u4e00\u4e2azk\u96c6\u7fa4\uff0c\u5206\u7ec4\u4e0d\u540c\u6ca1\u5fc5\u8981\u914d\u7f6e\u591a\u4e2adubbo:registry\u5427\r\n3. \u51fa\u95ee\u9898\u7684cache\u6587\u4ef6\uff0c\u6d89\u53ca\u7684\u670d\u52a1\u5206\u7ec4\u4e2a\u6570\u6709\u591a\u5c11\uff1f\r\n",
        "@chickenlj\r\n1.dubbo:registry\u7684\u914d\u7f6e\u4e2a\u6570\u662f\u548cZookeeperRegistry\u5bf9\u8c61\u4e2a\u6570\u4e00\u81f4\u7684,14\u4e2a.\r\n2.\u8fd9\u4e2a\u5206\u7ec4\u4e0d\u540c,\u662f\u6307\u7684dubbo:registry\u7684group\u5c5e\u6027\u503c\u4e0d\u540c,\u914d\u7f6e\u4e00\u4e2adubbo:registry\u4e0d\u80fd\u5b9e\u73b0\u8de8\u7ec4\u8c03\u7528\u5427.\r\n3.\u6211\u8fd9\u91cc\u51fa\u95ee\u9898\u7684\u7cfb\u7edf,\u4f1a\u8c03\u7528\u53e6\u591613\u4e2a\u7cfb\u7edf\u7684\u670d\u52a1,\u6240\u4ee5\u5206\u7ec4\u5171\u670914\u4e2a.\r\n\u53e6\u5916\u6bcf\u4e2adubbo:registry\u6ca1\u6709\u5355\u72ec\u6307\u5b9acache\u6587\u4ef6,\u662f\u5171\u7528\u7684,\u4e0d\u77e5\u9053\u548c\u8fd9\u4e2a\u6709\u6ca1\u6709\u5173\u7cfb,\u6211\u770b\u5b98\u7f51\u4e0a\u8bf4\u4e24\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u4e2a\u6587\u4ef6\u5b58\u50a8,\u6211\u8fd9\u4e2a\u60c5\u51b5\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u662f\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3,\u7136\u540e\u770b\u6e90\u7801\u91cc\u53c8\u6709\u9632\u6b62\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u51b2\u7a81\u7684\u63aa\u65bd,\u5f88\u8ff7\u60d1.\u4e3b\u8981\u662f\u6211\u4eec\u4e00\u76f4\u8fd9\u4e48\u7528\u7684,\u4ee5\u524d\u4e5f\u6ca1\u51fa\u8fc7\u95ee\u9898.",
        "dubbo:registry\u7684group\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u53ea\u6709\u670d\u52a1\u6709group\u7684\u6982\u5ff5\uff0c\u4e0d\u8fc7\u5206group\u5e76\u4e0d\u9700\u8981\u914d\u7f6e14\u4e2adubbo:registry\uff0c\u5360\u7528\u8fc7\u591a\u7684\u5185\u5b58",
        "@chickenlj \u6211\u597d\u50cf\u660e\u767d\u4f60\u7684\u610f\u601d\u4e86,\u4f60\u8bf4\u7684\u670d\u52a1\u5206\u7ec4\u662f\u6307dubbo:service\u7684group\u5c5e\u6027\u662f\u5427?\u597d\u5427,\u662f\u6211\u63cf\u8ff0\u4e0d\u6e05\u695a,\u6211\u4eec\u662f\u901a\u8fc7\u6307\u5b9adubbo:registry\u7684group\u5c5e\u6027\u503c\u6765\u5206\u7ec4\u7684,\u8fd9\u5e94\u8be5\u662f\u53eb\u6ce8\u518c\u4e2d\u5fc3\u5206\u7ec4\u66f4\u51c6\u786e\u5427,\u610f\u601d\u662f\u4e00\u4e2a\u7cfb\u7edf\u4e00\u4e2azk\u5206\u7ec4,\u7136\u540e\u9700\u8981\u5b9e\u73b0\u4e0d\u540czk\u5206\u7ec4\u4e0b\u7684\u670d\u52a1\u4e92\u76f8\u8c03\u7528.\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u662f\u95ee\u9898I\u7684\u6839\u6e90,\u5355\u5c31\u4e00\u4e2aZookeeperRegistry\u5bf9\u8c61\u6765\u770b\u5c31\u8fbe\u5230\u4e86200M,\u663e\u7136\u8fd9\u662f\u6709\u95ee\u9898\u7684.",
        "**\u4f7f\u7528tomcat\u70ed\u90e8\u7f72\uff0c\u4e5f\u662f\u540c\u6837\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898**\r\n\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-2] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [New I/O server worker #1-2] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-3] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [New I/O server worker #1-3] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-4] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboSharedHandler-thread-1] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-5] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-6] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-7] but has failed to stop it. This is very likely to create a memory leak.\r\nOct 19, 2017 1:26:35 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\r\nSEVERE: The web application [/zd-model-platform] appears to have started a thread named [DubboServerHandler-139.199.175.58:31250-thread-8] but has failed to stop it. This is very likely to create a memory leak.",
        "@JavaxinYao \u770b\u4f60\u8fd9\u4e2a\u65e5\u5fd7\u662f\u4eca\u5929\u7684\uff0c\u6211\u5efa\u8bae\u4f60\u5c06\u5176\u4ed6\u7684\u4e00\u4e9b\u4fe1\u606f\u53ef\u4ee5\u66f4\u591a\u7684\u53d1\u5728\u8fd9\u91cc\uff0c\u6bd4\u5982\u73b0\u5728\u6709\u95ee\u9898\u7684cache\u6587\u4ef6\u5185\u5bb9\r\n\u8bf7 @chickenlj \u5173\u6ce8\u4e0b",
        "\u6211\u89c9\u5f97\u53ef\u80fd\u662ftomcat reload \u7c7b\u91cd\u65b0\u52a0\u8f7d\u5185\u5b58\u4e0d\u91ca\u653e  \u5c31\u6bd4\u8f83\u5bb9\u6613\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa ",
        "@JavaxinYao \u70ed\u90e8\u7f72\u662f\u4f1a\u5b58\u5728\u95ee\u9898\uff0c\u6211\u5728\u4e4b\u524d\u7684\u56de\u590d\u4e0a\u8bf4\u5230\u8fc7\uff0c\u4f46\u662f\u4f60\u7684OOM\u4e0d\u4e00\u5b9a\u548c\u8fd9\u4e2aISSUE\u662f\u4e00\u81f4\u7684\uff0c\u4f60\u9700\u8981DUMP\u624d\u80fd\u77e5\u6653\uff0c\u6211\u524d\u9762\u8bf4\u8fc7dubbo\u672c\u6765\u5c31\u5b58\u5728\u5728\u70ed\u90e8\u7f72\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u6b63\u5e38\u5173\u95ed\u4e00\u4e9b\u8d44\u6e90\uff0c\u5bfc\u81f4\u591a\u6b21\u90e8\u7f72\u5c06\u4f1a\u81f4\u4f7f\u5185\u5b58\u6ea2\u51fa\u7684\u53ef\u80fd\uff0c\u8fd9\u4e00\u5757\u6211\u4eec\u81ea\u5df1\u5bf9dubbo\u4e5f\u8fdb\u884c\u8fc7\u8c03\u6574",
        "cache\u6587\u4ef6\u548cZookeeperRegistry\u5bf9\u8c61\u8fc7\u5927\u7684\u95ee\u9898\u6709\u5934\u7eea\u5417?\u6211\u4eec\u8fd9\u91cc\u5f88\u957f\u65f6\u95f4\u6ca1\u51fa\u73b0\u8fc7\u4e86,\u8fd9\u4e2a\u95ee\u9898\u9690\u85cf\u7684\u6709\u70b9\u6df1.",
        "\u8fd9\u4e2a\u95ee\u9898\u6211\u4e5f\u9047\u5230\u8fc7\uff0c\u53ef\u80fd\u4e0d\u662f\u56e0\u4e3a\u670d\u52a1\u6570\u91cf\u8fc7\u591a\u5bfc\u81f4\u7684\u3002dubbo\u542f\u52a8\u540e\u4f1a\u9ed8\u8ba4\u628azookeeper\u4e0a\u7684\u670d\u52a1URL\u4fe1\u606f\u6309ZK\u7684IP\u5730\u5740\u4e3a\u6807\u8bc6\u5206\u591a\u4e2a\u6587\u4ef6\u7f13\u5b58\u5230\u672c\u5730\u7684${user.home}\u76ee\u5f55\u4e0b\uff0c\u5982\u679c\u5f53\u524d\u670d\u52a1\u5668\u8282\u70b9\u4e0a\u90e8\u7f72\u6709\u591a\u4e2adubbo \u5e94\u7528\uff0c\u5f53ZK\u4e0a\u6709\u670d\u52a1\u53d8\u66f4\u4fe1\u606f\u65f6\u4f1a\u63a8\u7ed9\u6240\u6709\u7684\u6d88\u8d39\u8005\u670d\u52a1\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6d88\u8d39\u8fd9\u4e2a\u670d\u52a1\u7684\u5e94\u7528\u90fd\u90e8\u7f72\u5728\u8fd9\u4e2a\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u4f1a\u5bfc\u81f4ZK\u7f13\u5b58\u6587\u4ef6\u7279\u522b\u5927\u3002\u5efa\u8bae\u901a\u8fc7  dubbo.registry.file \u914d\u7f6e\u7ed9\u6bcf\u4e2a\u5e94\u7528\u6307\u5b9a\u4e00\u4e2aZK\u7f13\u5b58\u76ee\u5f55",
        "@663534597 \u975e\u5e38\u611f\u8c22\u4f60\u7684\u5206\u4eab\uff0c\u4f60\u7684\u8fd9\u4e2a\u8bf4\u6cd5\u6b63\u597d\u5370\u8bc1\u4e86\u53ef\u80fd\u548c\u70ed\u90e8\u7f72\u5e94\u7528\u672a\u6b63\u5e38\u5378\u8f7d\u5bfc\u81f4\u540c\u4e00\u4e2a\u670d\u52a1\u5728\u4e00\u4e2a\u670d\u52a1\u8282\u70b9\u4e0a\u6ce8\u518c\u591a\u6b21",
        "@663534597 \u4e0d\u77e5\u9053\u6211\u4eec\u9047\u5230\u7684\u60c5\u51b5\u662f\u5426\u4e00\u6837,\u6211\u8fd9\u91cc\u662fcache\u6587\u4ef6\u51fa\u73b0\u5927\u91cf\u7684\\u0000\u5b57\u7b26,cache\u6587\u4ef6\u8fbe\u5230\u51e0\u767e\u5146,\u5bf9\u5e94\u5230\u5185\u5b58\u91cc,ZookeeperRegistry\u5bf9\u8c61\u7684properties\u5c5e\u6027\u7684\u5f88\u591akey\u91cc\u5305\u542b\u5927\u91cf\u7684\\u0000,\u5c31\u8fd9\u4e9bkey(String\u7c7b\u578b)\u6bcf\u4e00\u4e2a\u5c31\u6709\u51e0\u5146,\u751a\u81f3\u5341\u51e0\u5146\u5927,\\u0000\u662f\u4e0d\u53ef\u8bc6\u522b\u7684\u5b57\u7b26,\u5230\u5e95\u662f\u600e\u4e48\u51fa\u73b0\u7684,\u8bbe\u4e48\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0,\u4e0d\u5f97\u800c\u77e5.",
        "\u76ee\u524d\u6211\u4eec\u628aRegistry Cache\u90e8\u5206\u7684\u903b\u8f91\u7b80\u5355\u4f18\u5316\u4e86\u4e00\u4e0b\uff0c`\u6ce8\u518c\u4e2d\u5fc3+\u5e94\u7528\u540d`\u505a\u7f13\u5b58\u6587\u4ef6\u540d\uff0c\u51cf\u5c11\u4e86\u5bf9\u6587\u4ef6\u7684\u91cd\u590d\u8f7d\u5165\u3002\r\n\u4e0d\u8fc7\\u0000\u5b57\u7b26\u7684\u95ee\u9898\u3001\u7f13\u5b58\u6587\u4ef6\u8fc7\u5927\u7684\u95ee\u9898\u4ecd\u672a\u5b9a\u4f4d\u5230\uff0c\u4e0d\u77e5\u4f60\u4f7f\u7528\u7684\u6a21\u5f0f\u6ce8\u518c\u4e2d\u5fc3\u5206\u7ec4\u6a21\u5f0f\u662f\u5426\u6709\u5173\u7cfb\uff1f\r\n\u53ef\u4ee5\u5347\u7ea7\u52302.5.7\u7248\u672c\uff0c\u6301\u7eed\u89c2\u5bdf",
        "@chickenlj \u4f60\u7684\u8fd9\u4e2a\u4fee\u6539\u53ef\u80fd\u9488\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u8fd8\u6ca1\u6709\u5230\u5173\u952e\u70b9\uff0c\u56e0\u4e3a\u6545\u969c\u7684\u573a\u666f\u4e0d\u662f\u91cd\u590d\u52a0\u8f7d\u4e86\u6587\u4ef6\uff0c\u800c\u662f\u4e00\u4e2a\u6587\u4ef6\u7684\u52a0\u8f7d\u5c31\u5bfc\u81f4\u4e86\u6545\u969c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u592a\u5927\u4e86\uff0c\u53ef\u80fd\u7684\u601d\u8def\u5e94\u8be5\u662fRegistry Cache\u7684\u6587\u4ef6\u5185\u5bb9\u7684\u751f\u6210\u505a\u4e00\u4e2a\u8003\u8651\uff0c\u6bd4\u5982\u5185\u5bb9\u5fc5\u987b\u6709\u67d0\u4e2a\u683c\u5f0f\uff0c\u82e5\u51fa\u73b0\u5f02\u5e38\u5199\u5e94\u8be5\u76f4\u63a5\u62a5\u9519\uff0c\u8fd9\u6837\u53ef\u4ee5\u628a\u6545\u969c\u6321\u5728\u524d\u9762\uff0c\u82e5\u627e\u4e0d\u5230\u6839\u672c\u89e3\u51b3\u539f\u56e0\uff0c\u4f46\u662f\u53ef\u4ee5\u505a\u4e00\u4e2a\u9884\u9632",
        "@chickenlj \u6211\u4eec\u51fa\u73b0\u8fc7\u6709\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u7684\u60c5\u51b5\r\n\u662f\u56e0\u4e3a\u6211\u4eec\u7684 zk \u96c6\u7fa4\u662f \u914d\u7f6e\u4e86 \u57df\u540d(dns\u8f6c\u53d1)\uff0c\r\n\u5728 AbstractRegistryFactory.getRegistry \u65b9\u6cd5\u4e2d \r\nString key = url.toServiceString(); \u8fd9\u4e2a\u5b9e\u73b0\u662f\u83b7\u53d6\u7684 \u57df\u540d\u7684ip\uff0c\u5c31\u751f\u6210\u4e86\u591a\u4e2a \u6ce8\u518c\u4e2d\u5fc3"
    ],
    "1895": [],
    "4778": [],
    "691": [],
    "692": [
        "`\u7531\u4e8e\u5224\u65ad\u8282\u70b9\u5b58\u5728\u7684\u901f\u5ea6\u6bd4\u521b\u5efa\u8282\u70b9\u5feb\u592a\u591a`\r\n\u8bf7\u95ee\u4f60\u5728\u8fd9\u91cc\u6709\u505a\u8fc7\u5b9e\u9645\u6027\u80fd\u6d4b\u8bd5\u5417\uff1f\u5982\u679c\u6709\u7684\u8bdd\u70e6\u8bf7\u63d0\u4f9b\u4e00\u4e9b\u5bf9\u6bd4\u6570\u636e\uff0c\u6211\u4e0d\u6e05\u695acreate\u81ea\u8eab\u6709\u6ca1\u6709\u4ec0\u4e48\u4f18\u5316\u63aa\u65bd\uff0c\u9700\u8981\u5b9e\u9645\u6d4b\u4e00\u4e0b",
        "\u76f4\u63a5\u7b80\u5355\u4ee3\u7801\u8fde\u63a5zookeeper\u6d4b\u8bd5\uff0c\u5f53\u8282\u70b9\u5b58\u5728\u65f6\uff0c\u521b\u5efa\u5355\u4e2a\u8282\u70b9\uff08\u4e0d\u629b\u5f02\u5e38\u7684\u65b9\u5f0f\uff09\u5927\u698240ms\uff0c\u800c\u5224\u65ad\u5b58\u5728\u53ea\u9700\u89813ms\u3002\r\n\u5728\u6027\u80fd\u6bd4\u8f83\u5dee\u7684\u865a\u62df\u673a\u4e0a\u6d4b\u8bd5\uff0c\u8de8\u673a\u5668\uff0c\u5185\u7f51\u3002",
        "kevin82008  \r\n\u6bcf\u4e00\u6b21\u521b\u5efa\u65f6\u7684\u670d\u52a1\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u8282\u70b9\u7ed3\u6784:  \r\n/dubbo/com.alibaba.dubbo.demo.DemoService/consumers  \r\n/dubbo/com.alibaba.dubbo.demo.AnotherService/consumers  \r\n\u6b63\u5e38\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u5e94\u8be5\u662f\u4e0d\u5b58\u5728\u5927\u91cf\u91cd\u590dcreate\u7684",
        "\u6bcf\u4e2a\u670d\u52a1\u5206\u522b\u521b\u5efa\u4ee5\u4e0b\u8282\u70b9\u5404\u4e00\u6b21  \r\n```xml\r\n/dubbo/com.alibaba.dubbo.demo.DemoService/consumers\r\n/dubbo/com.alibaba.dubbo.demo.DemoService/providers\r\n/dubbo/com.alibaba.dubbo.demo.DemoService/configurators\r\n/dubbo/com.alibaba.dubbo.demo.DemoService/routers\r\n```\r\n\u6bcf\u4e2a\u670d\u52a1\u80fd\u51cf\u5c113\u6b21create\u91cd\u590d\u64cd\u4f5c\uff0c\u5f53\u670d\u52a1\u6570\u91cf\u591a\u65f6\u8fd8\u662f\u80fd\u7f29\u77ed\u4e00\u70b9\u542f\u52a8\u65f6\u95f4",
        "@chickenlj \u4e0d\u662f\u51cf\u5c113\u6b21\uff0c /dubbo \u8fd9\u4e00\u5c42\u6574\u4e2a\u7cfb\u7edf\u53ea\u9700\u8981\u521b\u5efa\u4e00\u6b21\uff0c\u6240\u4ee5\u662f\u4ece\u539f\u6765\u7684\u521b\u5efa 4*3=12\u6b21\uff0c\r\n\u53d8\u6210\u540e\u9762\u7684 5\u6b21\r\n\u4e4b\u524d\u7684\u4ee3\u7801\u91cc\uff0c\u662f\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f1a\u5faa\u73af\u521b\u5efa\u7684 \r\n\u5148\u521b\u5efa /dubbo\r\n\u518d\u662f /dubbo/com.alibaba.dubbo.demo.DemoService/\r\n\u518d\u662f /dubbo/com.alibaba.dubbo.demo.DemoService/consumers\r\n"
    ],
    "3803": [],
    "3527": [],
    "1833": [],
    "1804": [],
    "4417": [],
    "3666": [],
    "2498": [],
    "714": [
        "I fixed it in PR https://github.com/alibaba/dubbo/pull/780    @chickenlj please merge it to master",
        "@lovepoem thx, as long as we don't have enough time these days, i'll move this issue to 2.5.8",
        "@chickenlj ok"
    ],
    "359": [],
    "3055": [],
    "2621": [],
    "1112": [],
    "4426": [],
    "2571": [],
    "4210": [],
    "3500": [],
    "93": [],
    "3485": [],
    "2807": [],
    "3526": [],
    "5143": [],
    "4079": [],
    "2244": [],
    "3389": [],
    "568": [],
    "386": [],
    "1763": [],
    "577": [],
    "4318": [],
    "650": [],
    "3299": [],
    "84": [],
    "4958": [],
    "5108": [],
    "3626": [],
    "3806": [],
    "2057": [],
    "2395": [],
    "2270": [],
    "787": [],
    "2767": [],
    "2166": [],
    "2355": [],
    "3038": [],
    "4548": [],
    "794": [
        "duplicated by #394 #395 #557 \r\nmercyblitz \u4f1a\u57282.5.7\u7248\u672c\u4fee\u590d\u6b64\u95ee\u9898",
        "\u7136\u800c\uff0c\u57282.5.7\u5e76\u6ca1\u6709\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u5427\u3002\u3002\u3002\r\n\u6211\u7528\u7684\u5c31\u662f\u6700\u65b0\u7248\u672c\uff1a2.5.7.\r\n\u5bf9\u4e00\u4e2a\u7c7b\u540c\u65f6\u4f7f\u7528 spring\u7684 @Service \u548c dubbo\u7684 @Service \u6ce8\u89e3\uff0c\u8fd8\u662f\u62ff\u4e0d\u5230\u66b4\u9732\u7684\u63a5\u53e3\u3002\u3002\u3002\u3002\r\n\u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u80fd\u4fee\u590d\u3002\u3002\u3002",
        "\u786e\u8ba4\u6ca1\u6709\u88ab\u4fee\u590d\uff0c\u4f30\u8ba1\u53ea\u662f\u770b\u8fd9\u4e9b\u95ee\u9898\u957f\u5f97\u50cf\uff0c\u6ca1\u6709\u6df1\u5165\u7406\u89e3\u8fd9\u4e2a\u662f\u5565\u610f\u601d\u3002\r\n\r\n\u76ee\u524d\u53ef\u4ee5\u7ed5\u8fc7\uff0c\u901a\u8fc7\u8bbe\u7f6e\uff1a`@Service(interfaceName = \"com.xxx.XXXService\")` \u6216\u8005\uff0c`@Service(interfaceClass = XXXServiceImpl.class)`",
        "\u8bf7\u68c0\u67e5\u4e00\u4e0b\u662f\u4e0d\u662f\u5f85\u6ce8\u518c Service Bean\uff0c\u662f\u4e0d\u662f\u7531`<dubbo:annotation>` \u4e2d\u6ce8\u518c\uff0c\u76ee\u524d\u6211\u7684\u6700\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\u8c03\u6574\u540e\uff0c\u6ca1\u6709\u51fa\u73b0\u95ee\u9898\uff1ahttps://github.com/mercyblitz/dubbo/blob/2.5.8/dubbo-config/dubbo-config-spring/src/test/java/com/alibaba/dubbo/config/spring/context/annotation/DubboComponentScanRegistrarTest.java",
        "@Gonzo-Tan @pinkdawn  \u8bf7\u53c2\u7167 @mercyblitz \u540c\u5b66\u6240\u8bf4\uff0c\u4ed6\u5df2\u7ecf\u57282.5.7\u7248\u672c\u5bf9\u6ce8\u89e3\u90e8\u5206\u8fdb\u884c\u4e86\u91cd\u6784\uff0c\u6211\u6000\u7591\u4f60\u4eec\u8fd8\u662f\u4f7f\u7528\u7684\u65e7\u7248\u672c\u7684AnnotationBean\u5b9e\u73b0\uff0c\u8bf7\u53c2\u7167[2.5.7\u6ce8\u89e3\u4f7f\u7528\u6587\u6863](http://dubbo.io/books/dubbo-user-book/configuration/annotation.html)  \r\n\r\n2.5.8\u7248\u672c\u5373\u5c06\u53d1\u5e03\uff0cmercyblitz \u53c8\u57282.5.7\u57fa\u7840\u8fdb\u884c\u4e86\u5b8c\u5584\u548c\u4fee\u590d\uff0c2.5.8\u7248\u672c\u6ce8\u89e3\u4f7f\u7528\u65b9\u5f0f\u7684\u8c03\u6574\u70e6\u8bf7 @mercyblitz \u5b8c\u5584\u540e\u8d34\u51fa\u6587\u6863\u94fe\u63a5",
        "\u78b0\u5230\u540c\u6837\u95ee\u9898\uff0c\u52a0\u4e0a@DubboComponentScan\u540e\u95ee\u9898\u89e3\u51b3\u3002",
        "@Gonzo-Tan \u4e3a\u4ec0\u4e48\u5728\u540c\u4e00\u4e2a\u7c7b\u4e0a\uff0c\u8981\u540c\u65f6\u4f7f\u7528Spring\u7684@Service\u548cDubbo\u7684@Service\u5462\uff1f\u8c8c\u4f3c\u4f7f\u7528\u4e86Dubbo\u7684@Service\u6ce8\u89e3\uff0c\u5c31\u53ef\u4ee5\u4ece\u672c\u5730\u4e0a\u4e0b\u6587\u4e2d\u83b7\u53d6\u8be5\u7c7b\u7684bean\u4e86\u5427\ud83d\ude2c"
    ],
    "3523": [],
    "4101": [],
    "5063": [],
    "2172": [],
    "4563": [],
    "5406": [],
    "4408": [],
    "4124": [],
    "5018": [],
    "5032": [],
    "2299": [],
    "4190": [],
    "2071": [],
    "1707": [],
    "2734": [],
    "5337": [],
    "3104": [],
    "3297": [],
    "5308": [],
    "843": [
        "\u8fd9\u662f\u4e2a\u8e4a\u8df7\u7684\u95ee\u9898\uff0c\u4f60\u7528\u7684\u662fdubbo\u4ec0\u4e48\u7248\u672c\uff1f",
        "\u8fd9\u5e94\u8be5\u662f\u7528\u6cd5\u6709\u95ee\u9898\uff0c\u53ea\u9700\u8981\u4e00\u4e2a@Service(version = \"1.0.0\")\u6ce8\u89e3\u5c31\u591f\u4e86\r\nimport com.alibaba.dubbo.config.annotation.Service;\r\nimport com.icitic.fusion.cashier.qrcode.api.IQrCodeService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\n\r\n/**\r\n * \u4e8c\u7ef4\u7801\u670d\u52a1\u5b9e\u73b0\r\n * Created by lys on 2017/8/8.\r\n */\r\n@Service(version = \"1.0.0\")\r\npublic class QrCodeServiceImpl implements IQrCodeService {",
        "\u5c31\u662f\u5f53\u524d\u7248\u672c\uff0c\u521a\u4ecegithub\u4e0a\u9762glone\u4e0b\u6765\u7684",
        " @chickenlj  dubbo 2.5.7\u7248\u672c\r\n\u6211\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e5f\u53d1\u73b0\uff0c\u5f53\u4e00\u4e2a\u7c7b\u540c\u65f6\u4f7f\u7528dubbo\u7684@service\uff0c\u548cspring\u7684@compent\u3001@service\u7b49\u65f6\uff0c\u65e0\u6cd5\u6ce8\u518cdubbo\u670d\u52a1 ",
        "@foreveryang321 \u6211\u53ef\u4ee5\u7528\u54622.5.7\u3002",
        "@crazyhuntsman  \u8fd9\u4e2a\u95ee\u9898\u4f1a\u5728 2.5.8 \u7248\u672c\u91cc\u9762\u4fee\u590d\u6389",
        "@foreveryang321 @zxj19951029  2.5.7\u7248\u672c\u76ee\u524d\u4e0d\u652f\u6301\u540c\u65f6\u4f7f\u7528Spring Service\u6ce8\u89e3\u548cdubbo service\u6ce8\u89e3\uff0c\u4f60\u7684\u8fd9\u79cd\u573a\u666f\uff0c\u518d\u5b9a\u4e49\u4e00\u4e2a\u5916\u5c42Facade\u7684\u5305\u88c5\u7c7b\u578b\uff0c\u5728\u53ea\u4e0a\u505adubbo service\u6ce8\u89e3\u662f\u5426\u66f4\u5408\u7406\u4e00\u4e9b\r\n\r\n\u56e0\u4e3a\u6211\u7406\u89e3\u4f60`DefaultMailSender`\u8fd8\u8981\u505aspring service\u6ce8\u89e3\u662f\u5728provider\u5185\u90e8\u6709\u4f7f\u7528\uff0c\u7528facade\u53ef\u4ee5\u505a\u5230\u5185\u90e8\u5916\u90e8\u670d\u52a1\u5206\u79bb",
        "@zxj19951029 \u4f60\u8fd9\u4e2a\u95ee\u9898\u6211\u672c\u5730\u6ca1\u6709\u53d1\u73b0\uff0c\u80fd\u4e0d\u80fd\u4e0a\u4f20\u4e00\u6bb5 demo code",
        "This seems to be a problem, we should fix it in 2.5.8. When i add `ComponentScan` to your test, this happens\r\n![default](https://user-images.githubusercontent.com/18097545/33834637-8aa43268-debe-11e7-9b83-58d53990b940.png)\r\n",
        "`ServiceAnnotationBeanPostProcessor` should always execute behind `Transactional PostProcessor`, should we give `ServiceAnnotationBeanPostProcessor` the lowest order explicitly?",
        "#1029"
    ],
    "1258": [],
    "4603": [],
    "1185": [],
    "3315": [],
    "4272": [],
    "5000": [],
    "3239": [],
    "1999": [],
    "4963": [],
    "5357": [],
    "1843": [],
    "870": [
        "> \r\n> \r\n> \u8fd9\u4e2a\u662f\u4e2abug\uff0c \u4ee5\u524d\u7ef4\u62a4\u4e2d\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c @chickenlj \u6807\u8bb0\u5f85\u4fee\u590d\u5427\r\n\r\n\u8fd9\u4e2a bug\uff0c\u5f88\u53ef\u80fd \u5f15\u8d77\u4e86\u4e00\u4e2a\u65b0\u7684\u8b66\u544a\uff0c\u8bf7\u5e2e\u5fd9\u5904\u7406\uff0c\u76f8\u5173 issue\u5982\u4e0b\uff1a\r\nhttps://github.com/apache/incubator-dubbo/issues/4113\r\n",
        "![image](https://user-images.githubusercontent.com/13182082/32885101-788a8fda-caf7-11e7-8523-f097e8a87ae5.png)\r\n![image](https://user-images.githubusercontent.com/13182082/32885122-7f78e436-caf7-11e7-8ae7-17dffe8d76f7.png)\r\n\r\n",
        "\u5728event.getPath()\u65f6\uff0c\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38",
        "\u8fd9\u4e2a\u6211\u4e5f\u78b0\u5230\u4e86\u3002\u5728event\u7c7b\u578b\u4e3aclose\u4e4b\u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u51fa\u73b0\u8fd9\u4e2abug\u3002\r\n\u611f\u89c9\u5e94\u8be5\u5224\u65ad\u4e00\u4e0bevent\u7c7b\u578b\uff0c\u5728\u8fdb\u884c\u901a\u77e5\u3002\u2019",
        "\u8fd9\u4e2a\u662f\u4e2abug\uff0c \u4ee5\u524d\u7ef4\u62a4\u4e2d\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c @chickenlj  \u6807\u8bb0\u5f85\u4fee\u590d\u5427",
        "@zonghaishang \u6536\u5230\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u539f\u56e0\u65b9\u4fbf\u6587\u5b57\u63cf\u8ff0\u4e0d\uff1f\u8fd9\u4e2a\u7248\u672c\u4f60\u6709\u65f6\u95f4\u5904\u7406\u6389\u5417\uff1f",
        "CuratorWatcherImpl \u4e2d\u8c03\u7528 client.getChildren().usingWatcher(this).forPath(event.getPath())\uff0c \u83b7\u53d6\u5b50\u8282\u70b9\u4f20\u9012\u7684path \u4e3anull \u5bfc\u81f4\u7684\uff0c\u5177\u4f53\u4e3a\u4ec0\u4e48\u4f1a\u4f20\u9012null\uff0c \u9700\u8981\u8c03\u8bd5\u4e00\u4e0b\u4ee3\u7801\uff0c\u5e94\u8be5\u662fzookeeper\u5ba2\u6237\u7aefcurator\u7684\u95ee\u9898"
    ],
    "1854": [],
    "2383": [],
    "4943": [],
    "4751": [],
    "883": [
        "\u662f\u9ed8\u8ba4\u4f7f\u7528\u4e86\u7b2c\u4e00\u4e2aregistry bean\uff0c\u5b9e\u9645\u6307\u5b9a\u7684registry\u4e0d\u7ba1\u7528\uff1f\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u5728\u4e0b\u4e2a\u7248\u672c\u4e88\u4ee5\u4fee\u590d",
        "\u8c22\u8c22\u5c0f\u4f19\u4f34\u5b9a\u4f4d\uff0c\u8be5\u95ee\u9898\u4f1a\u5728\u4e0b\u4e2a\u7248\u672c\u4e2d\u4fee\u590d",
        "\u5b9e\u9645\u4e0a\u4f1a\u76f4\u63a5\u62a5\u9519\uff0c\u56e0\u4e3a\u90a3\u4e2a\u65b9\u6cd5\u91cc\u8fb9\u6700\u540e\u6709\u4e2a\u5224\u65ad\u552f\u4e00\u7684\u64cd\u4f5c\uff0c\u591a\u4e2a\u65f6\u4e0d\u552f\u4e00\u4e86\uff0c\u81ea\u7136\u76f4\u63a5\u62a5\u9519"
    ],
    "3924": [],
    "594": [],
    "889": [
        "> @qixiaobo \u4f60\u8bf4\u53cd\u4e86\uff0c\u76ee\u524ddubbo \u5728consumer\u8c03\u7528provider\u4f1a\u4f7f\u7528attachment\r\n\r\n\u5bf9 \u8bf4\u53cd\u4e86\u2026\u20262.5.3\u53ea\u80fd\u662f\u6d88\u8d39\u8005\u5230\u63d0\u4f9b\u8005",
        "\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff1f\u4fee\u590d\u7684\u7248\u672c\u53f7\u662f\u54ea\u4e00\u4e2a\uff1f\u4e0d\u60f3\u7528\u6700\u65b0\u7684",
        "> \u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff1f\u4fee\u590d\u7684\u7248\u672c\u53f7\u662f\u54ea\u4e00\u4e2a\uff1f\u4e0d\u60f3\u7528\u6700\u65b0\u7684\r\n\r\n![image](https://user-images.githubusercontent.com/2881751/68371262-46e05900-0179-11ea-8e6c-b732d6126b2b.png)\r\n",
        "\u5177\u4f53\u8fd4\u56de\u503c\u4e0d\u662fprovider\u81ea\u5df1\u63d0\u4f9b\u7684\u5417\uff1f \u53ef\u4ee5\u5728provider\u8fd4\u56de\u503c\u5c01\u88c5\u4f60\u8981\u7684\u5bf9\u8c61.\r\neg:  interface UserService {\r\n          UserInfo queryBy(long id);\r\n}\r\n\r\n\u8fd9\u91cc\u7684UserInfo\u5305\u542b\u4f60\u8981\u4f20\u56de\u7ed9consumer\u7684\u4fe1\u606f. \u5982\u679c\u8fd8\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u8bc9\u6c42\uff0c\u8bf7\u4e3e\u4e2a\u4ee3\u7801\u6837\u4f8b\uff0c\u8c22\u8c22",
        "\u8fd9\u5757\u5982\u679c\u662f\u4ee5attachements\u7684\u5f62\u5f0f\u8fd8\u4e0d\u652f\u6301\uff0c\u8fd9\u79cd\u9700\u6c42\u6211\u4e5f\u4e0d\u662f\u5f88\u786e\u5b9a\u6709\u6ca1\u6709\u5fc5\u8981\uff0c\u80fd\u8bf4\u4e0b\u4f60\u7684\u5e94\u7528\u573a\u666f\u5417\uff1f",
        "\u5370\u8c61\u4e2dattachment\u53ea\u80fd\u662fprovider\u5230consumer\u7684",
        "@qixiaobo \u4f60\u8bf4\u53cd\u4e86\uff0c\u76ee\u524ddubbo \u5728consumer\u8c03\u7528provider\u4f1a\u4f7f\u7528attachment",
        "\u611f\u89c9\u8fd9\u662f\u56de\u8c03\u7684\u529f\u80fd\u5427\u3002\u670d\u52a1\u7aef\u5f80\u6d88\u606f\u8d39\u63a8\u9001\u6d88\u606f",
        "\u5982\u679cprovider\u80fd\u7ed9consumer\u9690\u5f0f\u56de\u4f20\u53c2\u6570\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u7279\u522b\u6709\u7528\u3002\u6211\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679cconsumer\u5e0c\u671b\u80fd\u6253\u5370\u8c03\u7528provider\u7684\u6765\u56de\u7f51\u7edc\u8017\u65f6\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u83b7\u53d6provider\u7684\u5904\u7406\u8017\u65f6\uff0c\u901a\u8fc7consumer\u7684\u8017\u65f6\u51cf\u53bbprovider\u7684\u5904\u7406\u8017\u65f6\uff0c\u53ef\u4ee5\u5f97\u5230\u6765\u56de\u7f51\u7edc\u8017\u65f6\uff0c\u8fd9\u65f6\u5019\u9700\u8981provider\u5c06\u5904\u7406\u8017\u65f6\u4f20\u8fc7\u6765\uff0c\u901a\u8fc7\u9690\u5f0f\u4f20\u503c\u80fd\u907f\u514d\u76f4\u63a5\u4fb5\u5165\u6b63\u5e38\u4e1a\u52a1\u3002",
        "@manzhizhen The scene you give is quite reasonable, i think we should support this feature.",
        "Network loss is usually shown by tracing platform.  But back pressure like server tells its status to client may be useful"
    ],
    "4141": [],
    "1551": [],
    "2746": [],
    "817": [],
    "895": [
        "\u6cdb\u578b\u8c03\u7528\u65f6consumer\u7aef\u83b7\u53d6\u670d\u52a1\u7aef\u4f20\u8fc7\u6765\u7684attachment\uff0c\u83b7\u53d6\u4e0d\u5230",
        "@hsrong \u80fd\u5426\u66f4\u5177\u4f53\u4e00\u70b9\uff1f",
        "@mercyblitz \r\n\u670d\u52a1A\u8c03\u7528\u670d\u52a1B\uff0c\u73b0\u5728\u5e0c\u671b\u670d\u52a1B\u901a\u8fc7\u4e0a\u4e0b\u6587\u800c\u4e0d\u662f\u901a\u8fc7\u8fd4\u56de\u503c\u7684\u65b9\u5f0f\uff0c\u7ed9\u670d\u52a1A\u8fd4\u56de\u67d0\u4e00\u4e2a\u503c\uff0c\u5982\uff1a\r\npublic void methodA() {\r\n    methodB();//\u901a\u8fc7DUBBO\u8c03\u7528\u670d\u52a1B\r\n    value = \u4e0a\u4e0b\u6587.getXXX();\r\n}\r\npublic void methodB(){\r\n     \u4e0a\u4e0b\u6587.setXXX(value);\r\n}\r\n\u4ee5\u4e0a\u4ee3\u7801\u53ea\u662f\u793a\u4f8b\uff0c\u5b9e\u9645\u7f16\u7801\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4e0d\u4f1a\u5199\u4fb5\u5165\u6027\u8fd9\u4e48\u5f3a\u7684\u4ee3\u7801\uff0c\u4e0a\u4e0b\u6587\u503c\u7684\u8bbe\u7f6e\u548c\u83b7\u53d6\u4f1a\u88ab\u5199\u5728\u62e6\u622a\u5668\u5f53\u4e2d",
        "\u6211\u76f4\u89c9\u5730\u8ba4\u4e3a\u81ea\u5b9a\u4e49 ThreadLocal\u662f\u5426\u53ef\u4ee5\u6ee1\u8db3?",
        "@mercyblitz \u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u670d\u52a1A\u662f\u901a\u8fc7DUBBO\u8de8\u673a\u5668\u8fdc\u7a0b\u8c03\u7528\u670d\u52a1B",
        "@hsrong  \u4f60\u7684\u9700\u6c42\u662f\u5426\u540c\u8fd9\u4e2a\u76f8\u540c #889\uff0c\u4f60\u4eec\u76ee\u524d\u671f\u5f85\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u5178\u578b\u4e1a\u52a1\u573a\u666f\u662f\uff1f",
        "@chickenlj \u662f\u76f8\u540c\u7684\uff0c\u6211\u662f\u505a\u67b6\u6784\u7684\uff0c\u6211\u5e0c\u671b\u901a\u8fc7\u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0f\u5b9e\u73b0\u5bf9\u4e1a\u52a1\u65b9\u6cd5\u505a\u4e00\u4e9b\u63a7\u5236\uff0c\u5bf9\u4e1a\u52a1\u65b9\u6cd5\u6765\u8bf4\uff0c\u8fd9\u4e9b\u63a7\u5236\u662f\u900f\u660e\u7684\u3002\r\n\u5b9e\u9645\u4e0a\u6211\u5df2\u7ecf\u5b9e\u73b0\u4e86\uff0c\u5982\u4e0b\uff1a\r\n![image](https://user-images.githubusercontent.com/13184705/33114475-01f797dc-cf98-11e7-9d15-911469f63002.png)\r\n![image](https://user-images.githubusercontent.com/13184705/33114544-3f9690ac-cf98-11e7-89b5-1fcb645d888c.png)\r\n![image](https://user-images.githubusercontent.com/13184705/33114614-88095766-cf98-11e7-9fd7-0b4b22e2217a.png)\r\n\u5b9e\u73b0\u5f97\u6709\u95ee\u9898\u5e0c\u671b\u6307\u6b63\uff0c\u65e2\u7136\u4f60\u4eec\u91cd\u542f\u7ef4\u62a4\uff0c\u5e0c\u671b\u8fd8\u662f\u7531\u4f60\u4eec\u6765\u5b9e\u73b0",
        "@hsrong \u5176\u5b9e\u4f60\u63d0\u4ea4\u4e00\u4e2aPull Request\u53ef\u80fd\u6765\u5f97\u66f4\u5feb\u2026\u2026 \u54e6\uff0c\u4f60\u4e0d\u4f1a\u662f\u5728dubbox\u4e0a\u4fee\u6539\u7684\u5427\uff1f",
        "\u8bb2\u4e00\u4e0b\u4e2a\u4eba\u7684\u7406\u89e3\uff0c\u4e0d\u4e00\u5b9a\u51c6\u786e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u5f53\u4e8e\u76f4\u63a5\u4f20\u4e86\u4e2a\u4e0a\u4e0b\u6587\u5230\u53c2\u6570\u91cc\u9762\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u53c2\u6570\u6765\u4fee\u6539\u4e0a\u4e0b\u6587\uff08\u5b9e\u9645\u4e0a\u56e0\u4e3a\u662f\u8fdc\u7a0b\u8c03\u7528\uff0c\u7ecf\u8fc7\u4e86IO\uff09\uff0c\u4f46\u5bf9\u4e8e\u8c03\u7528\u8005\u7684\u4e0a\u4e0b\u6587\u6765\u8bf4\u4e0d\u592a\u53ef\u63a7\uff0c\u6216\u8005\u53d8\u66f4\u4e86\u4ec0\u4e48\u65e0\u6cd5\u5728\u672c\u5730\u7684\u4ee3\u7801\u91cc\u9762\u770b\u51fa\u6765\uff0c\u67e5\u95ee\u9898\u4e5f\u6bd4\u8f83\u9ebb\u70e6\u3002\u4f3c\u4e4e\u8ddf\u5fae\u670d\u52a1\u7684\u7406\u5ff5\u4e0d\u592a\u4e00\u6837\uff08\u81ea\u6cbb\uff0c\u9ad8\u5185\u805a\uff0c\u53ea\u901a\u8fc7RPC\u65b9\u5f0f\u6765\u4ea4\u6d41\uff09",
        "@hsrong You can create a Pull Request",
        "Duplicate of #889 ",
        "consider adding new protocol version for the comparability "
    ],
    "2630": [],
    "2217": [],
    "900": [
        "hessian\u534f\u8bae\u7684\u63d0\u4f9b\u8005\u7f13\u5b58\u662f \u5b58\u5728 HessianProtocol.skeletonMap \u91cc\u9762\u7684\uff0c\u5e76\u6ca1\u6709\u50cf dubboProtocol \u4e00\u6837\u5b58\u5728 exporterMap \u91cc\u9762\uff0c\r\n\u6240\u4ee5\u5728\u6536\u5230 overrride \u901a\u77e5\u65f6\u5019\uff0c\u5e76\u4e0d\u80fd\u66f4\u65b0 hessian \u534f\u8bae\u7684\u63d0\u4f9b\u8005\u4fe1\u606f\uff0c\r\n\r\n\u53ef\u5426\u5728 AbstractProxyProtocol \u505a\u4ee5\u4e0b\u4fee\u6539,\u91cd\u65b0\u66b4\u9732\u4e00\u6b21\r\n```\r\npublic <T> Exporter<T> export(final Invoker<T> invoker) throws RpcException {\r\n        final Runnable runnable = doExport(proxyFactory.getProxy(invoker), invoker.getInterface(), invoker.getUrl()); \r\n        Exporter<T> exporter = new AbstractExporter<T>(invoker) {\r\n\t\tpublic void unexport() {\r\n\t\t\tsuper.unexport();\r\n\t\t\texporterMap.remove(uri);\r\n\t\t\tif (runnable != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trunnable.run();\r\n\t\t\t\t} catch (Throwable t) {\r\n\t\t\t\t\tlogger.warn(t.getMessage(), t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn exporter;\r\n    }\r\n```"
    ],
    "4396": [],
    "906": [
        "telnet\u8c03\u7528\u63a5\u53e3\u65f6\uff0c\u63a5\u53e3\u51fa\u53c2\u7684\u5b57\u6bb5\u542b\u6709\u679a\u4e3e\u65f6\uff0c\u540c\u6837\u4f1a\u51fa\u73b0StackOverFlowError\u7684\u95ee\u9898",
        "\u8001\u9879\u76ee\u6709\u65f6\u5019\u4f24\u4e0d\u8d77\uff01\u4f9d\u8d56\u5173\u7cfb\u6709\u65f6\u5019\u592a\u591a\u4e86\uff01\r\n\r\nfix see #906\uff0clocale\u7684\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u4e3aLocale\u5bf9\u8c61\uff0c\u6211\u60f3\u5e94\u8be5\u662fok\u7684\r\n\r\n\u6bd4\u5982jackson\u7684\u6d4b\u8bd5\u4ee3\u7801\r\n```\r\npublic static void main(String[] args) throws IOException {\r\n\tObjectMapper mapper = new ObjectMapper();\r\n\tString json = mapper.writeValueAsString(Locale.US);\r\n\tSystem.out.println(json);\r\n\tSystem.out.println(mapper.readValue(json, Locale.class));\r\n}\r\n```",
        "2.5.7 \u6211\u4eec\u5df2\u7ecf\u5e9f\u5f03\u6389\u8fd9\u4e2a\u4e86\uff0c\u4f60\u518d\u786e\u5b9a\u4e00\u4e0b\uff1f",
        "\u6211\u4eec\u81ea\u5df1\u57fa\u4e8e\u539f\u6765\u7684accesslog\u81ea\u5df1\u52a0\u4e0a\u4e86\u4e00\u70b9\u4e1c\u897f\u3002\u540e\u9762\u6211\u4eec\u4f1a\u6539\u7528fastjson\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u9057\u7559\u4ee3\u7801\u65e2\u7136\u8fd8\u4fdd\u7559\uff0c\u6700\u597d\u662f\u4fee\u590d\u4e0b\u8fd9\u4e2abug\uff0c\u5c31\u6015\u7c7b\u4f3c\u6211\u8fd9\u6837\u7528\u4e86\u51e0\u5e74\u7684dubbo\u65f6\uff0c\u9057\u7559\u4ee3\u7801\u517c\u5bb9\u6027\u4e0a\u6709\u95ee\u9898\u3002"
    ],
    "2768": [],
    "909": [],
    "911": [
        "fix\u540e\u6d4b\u8bd5\uff1a\r\n* 2.5.7\u7684rmi\u8c03\u75282.5.4-SNAPSHOT\u7684provider ok\r\n* 2.5.4-SNAPSHOT\u7684rmi\u8c03\u75282.5.7\u7684provider ok\r\n",
        "I have fixed with commit 6d606248241e5f4f23efdf5e692eb22fa02e363c"
    ],
    "5038": [],
    "2101": [],
    "922": [],
    "929": [],
    "2618": [],
    "934": [
        "\u786e\u5b9e\u78b0\u5230\u4e86\u8fd9\u6837\u7684\u95ee\u9898\u3002\r\n\u5728\u901a\u8fc7loadbalance\u505a\u4f1a\u8bdd\u4fdd\u6301\uff0c\u5f53\u4e24\u4e2a\u8282\u70b9\u65f6\uff0c\u4f1a\u8bdd\u4fdd\u6301\u4e0d\u4e86\u3002",
        "\u662f\u7684\uff0c\u56e0\u4e3a\u6ca1\u5230\u6269\u5c55\u903b\u8f91\u5c31\u8fd4\u56de\u4e86\uff0c\u662f\u4e3a\u66ff\u5927\u4f17\u7528\u6237\u601d\u8003\u7684\u5462\uff0c\u5c11\u4e00\u6b21\u4ee3\u7406\u8d1f\u8f7d\u7684\u903b\u8f91\uff0c\u4f46\u662f\u5bf9\u4e8efreeStyle\u7684\u5c0f\u4f19\u4f34\u4eec\u53d7\u9650\u4e86\uff0c\u8ba9\u6211\u4eec\u5954\u653e\u5427",
        "Get it. I will do it in a few days.",
        "After discussing with @chickenlj , we decide to remove 140-142 lines, as the following shows: \r\n\r\n```java\r\nprivate Invoker<T> doSelect(LoadBalance loadbalance, Invocation invocation, List<Invoker<T>> invokers, List<Invoker<T>> selected) throws RpcException {\r\n        if (invokers == null || invokers.isEmpty())\r\n            return null;\r\n        if (invokers.size() == 1)\r\n            return invokers.get(0);\r\n        // If we only have two invokers, use round-robin instead.\r\n140        //if (invokers.size() == 2 && selected != null && !selected.isEmpty()) {\r\n141        //    return selected.get(0) == invokers.get(0) ? invokers.get(1) : invokers.get(0);\r\n142        //}\r\n        if (loadbalance == null) {\r\n            loadbalance = ExtensionLoader.getExtensionLoader(LoadBalance.class).getExtension(Constants.DEFAULT_LOADBALANCE);\r\n        }\r\n        Invoker<T> invoker = loadbalance.select(invokers, getUrl(), invocation);\r\n\r\n        //If the `invoker` is in the  `selected` or invoker is unavailable && availablecheck is true, reselect.\r\n        if ((selected != null && selected.contains(invoker))\r\n```\r\n\r\nBecause the `selected` param is not null only when retry or in ForkingClusterInvoker. And the reselect function will finally select a available invoker. \r\n\r\nSo these 3 lines code seems unnecessary. ",
        " @diecui1202  @chickenlj Pretty Good,But the only  one invoker exists ,and  we  also can't  expand  our  intentions.",
        "Could you tell us the scenario that need to expand when only 1 invoker exists.",
        "Assuming that the three normal services can maintain the business, notify the container platform to rebuild the service or notify the alarm platform when the payload encounters only one or no invoker alive",
        "That's a good point, we'll discuss the feasibility"
    ],
    "1555": [],
    "936": [
        "@ycfang @Loveless070 Could you fix this and start a PR ? ",
        "\u8fd9\u4e2a\u60f3\u6cd5\u4e0d\u9519,,,,,,\u53e6\u5916\u6211\u60f3\u95ee\u4f60\u4e00\u4e9b\u4e8b\u60c5,,,\u90a3\u4e2a\u542f\u52a8\u811a\u672c\u4e2d,,\u6709\u4e9b\u5730\u65b9 \u7528\u7684 ps -f ,,\u6709\u4e9b\u5730\u65b9\u7528\u7684 ps -ef ,,,,,,,\u90a3\u4e9b ps -f \u547d\u4ee4\u6709\u4ec0\u4e48\u610f\u4e49\u5417,,,,\u6bd4\u5982 ps -f | grep java | grep -v grep | grep \"$DEPLOY_DIR\" | awk '{print $2}' | wc -l \r\n\u6211\u8bd5\u4e86\u51e0\u6b21 \u8fd9\u4e2a\u547d\u4ee4 \u5e76\u4e0d\u80fd\u83b7\u53d6\u4ec0\u4e48 \u4e1c\u897f,,,,ps -ef \u53ef\u4ee5"
    ],
    "3046": [],
    "938": [
        "\u4ee5\u4e0a\u95ee\u9898\u4e5f\u9047\u5230\u4e86+1"
    ],
    "941": [
        "#949 "
    ],
    "673": [],
    "720": [],
    "1948": [],
    "3316": [],
    "276": [],
    "1643": [],
    "972": [],
    "410": [],
    "4785": [],
    "1987": [],
    "3049": [],
    "992": [],
    "3966": [],
    "998": [
        "Thx, we should use two different ports.\r\n\r\n@qinliujie  How to specify a specific port?",
        "see #1003"
    ],
    "2957": [],
    "905": [],
    "4161": [],
    "2382": [],
    "4492": [],
    "4465": [],
    "1015": [
        "\u6211\u4e0d\u7406\u89e3consumer\u7aef\u7684\u4e24\u5904\u914d\u7f6e\uff1a\r\n```properties\r\n###  <dubbo:application name=\"dubbo-annotation-consumer\"/>\r\ndubbo.application.dubbo-annotation-consumer.name = Dubbo Consumer\r\ndubbo.application.dubbo-annotation-consumer2.name = dubbo-consumer2\r\n\r\n### <dubbo:registry id=\"my-registry\" address=\"N/A\"/>\r\ndubbo.registry.my-registry.address = N/A\r\ndubbo.registry.my-registry2.address = N/A\r\n```\r\n\u4e3a\u4ec0\u4e48\u6307\u5b9a\u4e24\u4e2adubbo.registry\u7684\u65b9\u5f0f\u548cprovider\u662f\u4e0d\u4e00\u6837\u7684\uff1fprovider\u7528\u7684\u662f:\r\n```properties\r\n### <dubbo:registry id=\"my-registry\" address=\"N/A\"/>\r\ndubbo.registry.id = my-registry\r\ndubbo.registry.address = N/A\r\n```",
        "@chickenlj \r\n```properties\r\n###  <dubbo:application name=\"dubbo-annotation-consumer\"/>\r\ndubbo.application.dubbo-annotation-consumer.name = Dubbo Consumer\r\ndubbo.application.dubbo-annotation-consumer2.name = dubbo-consumer2\r\n```\r\n\r\n\u4ee5\u4e0a\u5b9a\u4e49\u4e3a`AppicationConfig` \u591a Bean \u7684\u5b9a\u4e49\u65b9\u5f0f\uff0c\u6a21\u5f0f\u4e3a\uff1a`dubbo.application.${bean-name}.${property-name} = ${property-value}\r\n\r\n\u6bd4\u5982\u5982\u679c\u5e94\u7528\u4e0a\u4e0b\u6587\u53ea\u6709\u4e00\u4e2a`AppicationConfig` Bean \u7684\u8bdd\uff0c\u90a3\u4e48\uff0c\u53ea\u9700\u8981\u5982\u4e0b\u5b9a\u4e49\uff1a\r\n```properties\r\ndubbo.application.id = app-id\r\ndubbo.application.name =  app-name\r\n```\r\n\r\n\u5982\u679c\u4ec5\u652f\u6301`dubbo.application.id`\u7684\u8bdd\uff0c\u5bf9\u4e8e`AppicationConfig` \u8fd8\u53ef\u4ee5\u7406\u89e3\u3002\u5982\u679c\u9700\u8981\u591a\u6ce8\u518c\u4e2d\u5fc3\u7684\u7684\u8bdd\uff0c`RegistryConfig` \u591aBean \u5b9a\u4e49\u9700\u8981\u914d\u7f6e\u652f\u6301\u3002",
        "Mark. \r\n\u5982\u5f00\u542f@EnableDubbo(multiConfig = true), \u5219\u6240\u6709\u914d\u7f6e\u9879\u90fd\u5fc5\u987b\u4f7f\u7528\u591aBean\u6a21\u5f0f\u914d\u7f6e\uff0c\u5373\uff1a\r\n```properties\r\ndubbo.registry.registry1.address=xxx\r\n```",
        "@willlau0524 \u672c\u5468\u53d1\u5e03",
        "\u6211\u4f7f\u7528yml\u6587\u4ef6\u914d\u7f6e\u8fd93\u4e2a\u914d\u7f6e\u9879, \u597d\u50cf\u5e76\u4e0d\u751f\u6548\r\n\r\ndubbo.protocol.id = dubbo\r\ndubbo.protocol.name = dubbo\r\ndubbo.protocol.port = 12345\r\n\r\n\u6211\u7684\u914d\u7f6e\u6587\u4ef6:\r\n```\r\ndubbo:\r\n  application:\r\n    name: showcase-provider\r\n  registry:\r\n    address: zookeeper://x.x.x.x:2181\r\n  protocol:\r\n    id: dubbo\r\n    name: dubbo\r\n    port: 30000\r\n```\r\n\u542f\u52a8\u65e5\u5fd7\u4e2d\u770b\u5230\u7684:\r\n```\r\n2018-01-03 10:04:57.302  INFO 5004 --- [  restartedMain] c.a.d.r.zookeeper.ZookeeperRegistry      :  [DUBBO] Notify urls for subscribe url provider://x.x.x.x:20880/xxx\r\n```\r\n",
        "\u8c03\u67e5\u7ed3\u679c:\r\n\u5728\u8bfb\u53d6\u914d\u7f6e\u9879\u7684\u65f6\u5019, \u4f1a\u8c03\u7528\u5230\u8fd9\u4e2a\u65b9\u6cd5\r\ncom.alibaba.dubbo.config.spring.util.PropertySourcesUtils#getSubProperties\r\n\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u5199\u7740value\u662fString\u624d\u653e\u5165map\u4e2d\r\n```\r\npublic static Map<String, String> getSubProperties(PropertySources propertySources, String prefix) {\r\n\r\n        Map<String, String> subProperties = new LinkedHashMap<String, String>();\r\n\r\n        String normalizedPrefix = prefix.endsWith(\".\") ? prefix : prefix + \".\";\r\n\r\n        for (PropertySource<?> source : propertySources) {\r\n            if (source instanceof EnumerablePropertySource) {\r\n                for (String name : ((EnumerablePropertySource<?>) source).getPropertyNames()) {\r\n                    if (name.startsWith(normalizedPrefix)) {\r\n                        String subName = name.substring(normalizedPrefix.length());\r\n                        Object value = source.getProperty(name);\r\n                        if (value instanceof String) {\r\n                            subProperties.put(subName, String.valueOf(value));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return subProperties;\r\n\r\n    }\r\n```\r\n\r\n\u800c\u914d\u7f6e\u9879dubbo.protocol.port\u662fInteger\r\n\r\n\r\n\u7ebf\u7a0b\u5806\u6808:\r\n```\r\nrestartedMain@1690\" prio=5 tid=0x14 nid=NA runnable\r\n  java.lang.Thread.State: RUNNABLE\r\n\t  at com.alibaba.dubbo.config.spring.util.PropertySourcesUtils.getSubProperties(PropertySourcesUtils.java:40)\r\n\t  at com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.registerDubboConfigBeans(DubboConfigBindingRegistrar.java:72)\r\n\t  at com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.registerBeanDefinitions(DubboConfigBindingRegistrar.java:61)\r\n\t  at com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingsRegistrar.registerBeanDefinitions(DubboConfigBindingsRegistrar.java:38)\r\n```",
        "\u89e3\u51b3\u65b9\u6848:\r\n\u5728yml\u6587\u4ef6\u4e2d, \u5c06port\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\r\n```\r\ndubbo:\r\n  protocol:\r\n    port: \"30000\"\r\n```",
        "@cwt9562 Spring did not provider the Yaml loader , Spring Boot did\uff01"
    ],
    "1329": [],
    "2801": [],
    "2650": [],
    "4319": [],
    "5482": [],
    "3317": [],
    "4829": [],
    "2581": [],
    "1046": [
        "merged"
    ],
    "486": [],
    "1574": [],
    "4211": [],
    "1054": [
        "In `DubboInvoker.doInvoke`, there are some lines to add attachment to the `invocation`.\r\nThe application name from url parameter can be put into the attachments of invocation for sending to provider.\r\n\r\nUser can work with `DubboProtocol.reply` to print logs and so on.\r\n#2377 ",
        "1) Configure \"consumer.xml\" file:  \"consumer.xml\" already defines the application name attribute like this:\r\n<dubbo:application name=\"demo-provider\"/>\r\n2) RpcContext: There is an field \"attachments\" in the \"RpcContext.java\" to support the developer to extend the field values in the form of a key-value.\r\n3) in the ComsumerContextFilter, we use the invoke() method to call the RpcContext.setAttachment() method as follows:\r\nRpcContext.setAttachment(Constants.APPLICATION_KEY,invoker.getUrl().getParameter(\"application\"))\r\n4) The Provider can take the application name from the RpcContext:\r\nRpcContext.getContext().getAttachment(\"application name\")",
        "Hi, pls look at here for more info:\r\nhttps://github.com/dubbo/dubbo-samples\r\nIt is recommended to pass the application information of the consumer through the attachment."
    ],
    "1055": [],
    "5002": [],
    "5484": [],
    "3457": [],
    "3407": [],
    "1080": [
        "I think we can discuss it in https://github.com/dubbo/dubbo-rpc-native-thrift , I'll close it now "
    ],
    "2123": [],
    "1089": [
        "We will track this issue with PR #1449.  Remove from milestone and close this issue.",
        "Yes, i think your are right, it's the same with `all dispatcher`, we may fix the execution dispatcher policy to meet the description in docs in the next version."
    ],
    "2764": [],
    "2967": [],
    "588": [],
    "2272": [],
    "1095": [
        "Duplicate with #1559 ",
        "thrift support attachemnts transfer?",
        "We are considering support the original ` Thrift RPC Protocol`, this can solve the communication problem when your need to program cross languages. But still, our service management ability only restricted to `java`, because we don't have multi-language implementations for dubbo core features. Maybe in the future, we will figure out a plan like Service Mesh to solve this problem.",
        "Many thanks. I'm willing for the day that Dubbo supports the native `Thrift RPC Protocol`.",
        "@lovepoem  is working on this feature."
    ],
    "2656": [],
    "1116": [
        "You also could remove some test cases , sorry for careless :(",
        "It will be resolved in next release , please add fake class to compile"
    ],
    "2208": [],
    "1120": [],
    "1121": [],
    "1122": [
        "Their will be exposed in  2.5.9"
    ],
    "2125": [],
    "1125": [],
    "1951": [],
    "3656": [],
    "725": [],
    "1762": [],
    "3624": [],
    "1141": [],
    "2225": [],
    "4174": [],
    "3757": [],
    "3116": [],
    "2750": [],
    "2237": [],
    "2333": [],
    "1820": [],
    "4085": [],
    "73": [],
    "4579": [],
    "3382": [],
    "1167": [
        "Maven wrapper is a plugin more suitable for business project, we don't need this feature for dubbo as it is a framework."
    ],
    "2735": [],
    "1166": [
        "pls. check 9c2e2fa6d3c4e5893deb930bffa469993c2161a6"
    ],
    "5348": [],
    "590": [],
    "2213": [],
    "3957": [],
    "912": [],
    "1186": [
        "bad compatibility",
        "client=\"curator\""
    ],
    "2204": [],
    "3222": [],
    "1201": [
        "The router can not match both `serialization` and `default.serialization` automatically. So try use `default.serialization`?",
        "@chickenlj Condition router should try use default.serialization. I have fixed this in #1204 "
    ],
    "1339": [],
    "2137": [],
    "910": [],
    "1148": [],
    "1216": [
        "Would you please create a Pull Request?",
        "Is there anything wrong with this?   providers.size >= 0  @hqq2023623 ",
        "if providers != null ,  this line will look like : (providers != null && true) , I think it's no need to do this @lovepoem "
    ],
    "4352": [],
    "4891": [],
    "239": [],
    "1226": [],
    "4721": [],
    "4616": [],
    "3572": [],
    "4354": [],
    "1231": [
        "Thanks, i will review the PR laterly.",
        "Hi, could you provide more details (file name, line number for example)?",
        "## type1 : check null more than one time\r\n### FutureFilter#fireInvokeCallback\r\nline 110 \uff0c  onInvokeMethod is checked by line 107\r\n<img width=\"984\" alt=\"1\" src=\"https://user-images.githubusercontent.com/6971152/35096459-414c308e-fc87-11e7-986a-b1cc43ca2b0b.png\">\r\n### the same as   FutureFilter#fireReturnCallback\r\n<img width=\"996\" alt=\"2\" src=\"https://user-images.githubusercontent.com/6971152/35096479-598bd4a6-fc87-11e7-8915-411a295c1751.png\">\r\n### and   FutureFilter#fireThrowCallback\r\n<img width=\"998\" alt=\"3\" src=\"https://user-images.githubusercontent.com/6971152/35096502-68242766-fc87-11e7-8e45-e95f4fe8a7ec.png\">\r\n\r\n## type2 :  checked by context\r\n### MergeableClusterInvoker#invoke ,at line 144\r\n<img width=\"727\" alt=\"4\" src=\"https://user-images.githubusercontent.com/6971152/35096537-83122546-fc87-11e7-93b5-6a184a8d0361.png\">\r\nreturnType.getMethod() will not return null\r\n<img width=\"865\" alt=\"5\" src=\"https://user-images.githubusercontent.com/6971152/35096555-938d8a96-fc87-11e7-82e7-144faa2b68e4.png\">\r\n\r\n### JavaBeanDescriptor#getEnumPropertyName , at line 141\r\n<img width=\"698\" alt=\"6\" src=\"https://user-images.githubusercontent.com/6971152/35096996-365cdb36-fc89-11e7-900f-353fde25017c.png\">\r\nif getProperty() return null , then toString() may throw NPE before the  result == null check\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "## type3 :  call method that never return null\r\n###ExtensionLoader#hasExtension  ,  at line 333\r\n<img width=\"682\" alt=\"7\" src=\"https://user-images.githubusercontent.com/6971152/35097258-5606f1dc-fc8a-11e7-9ef8-5ac64a94bb82.png\">\r\nExtensionLoader#getExtensionClass() never return null \r\n<img width=\"879\" alt=\"8\" src=\"https://user-images.githubusercontent.com/6971152/35097265-5f44e966-fc8a-11e7-8b00-ae9319c56c0a.png\">\r\n\r\n \r\n",
        "## type4 : check by both caller and self\r\n### caller : RegistryDirectory#notify , at line 207\r\n<img width=\"602\" alt=\"1\" src=\"https://user-images.githubusercontent.com/6971152/35097474-3be93ed0-fc8b-11e7-8a43-f7b3c530176f.png\">\r\n\r\n### self : RegistryDirectory#toRouters , at line 309\r\n<img width=\"766\" alt=\"2\" src=\"https://user-images.githubusercontent.com/6971152/35097481-4731a520-fc8b-11e7-8695-f37c5293b2a7.png\">\r\n",
        "@ralf0131 ",
        "Hi @hqq2023623 Thanks for pointing out. It will be really appreciate if you can create a pull request~"
    ],
    "3679": [],
    "34": [],
    "1233": [
        "Hi, thanks for reporting.  Would you mind sending us a pull request?"
    ],
    "4619": [],
    "1245": [
        "Can you please create a PR?",
        "How to creat patch file \uff1f",
        "How to create patch files ?",
        "Sorry, this change seems to have some problems. Refer your PR #1375 for more details"
    ],
    "5017": [],
    "4240": [],
    "518": [],
    "5367": [],
    "3507": [],
    "45": [],
    "4741": [],
    "3983": [],
    "4513": [],
    "3003": [],
    "4919": [],
    "1260": [
        "Hi, would you kindly send us a pull request?"
    ],
    "5503": [],
    "1577": [],
    "3": [],
    "5402": [],
    "3220": [],
    "1277": [],
    "1284": [
        "You can see the reason at [here ](http://openjdk.java.net/jeps/122)",
        "@web1992 Yes, my plan is to use maven profile to add different vm args when running on different JVM. Are you interested in fixing this issue? If so, you can take that ticket.",
        "@ralf0131 I'm glad to",
        "@web1992 Great! You can send us a pull request once you finished.",
        "@ralf0131 Hi, I had send a PR.If you have any questions,please call me. ",
        "Hi, I also find `PermSize` and `MaxPermSize` vm args in files:\r\n- [start.bat lines 11,15,19](https://github.com/alibaba/dubbo/tree/master/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/start.bat)\r\n- [start.sh lines 63,65](https://github.com/alibaba/dubbo/tree/master/dubbo-container/dubbo-container-api/src/main/resources/META-INF/assembly/bin/start.sh)\r\n\r\nNeed we create new issues to fix it?",
        "@web1992 Please open a new issue.",
        "@web1992 Thanks for your PR, i will have a review on it."
    ],
    "3257": [],
    "1289": [
        "`DUBBO_IP_TO_REGISTRY`  and `DUBBO_PORT_TO_REGISTRY` don't affect the ip and port your provider bind to.  If you only specify ip and port for registry and use different ip and port for binding, your network should have a mechanism to map registry ip/port with bind ip/port automatically. Like `Port Mapping` docker provides.",
        "\u611f\u8c22\u4f60\u7684\u56de\u590d\uff0c\u6211\u4eec\u5df2\u7ecf\u5728docker\u4e2d\u505a\u4e86\u7aef\u53e3\u6620\u5c04\uff0c\u5e76\u4e14\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\r\ntelnet 30.5.97.6 31838\r\nls\r\ninvoke  hbec.app.test.service.TestService.test()\r\n\r\n\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u901a\u5e76\u4e14\u6211\u4eec\u5728zookeeper\u4e2d\u4e5f\u662f\u53ef\u4ee5\u53d1\u73b031838\u6ce8\u518c\u7684provider\u670d\u52a1\uff0c\u4f46\u6211\u4eec\u901a\u8fc7consumer\u53bb\u8c03\u7528provider\u7aef\u65f6\uff0cprovider\u7aef\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef:\r\nNot found exported service: hbec.app.test.service.TestService:20881 in [hbec.app.test.service.TestService:31838]\r\n\r\n\u6211\u4eec\u901a\u8fc7\u4fee\u6539DubboProtocol\u7c7b\u6e90\u7801:\r\n Invoker<?> getInvoker(Channel channel, Invocation inv) throws RemotingException {\r\n        boolean isCallBackServiceInvoke = false;\r\n        boolean isStubServiceInvoke = false;\r\n        int port = channel.getLocalAddress().getPort();\r\n        \r\n        //\u4e0b\u9762\u4ee3\u7801\u4e3a\u6211\u4eec\u81ea\u5df1\u6dfb\u52a0\u7684\u4ee3\u7801\r\n        String portToRegistryStr = ConfigUtils.getSystemProperty(Constants.DUBBO_PORT_TO_REGISTRY);\r\n        if(null!=portToRegistryStr){\r\n        \tport=Integer.parseInt(portToRegistryStr);//\u53d6\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7684\u7aef\u53e3\r\n        }\r\n\u7ecf\u91cd\u65b0\u7f16\u8bd1\u6253\u5305\u6e90\u7801\u540e\u6d4b\u8bd5\u8c03\u7528\u6210\u529f\u3002\r\n\r\ndocker\u7aef\u53e3\u6620\u5c04\u4ee3\u7801\u5982\u4e0b:\r\n    \"ports\": [\r\n      {\r\n        \"name\": \"dubbo\",\r\n        \"protocol\": \"TCP\",\r\n        \"port\": 20881,\r\n        \"targetPort\": 20881,\r\n        \"nodePort\": 31838\r\n      }\r\n    ]\r\n\r\n"
    ],
    "4430": [],
    "2406": [],
    "637": [],
    "3501": [],
    "773": [],
    "1297": [
        "Would you like to create a PR?"
    ],
    "457": [],
    "1303": [],
    "1306": [
        "AnnotationBean    private Object refer(Reference reference, Class<?> referenceClass) ",
        "I think this problem needs to be fixed: `com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor#generateReferenceBeanCacheKey`",
        "mark. \r\n",
        "Will be fixed on Dubbo `2.5.11`",
        "Has this problem fixed ?",
        "this issue is no longer valid, has been fixed."
    ],
    "2947": [],
    "2130": [],
    "4214": [],
    "1313": [
        "Hi, if you think it can be improved, would you mind sending us a pull request? "
    ],
    "4900": [],
    "1317": [],
    "2509": [],
    "1322": [
        "if your regristry support can be public, i suggest you add it to your dubbo  branch and submit a pr to this project.",
        "@kimmking Thanks for your reply, We are planing to open source extension for dubbo and wish dubbo can split the sub-module deployed to maven alone, because sometime not all features should submit to master branch\uff0c we want new features  are  based on plugability, not be embbed in dubbo.\r\n@chickenlj",
        "The modular is on progress now, we plan to keep the core structure unchanged while introduce the following small changes:  \r\n1. extract serialization module from `dubbo-common`.\r\n2. change module name `dubbo-rpc-default` to `dubbo-rpc-dubbo`.\r\n\r\nFor dubbo users, they should mainly care about the following modules:  \r\n* dubbo-rpc-dubbo - P2P Remoting RPC\r\n* dubbo-remoting-netty - Network  Communication\r\n* dubbo-registry-zookeeper - Service Registry&Discovery, LoadBalance\r\n* dubbo-serialization-hessian2 - Serialization\r\n* dubbo-config-spring/api - Configuration",
        "@chickenlj How to deal with the module of api ?",
        "For example, you can add the following dependencies to enable P2P RPC:\r\n* dubbo-rpc-dubbo\r\n* dubbo-remoting-netty\r\n* dubbo-serialization-hessian2\r\n* dubbo-config-spring\r\n\r\nAnd if you also add `dubbo-registry-zookeeper`, you will have a registry integration and consumers will find service providers automatically and do load-balance between providers; Otherwise, you can also use Service Registry abilities provided by other infrastructures, such as K8S.",
        "@zonghaishang \r\nAPI will still be packaged separately, as a plugin developer, you can depend on an single API.\r\nMy explanation above is mainly from the perspective of end users, for example:\r\n`dubbo-registry-zookeeper` will pass `dubbo-registry-api`, `zookeeper`, and other modules as transitive dependencies, so users don't need to care about these.",
        "@chickenlj  Thanks ,That's what i want.",
        "Now, if you don't like the all-in-one jar, you can introduce dubbo to your project using the following pom:\r\n\r\n```xml\r\n<dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>dubbo-bom</artifactId>\r\n                <version>2.6.1</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n<dependencies>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>dubbo-config-spring</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>dubbo-registry-zookeeper</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>dubbo-rpc-dubbo</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>dubbo-remoting-netty</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>dubbo-serialization-hessian2</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n```"
    ],
    "4819": [],
    "1324": [
        "May I make a pull request to fix this issues?",
        "Yes, create a PR whenever you find a problem or have a good idea."
    ],
    "1718": [],
    "4804": [],
    "5351": [],
    "1330": [
        "@ralf0131  I had open a new issues.",
        "@web1992 Do you have a PR for this?",
        "@ralf0131 If I could,I will send new PR later.",
        "@web1992 That's great!",
        "@ralf0131 I had send PR. #1347 "
    ],
    "4757": [],
    "13": [],
    "5252": [],
    "1343": [
        "You can create a PR. @wxiaoguang ",
        "good idea",
        "@wxiaoguang @lovepoem @kimmking  Do you guys think it will be better to catch this exception earlier? For example catch it in `DubboProtocol` or `Server` and reassign port.\r\n\r\nOr instead of wrapping with RpcException in DubboProtocol can we throw the original Exception directly to ServiceConfig? Just as HessianProtocol do.",
        "I think your solution code is not appropriate. If one has configged the port of protocol. And the port that he/she want to use. It will also throw the RpcException. And the application will retry to bind the same port in the infinite loop.",
        "it's rare race case on different process level, no need to fix. "
    ],
    "3729": [],
    "2950": [],
    "5107": [],
    "1151": [],
    "2931": [],
    "5451": [],
    "2684": [],
    "4649": [],
    "5476": [],
    "1362": [
        "it seems a bug",
        "\u6709\u51e0\u4e2a\u7591\u95ee\uff1a\r\n1\u3001dubbo\u5206\u652f\u6216\u8005\u7248\u672c\u662f\u591a\u5c11\r\n2\u3001CacheFactory$Adaptive\u8fd9\u4e2a\u7c7b\u662f\u4f60\u4eec\u81ea\u5df1\u5199\u7684\u5417\uff0c\u5728dubbo\u6e90\u7801\u91cc\u6ca1\u770b\u5230\r\n3\u3001\u5982\u679c\u662f\u81ea\u5df1\u5199\u7684\uff0c\u6309\u7167\u56fe\u91cc\u7684\u4ee3\u7801\u521b\u5efa\u7684\u5c31\u5e94\u8be5\u662f\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u7684LruCache\uff0c\u539f\u56e0\u5982\u4f60\u6240\u8bf4\u6ca1\u6709cache\u8fd9\u4e2akey\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u9002\u914dcache\u7684key\r\n4\u3001\u770b\u4f60\u7684\u95ee\u9898\u7684\u8bdd\u5e94\u8be5\u662f\u671f\u671b\u5728Reference\u548cMethod\u4e24\u5c42\u90fd\u914d\u7f6ecache\u7684\u8bdd\u5e94\u8be5\u7edf\u4e00\u7684key\u662f\u201ccache\"\uff0c\u90a3\u5982\u679c\u6211\u5e0c\u671bReference\u4e2d\u4e0d\u540c\u7684Method\u4f7f\u7528\u4e0d\u540c\u7684cache\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\r\n5\u3001URL\u53c2\u6570\u7684\u8bbe\u7f6e\u53ef\u4ee5\u5728ReferenceConfig#init()\u65b9\u6cd5\u67e5\u770b\r\n@zhaojigang ",
        "1\u3001\u5f53\u524dmaster\u5206\u652f\r\n2\u3001CacheFactory$Adaptive\u662f\u81ea\u9002\u5e94\u751f\u6210\u7684\u7c7b\r\n3\u3001\u4e0d\u662f\u81ea\u5df1\u5199\u7684\r\n4\u3001\u4e0d\u662f\u8fd9\u4e2a\u671f\u671b\uff0c\u4f60\u7406\u89e3\u9519\u8bef\u4e86\r\n@hqq2023623 ",
        "\u55ef\uff0c\u9ebb\u70e6\u5b98\u65b9\u770b\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u4e2abug @kimmking ",
        "@zhaojigang Would you like to create a PR?",
        "@zhaojigang\r\nif you wanna create a pr to fix this issue\uff0ci can give you some help",
        "\u95ee\u9898\u51fa\u5728ExtensionLoader\u4e0a\uff0c \u5728\u751f\u6210\u7684\u4ee3\u7406\u7c7b\u4e2d\uff0c\u5e94\u8be5\u4f7f\u7528url.getMethodParameter\u800c\u4e0d\u662furl.getParameter\r\n\u5177\u4f53\u7531https://github.com/alibaba/dubbo/blob/master/dubbo-common/src/main/java/com/alibaba/dubbo/common/extension/ExtensionLoader.java#L832\r\nhasInvocation \u63a7\u5236\r\n\u8c01\u80fd\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u4ec0\u4e48",
        "@kimmking  I will fix it."
    ],
    "2593": [],
    "2160": [],
    "2456": [],
    "2014": [],
    "3622": [],
    "3538": [],
    "3058": [],
    "3207": [],
    "1386": [
        "@Sunshow can you provide a small sample to demo how to reproduce?",
        "> ATT.\r\n> \r\n> this case consumer leads to throw\r\n> \r\n> Caused by: java.lang.NoClassDefFoundError: javax/validation/Validation\r\n> \r\n> even while calling no validation method, unless add all validation dependencies to consumer,\r\n> \r\n> that's not awesome.\r\n> \r\n\r\nI think it is reasonable to check validation conditions on consumer side before params passed to provider side as this can be more efficient. If we keep it this way, we will meet the problem in your case: all consumers have to be aware of provider side validation configurations, for example when provider opened validation check, consumer side have to add necessary dependencies.\r\n\r\nPlease, send this problem to dev@dubbo.apache.org, and [subscribe to this email address](https://github.com/alibaba/dubbo/issues/1393). We can decide which way to go after a full discussion.",
        "@chickenlj \r\nthanks, just sent the mail.",
        "@nzomkxia I think your suggestion works, would you please submit a pull request?\r\n\r\nhttps://github.com/apache/incubator-dubbo/blob/300f9c9fe1e4de8f14b494d8bf835b4e1ac6d5d6/dubbo-registry/dubbo-registry-api/src/main/java/com/alibaba/dubbo/registry/integration/RegistryProtocol.java#L230"
    ],
    "3276": [],
    "4150": [],
    "3221": [],
    "1907": [],
    "1398": [
        "I will follow up on #1375. \r\n\r\nNext time, we should make ensure that every modification be covered with UT, and only merge PRs passed UT.\r\n\r\nThis is a lesson to me and other contributors. "
    ],
    "1399": [
        "Hi, welcome to Dubbo community!\r\n\r\nPlease consider using English, Dubbo is a global community, and all the issues may be viewed and discussed by people all over the world.\r\n\r\nMeanwhile, you can send email to dev@dubbo.apache.org or subscribe it, which is preferred way for discussing questions like this.",
        "Fixed"
    ],
    "3628": [],
    "1411": [
        "one more comments: if user starts to complain the inter-op compatibility between old dubbo version and current version, we may need to consider to rollback change 0423219, or consider to introduce a system property to control the behavior.",
        "\u6211\u4f18\u5316\u4e86\u4ee3\u7801\uff0c\u82f1\u6587\u592a\u5dee\u76f4\u63a5\u4e2d\u6587:(\r\n\r\n[commit 844d7c7](https://github.com/takeseem-com/dubbo/commit/844d7c74aa35aac54971969f9cabedc96d244bff)\r\n```\r\npublic class LocaleHandle implements java.io.Serializable, HessianHandle {\r\n    private String value;\r\n\r\n    public LocaleHandle(String locale) {\r\n        this.value = locale;\r\n    }\r\n\r\n    private Object readResolve() {\r\n        if (value == null) {\r\n            return null;\r\n        }\r\n\r\n        if (value.length() == 0) {\r\n            return new Locale(\"\");\r\n        }\r\n\r\n        int extStart = value.indexOf(\"_#\");\r\n        if (extStart != -1) value = value.substring(0, extStart);\r\n\r\n        String language = value, country = \"\", variant = \"\";\r\n        int pos1 = value.indexOf('_');\r\n        if (pos1 != -1) {\r\n            language = value.substring(0, pos1++);\r\n\r\n            int pos2 = value.indexOf('_', pos1);\r\n            if (pos2 == -1) {\r\n                country = value.substring(pos1);\r\n            } else {\r\n                country = value.substring(pos1, pos2);\r\n                variant = value.substring(pos2 + 1);\r\n            }\r\n        }\r\n        return new Locale(language, country, variant);\r\n    }\r\n}\r\n```",
        "The code's readability needs to improve.",
        "@vihunk \u80fd\u5426\u8bf4\u7684\u66f4\u52a0\u5177\u4f53\uff0c\u6bd4\u5982\u76f4\u63a5\u5728[commit 376806a](https://github.com/takeseem-com/dubbo/commit/376806a935e320dd456d695f381fc811d2c33747)\u6dfb\u52a0\uff1acomments\u3002"
    ],
    "4291": [],
    "2185": [],
    "2844": [],
    "1885": [],
    "2364": [],
    "4924": [],
    "1898": [],
    "3674": [],
    "1431": [
        "# maybe yes\r\n\r\n![_20180307223736](https://user-images.githubusercontent.com/1704535/37098176-35648e64-2258-11e8-8392-f4694ac1d355.png)\r\n![_20180307223705](https://user-images.githubusercontent.com/1704535/37098183-365dd50a-2258-11e8-8baf-563f0fb3268b.png)\r\n",
        "it's a bug",
        "It's a bug. when NetUtils.getLocalHost() raise an exception, the invoke chain will go to an endless loop:\r\nNetUtils.getLocalHost() -> FailsafeLogger.appendContextMessage() -> NetUtils.getLocalHost()\r\n\r\n@kimmking there are some conflict in your PR #1435. Could you please update the PR."
    ],
    "2974": [],
    "5299": [],
    "3581": [],
    "2716": [],
    "505": [],
    "1447": [
        "Hi,\r\n\r\nPlease consider using English, Dubbo is a global community, and all the issues may be viewed and discussed by people all over the world.\r\n\r\nCan not work? Is there any detailed error recorded? I think LoggingHandler will also use the DubboLogger specified by Dubbo, and it will finally depend on the real logger implementation, e.g. log4j, slf4j, etc.  If the logger is not specified by dubbo, someone else will specify it, will different specifier make any difference to you.\r\n\r\nPlease send more details to @dev@dubbo.apache.org for in-depth discussion.\r\n\r\nThanks",
        "I think you can send a mail to dev@dubbo.apache.org about keeping default logger mechanism in netty for further discussion.  @teclxl \r\n",
        "Sorry, the message mail is classified by Outlook as other without push notification.",
        "Press wrong button to close.",
        "@teclxl That's true `com.alibaba.dubbo.remoting.transport.netty4.logging.NettyHelper.DubboLogger` will be used if dubbo boots ahead of your netty, but if you look into `com.alibaba.dubbo.common.logger.LoggerFactory`, you will find DubboLogger will eventually delegate to the real logging framework your app relies on:\r\n\r\n```java\r\n    // search common-used logging frameworks\r\n    static {\r\n        String logger = System.getProperty(\"dubbo.application.logger\");\r\n        if (\"slf4j\".equals(logger)) {\r\n            setLoggerAdapter(new Slf4jLoggerAdapter());\r\n        } else if (\"jcl\".equals(logger)) {\r\n            setLoggerAdapter(new JclLoggerAdapter());\r\n        } else if (\"log4j\".equals(logger)) {\r\n            setLoggerAdapter(new Log4jLoggerAdapter());\r\n        } else if (\"jdk\".equals(logger)) {\r\n            setLoggerAdapter(new JdkLoggerAdapter());\r\n        } else {\r\n            try {\r\n                setLoggerAdapter(new Log4jLoggerAdapter());\r\n            } catch (Throwable e1) {\r\n                try {\r\n                    setLoggerAdapter(new Slf4jLoggerAdapter());\r\n                } catch (Throwable e2) {\r\n                    try {\r\n                        setLoggerAdapter(new JclLoggerAdapter());\r\n                    } catch (Throwable e3) {\r\n                        setLoggerAdapter(new JdkLoggerAdapter());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nI am not sure if it satisfies what you demands. In order to help clarify this issue better, I push a same code at https://github.com/beiwei30/netty-dubbo-logging-test, pls. modify it further in order to help me understand your issue better.",
        "I think beiwei30 and me both have clarified this issue. It shouldn't be caused by dubbo's NettyHelper.",
        "@teclxl @chickenlj would you mind to take a look at https://github.com/beiwei30/incubator-dubbo/commit/030ebcea51603b955330059814fa95601f5dd1f6? I made an experimental change to solve this issue.",
        "@beiwei30 I think your change can solve this issue. I think the reason is that FailsafeLogger changed all msg, too.\r\nI saw you have already begun to slove this issue. I don't know if it is appropriate to close the issue now. Please close this issue, if you think it is appropriate.",
        "@beiwei30 Can this issue be closed?",
        "This issue has been fixed."
    ],
    "3855": [],
    "4098": [],
    "1464": [],
    "1466": [
        "This has been changed since 2.5.9, does this change has some side effects on your project?\n\n> On 14 Mar 2018, at 11:25 AM, Jason Song <notifications@github.com> wrote:\n> \n> The manifest info of the newly released 2.5.10 is incorrect, which causes com.alibaba.dubbo.common.Version#getVersion() returns the wrong version - 2.0.1.\n> \n> The following is the manifest of 2.5.10:\n> \n> Manifest-Version: 1.0\n> Implementation-Vendor: The Dubbo Project\n> Implementation-Title: Dubbo\n> Implementation-Version: 2.0.1\n> Implementation-Vendor-Id: com.alibaba\n> Built-By: ken.lj\n> Build-Jdk: 1.7.0_80\n> Specification-Vendor: The Dubbo Project\n> Specification-Title: Dubbo\n> Created-By: Apache Maven 3.1.1\n> Specification-Version: 2.0.0\n> Archiver-Version: Plexus Archiver\n> Here is the manifest of 2.5.8, which is correct:\n> \n> Manifest-Version: 1.0\n> Implementation-Vendor: Alibaba\n> Implementation-Title: Dubbo\n> Implementation-Version: 2.5.8\n> Implementation-Vendor-Id: com.alibaba\n> Built-By: ken.lj\n> Build-Jdk: 1.6.0_32\n> Specification-Vendor: Alibaba\n> Specification-Title: Dubbo\n> Created-By: Apache Maven 3.1.1\n> Specification-Version: 2.5.8\n> Archiver-Version: Plexus Archiver\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/alibaba/dubbo/issues/1466>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ARQlibiLp75nQ36yl5VeDV9uhIqZOwqVks5teI2OgaJpZM4Spx8r>.\n> \n\n",
        "We have integrated dubbo with our tracing system, which will include dubbo version in each rpc call event.\r\n\r\nThe version information is one of the key diagnosis information when some service meets something wrong.\r\n\r\nSo yes, this change does have some side effects. Not on my project but on many services using our sdk.",
        "Hi Jun,\r\n\r\nWe have integrated dubbo with our tracing system, which will include dubbo version in each rpc call event.\r\n\r\nThe version information is one of the key diagnosis information when some service meets something wrong.\r\n\r\nSo yes, this change does have some side effects. Not on my project but on many services using our sdk.\r\n\r\n\r\nThanks!\r\nJason\r\n\r\n\r\n\r\n\r\nOn 14/03/2018, 14:27, \"Jun Liu\" <liujun@apache.org> wrote:\r\n\r\n>This has been changed since 2.5.9, does this change has some side effects on your project?\r\n>\r\n>> On 14 Mar 2018, at 11:25 AM, Jason Song <notifications@github.com> wrote:\r\n>> \r\n>> The manifest info of the newly released 2.5.10 is incorrect, which causes com.alibaba.dubbo.common.Version#getVersion() returns the wrong version - 2.0.1.\r\n>> \r\n>> The following is the manifest of 2.5.10:\r\n>> \r\n>> Manifest-Version: 1.0\r\n>> Implementation-Vendor: The Dubbo Project\r\n>> Implementation-Title: Dubbo\r\n>> Implementation-Version: 2.0.1\r\n>> Implementation-Vendor-Id: com.alibaba\r\n>> Built-By: ken.lj\r\n>> Build-Jdk: 1.7.0_80\r\n>> Specification-Vendor: The Dubbo Project\r\n>> Specification-Title: Dubbo\r\n>> Created-By: Apache Maven 3.1.1\r\n>> Specification-Version: 2.0.0\r\n>> Archiver-Version: Plexus Archiver\r\n>> Here is the manifest of 2.5.8, which is correct:\r\n>> \r\n>> Manifest-Version: 1.0\r\n>> Implementation-Vendor: Alibaba\r\n>> Implementation-Title: Dubbo\r\n>> Implementation-Version: 2.5.8\r\n>> Implementation-Vendor-Id: com.alibaba\r\n>> Built-By: ken.lj\r\n>> Build-Jdk: 1.6.0_32\r\n>> Specification-Vendor: Alibaba\r\n>> Specification-Title: Dubbo\r\n>> Created-By: Apache Maven 3.1.1\r\n>> Specification-Version: 2.5.8\r\n>> Archiver-Version: Plexus Archiver\r\n>> \u2014\r\n>> You are receiving this because you are subscribed to this thread.\r\n>> Reply to this email directly, view it on GitHub <https://github.com/alibaba/dubbo/issues/1466>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ARQlibiLp75nQ36yl5VeDV9uhIqZOwqVks5teI2OgaJpZM4Spx8r>.\r\n>> \r\n>\r\n",
        "Jason,\n\nPls. file an issue on github.\n\nThanks,\n-Ian.\n\n\n> On 14 Mar 2018, at 3:52 PM, ken.lj <notifications@github.com> wrote:\n> \n> Hi Jun, \n> \n> We have integrated dubbo with our tracing system, which will include dubbo version in each rpc call event. \n> \n> The version information is one of the key diagnosis information when some service meets something wrong. \n> \n> So yes, this change does have some side effects. Not on my project but on many services using our sdk. \n> \n> \n> Thanks! \n> Jason \n> \n> \n> \n> \n> On 14/03/2018, 14:27, \"Jun Liu\" <liujun@apache.org <mailto:liujun@apache.org>> wrote: \n> \n> >This has been changed since 2.5.9, does this change has some side effects on your project? \n> > \n> >> On 14 Mar 2018, at 11:25 AM, Jason Song <notifications@github.com <mailto:notifications@github.com>> wrote: \n> >> \n> >> The manifest info of the newly released 2.5.10 is incorrect, which causes com.alibaba.dubbo.common.Version#getVersion() returns the wrong version - 2.0.1. \n> >> \n> >> The following is the manifest of 2.5.10: \n> >> \n> >> Manifest-Version: 1.0 \n> >> Implementation-Vendor: The Dubbo Project \n> >> Implementation-Title: Dubbo \n> >> Implementation-Version: 2.0.1 \n> >> Implementation-Vendor-Id: com.alibaba \n> >> Built-By: ken.lj \n> >> Build-Jdk: 1.7.0_80 \n> >> Specification-Vendor: The Dubbo Project \n> >> Specification-Title: Dubbo \n> >> Created-By: Apache Maven 3.1.1 \n> >> Specification-Version: 2.0.0 \n> >> Archiver-Version: Plexus Archiver \n> >> Here is the manifest of 2.5.8, which is correct: \n> >> \n> >> Manifest-Version: 1.0 \n> >> Implementation-Vendor: Alibaba \n> >> Implementation-Title: Dubbo \n> >> Implementation-Version: 2.5.8 \n> >> Implementation-Vendor-Id: com.alibaba \n> >> Built-By: ken.lj \n> >> Build-Jdk: 1.6.0_32 \n> >> Specification-Vendor: Alibaba \n> >> Specification-Title: Dubbo \n> >> Created-By: Apache Maven 3.1.1 \n> >> Specification-Version: 2.5.8 \n> >> Archiver-Version: Plexus Archiver \n> >> \u2014 \n> >> You are receiving this because you are subscribed to this thread. \n> >> Reply to this email directly, view it on GitHub <https://github.com/alibaba/dubbo/issues/1466 <https://github.com/alibaba/dubbo/issues/1466>>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ARQlibiLp75nQ36yl5VeDV9uhIqZOwqVks5teI2OgaJpZM4Spx8r <https://github.com/notifications/unsubscribe-auth/ARQlibiLp75nQ36yl5VeDV9uhIqZOwqVks5teI2OgaJpZM4Spx8r>>. \n> >> \n> > \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/alibaba/dubbo/issues/1466#issuecomment-372933200>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ARybXAD_T7khgeHmXg8deL_vCKoj0VSeks5teMxAgaJpZM4Spx8r>.\n> \n\n",
        "i think 2.5.10 is better",
        "Sorry for bothering you.\n\nI have checked the design purpose and implementation code before made this change. I believe the `version` here means the implementation version of the RPC Protocol,  also the Protocol-Specific-Version means the specification of RPC Protocol. If i understand the `version` in a right way, don\u2019t think it should be changed for every release(or at least don\u2019t have to be the same with the jar version).\n\nI know that there maybe some compatible problems if someone relies on this \u201cversion number the same with the jar version\u201d rule, but this change should not cause any critical problems on remote procedures. I tend to do this when i have to do a compatible upgrade for RPC protocols, check this PR(https://github.com/alibaba/dubbo/pull/1442#issuecomment-371776703 <https://github.com/alibaba/dubbo/pull/1442#issuecomment-371776703>, not completely finished yet). I think it would be better for us to keep a stable version number instead of change every release.\n\nOnly my opinion. And I believe when we follow the apache way by using the dev mailing list - dev@dubbo.apache.org, we can avoid any changes before they are fully discussed.\n\n> On 14 Mar 2018, at 3:51 PM, ss\u5b8b\u987a <song_s@Ctrip.com> wrote:\n> \n> Hi Jun,\n> \n> We have integrated dubbo with our tracing system, which will include dubbo version in each rpc call event.\n> \n> The version information is one of the key diagnosis information when some service meets something wrong.\n> \n> So yes, this change does have some side effects. Not on my project but on many services using our sdk.\n> \n> \n> Thanks!\n> Jason\n> \n> \n> \n> \n> On 14/03/2018, 14:27, \"Jun Liu\" <liujun@apache.org> wrote:\n> \n>> This has been changed since 2.5.9, does this change has some side effects on your project?\n>> \n>>> On 14 Mar 2018, at 11:25 AM, Jason Song <notifications@github.com> wrote:\n>>> \n>>> The manifest info of the newly released 2.5.10 is incorrect, which causes com.alibaba.dubbo.common.Version#getVersion() returns the wrong version - 2.0.1.\n>>> \n>>> The following is the manifest of 2.5.10:\n>>> \n>>> Manifest-Version: 1.0\n>>> Implementation-Vendor: The Dubbo Project\n>>> Implementation-Title: Dubbo\n>>> Implementation-Version: 2.0.1\n>>> Implementation-Vendor-Id: com.alibaba\n>>> Built-By: ken.lj\n>>> Build-Jdk: 1.7.0_80\n>>> Specification-Vendor: The Dubbo Project\n>>> Specification-Title: Dubbo\n>>> Created-By: Apache Maven 3.1.1\n>>> Specification-Version: 2.0.0\n>>> Archiver-Version: Plexus Archiver\n>>> Here is the manifest of 2.5.8, which is correct:\n>>> \n>>> Manifest-Version: 1.0\n>>> Implementation-Vendor: Alibaba\n>>> Implementation-Title: Dubbo\n>>> Implementation-Version: 2.5.8\n>>> Implementation-Vendor-Id: com.alibaba\n>>> Built-By: ken.lj\n>>> Build-Jdk: 1.6.0_32\n>>> Specification-Vendor: Alibaba\n>>> Specification-Title: Dubbo\n>>> Created-By: Apache Maven 3.1.1\n>>> Specification-Version: 2.5.8\n>>> Archiver-Version: Plexus Archiver\n>>> \u2014\n>>> You are receiving this because you are subscribed to this thread.\n>>> Reply to this email directly, view it on GitHub <https://github.com/alibaba/dubbo/issues/1466>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ARQlibiLp75nQ36yl5VeDV9uhIqZOwqVks5teI2OgaJpZM4Spx8r>.\n>>> \n>> \n\n",
        "Thanks for the clarification, I'm OK with this for now.\r\n\r\nHowever, I'm not sure whethere it's a good idea to bind `RPC protocol Version` to the `Specification-Version` in a Jar Manifest file. \r\n\r\nIn my opinion, they are 2 different concepts. For example, one jar file could provide several different rpc protocols, in that case, we won't be able to use the `Specification-Version` in one Jar Manifest file to represent multiple `RPC protocol Versions`.",
        "> However, I'm not sure whethere it's a good idea to bind RPC protocol Version to the Specification-Version in a Jar Manifest file.\n> \n> In my opinion, they are 2 different concepts. For example, one jar file could provide several different rpc protocols, in that case, we won't be able to use the Specification-Version in one Jar Manifest file to represent multiple RPC protocol Versions\n> \nAgree with you. Maybe we should figure out a new way for identifying RPC version, separate  RPC protocol Version from the Manifest specification/implementation version.\n\n> On 18 Mar 2018, at 4:00 PM, Jason Song <notifications@github.com> wrote:\n> \n> Thanks for the clarification, I'm OK with this for now.\n> \n> However, I'm not sure whethere it's a good idea to bind RPC protocol Version to the Specification-Version in a Jar Manifest file.\n> \n> In my opinion, they are 2 different concepts. For example, one jar file could provide several different rpc protocols, in that case, we won't be able to use the Specification-Version in one Jar Manifest file to represent multiple RPC protocol Versions.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub <https://github.com/alibaba/dubbo/issues/1466#issuecomment-373979652>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ARQlicYXRMmaZn87ejbW_mbd1uSCgixNks5tfhQmgaJpZM4Spx8r>.\n> \n\n",
        "https://github.com/apache/incubator-dubbo/blob/master/dubbo-common/src/main/java/com/alibaba/dubbo/common/Version.java   \r\n\r\nVersion.java read version from MANIFEST.MF or jar name.\r\n\r\nNow you debug in classes generated by IDE, no MANIFEST.MF or jar name found\r\n\r\nMust we support the IDEA debug environment?\r\n\r\nIf so\uff0cwe can refer this [Generate a Version.java file in Maven\r\n](https://stackoverflow.com/questions/2469922/generate-a-version-java-file-in-maven) ",
        "#1843 ",
        "dubbo\u534f\u8bae\u7248\u672c\u4ece`2.0.1`\u53d8\u66f4\u4e3a`2.0.2`\uff0c\u539f\u56e0\u539f\u6765\u662f\u8fd9\u4e2a\u5f15\u8d77\u3002",
        "We also meet the problem. This must mislead many developers. \r\n![image](https://user-images.githubusercontent.com/2881751/59838938-6a4d6780-9382-11e9-9577-101a7cd8c060.png)\r\n",
        "> We also meet the problem. This must mislead many developers.\r\n> ![image](https://user-images.githubusercontent.com/2881751/59838938-6a4d6780-9382-11e9-9577-101a7cd8c060.png)\r\nYou can refer the code  here  \r\nhttps://github.com/apache/dubbo/blame/2.6.x/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java#L372\r\nActurally, we use the jar with version 2.6.6."
    ],
    "2378": [],
    "1470": [
        "We will improve the URL interpreting logic, thanks a lot.",
        "Hi, thanks for reporting, could you please send a pull request to fix it?",
        "I'm not convinced that this bug report is valid.\r\nFrom RFC 3986\r\nauthority      = [ userinfo \"@\" ] host [ \":\" port ]\r\nuserinfo    = *( unreserved / pct-encoded / sub-delims / \":\" )\r\nunreserved     = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\r\nsub-delims     = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\r\n\r\nThe '@' character is not a valid character for the userinfo. If use of a '@' is required then it would need to be %nn encoded. Multiple '@' before those host looks to be invalid and should probably be rejected.\r\n",
        "I agree with Mark's opinion. `@` is used as seperator for userinfo. I think we could close this issue directly.",
        "We can refer what java.lang.URL does. \r\nI think change to `lastIndexOf()` brings no harm,  there's also no need to add error promotion. But we should remove the '@' use cases in UT."
    ],
    "4927": [],
    "4431": [],
    "2232": [],
    "1485": [
        "@chickenlj Could u describe it with more details ?",
        "There's a completely new implementation, which is located in [dubbo-spring-boot-project](https://github.com/apache/incubator-dubbo-spring-boot-project), to replace the deprecated [AnnotationBean](https://github.com/apache/incubator-dubbo/blob/master/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/AnnotationBean.java) since 2.5.7.\r\n\r\nWith the new implementation, you can use, \r\n```xml\r\n@DubboComponentScan(basePackages=\"org.apache.dubbo.demo\")\r\n```\r\nor\r\n```properties\r\n## application.properties\r\n# Base packages to scan Dubbo Components (e.g., @Service, @Reference)\r\ndubbo.scan.basePackages  = org.apache.dubbo.demo\r\n```\r\nto do the same thing."
    ],
    "1488": [
        "Not only for incubator-dubbo, we also need to update readme for all apache/incubator-dubbo* repos.",
        "Closed. Other repos should track with new issues separately."
    ],
    "3818": [],
    "377": [],
    "2640": [],
    "2363": [],
    "259": [],
    "1543": [],
    "3970": [],
    "3506": [],
    "4257": [],
    "5558": [],
    "3126": [],
    "1524": [
        "Hi, welcome!\r\n\r\nIt will be appreciated that you can provide a simple step to reproduce this issue.",
        "I debug the demo in the codebase, and get the following result:\r\n\r\n![image](https://user-images.githubusercontent.com/1152291/38082858-8be66090-337a-11e8-8223-1428811cdd19.png)\r\n\r\nThe red rectangle show \"dubbo=2.0.0\", is this the problem?",
        "@diecui1202 Yes, this is the problem.",
        "https://github.com/apache/incubator-dubbo/blob/master/dubbo-common/src/main/java/com/alibaba/dubbo/common/Version.java   \r\n\r\nVersion.java read version from MANIFEST.MF or jar name.\r\n\r\nNow you debug in classes generated by IDE, no MANIFEST.MF or jar name found\r\n\r\nMust we support the IDEA debug environment?\r\n\r\nIf so\uff0cwe can refer this [Generate a Version.java file in Maven\r\n](https://stackoverflow.com/questions/2469922/generate-a-version-java-file-in-maven) ",
        "1 maven Compile and install  \"dubbo-common\"\r\n2 Closing the \u201cdubbo-common\u201d project in IDE\r\nAnd then it's going to be good",
        "![image](https://user-images.githubusercontent.com/274324/38544532-459e4e68-3cda-11e8-9743-f820c30c5376.png)\r\nThis is the problem, dubbo-2.5.10.jar file from maven repository,  `Implementation-Version` in MANIFEST.MF is wrong, not IDEA debug environment.",
        "I found Implementation-verison and Specification-version in dubbo jar(version:2.6.1 ) is right now.\r\n\r\nAs @diecui1202 said, We will not change the value in register url. such as : registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.0.0&pid=9796&qos.port=22222&registry=multicast&timestamp=1523350418885 .\r\nThe value `dubbo=2.0.0` will be kept.",
        "@lovepoem\r\n\r\n+1\uff0c \"ide\" can read the version correctly is a good suggestion.",
        "Duplicate of https://github.com/apache/incubator-dubbo/issues/1466",
        "Close this one."
    ],
    "4837": [],
    "571": [],
    "2690": [],
    "1539": [
        "https://github.com/apache/incubator-dubbo/blob/d129f10229869bb8be3aff0787cd6303eb0e5ad0/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/support/wrapper/MockClusterInvoker.java#L85\r\n\r\nThere is a isWarnEnabled check but calling info method, anyone knows why?\r\nA mistake or A design\uff1f",
        "Hi, welcome!\r\n\r\nWould you please update the title and description using English? Dubbo is a global community and we would like the issue to be seen by people all over the world.\r\n\r\nQuestions like this are expected to be asked in the mailing list, you can [subscribe](https://github.com/apache/incubator-dubbo/issues/1393) and ask there.",
        "I think it's a mistake. I'll fix it today."
    ],
    "2933": [],
    "3375": [],
    "3404": [],
    "216": [],
    "5547": [],
    "4673": [],
    "1617": [],
    "2675": [],
    "2930": [],
    "3978": [],
    "3548": [],
    "2601": [],
    "5438": [],
    "1377": [],
    "820": [],
    "2279": [],
    "5051": [],
    "1389": [],
    "3307": [],
    "4886": [],
    "1374": [],
    "1597": [],
    "2274": [],
    "4064": [],
    "1604": [
        "What need to be updated?",
        "Fixed."
    ],
    "1610": [],
    "3007": [],
    "1000": [],
    "2210": [],
    "5352": [],
    "2966": [],
    "1619": [
        "Done."
    ],
    "2437": [],
    "1629": [
        "This issue has been fixed from 2.6.2 onwards.",
        "**http://dubbo.apache.org/schema/dubbo** should be better...."
    ],
    "3129": [],
    "4606": [],
    "1014": [],
    "1641": [
        "@mercyblitz Any progress with this ? "
    ],
    "4170": [],
    "5532": [],
    "1653": [],
    "3178": [],
    "1655": [
        "if you use dubbo 2.5.3 and cxf 2.7.7 , it's ok. "
    ],
    "1656": [
        "I think this need to be discussed in the mailing list before we make the decision.",
        "@ralf0131 Ok",
        "Good suggestion to keep master a SNAPSHOT version.\r\n\r\nHow about doing this when release of v2.6.2 finished.",
        "@chickenlj  Keeping 2.6.2-SNAPSHOT before 2.6.2 release, and Update 2.6.3-SNAPSHOT after 2.6.2",
        "Done."
    ],
    "1678": [],
    "3771": [],
    "1667": [
        "@htynkn I think you are right. The two failing ut\r\n\r\n```\r\nHessianProtocolTest.testHessianProtocol:48 \u00c2\u00bb HessianRuntime com.caucho.hessian...\r\nHessianProtocolTest.testHttpClient:83 \u00c2\u00bb HessianRuntime com.caucho.hessian.io.H...\r\n```\r\n\r\nboth call `com.alibaba.dubbo.rpc.protocol.hessian.HessianServiceImpl#sayHello(String name)`, which  has an override method `sayHello(String name, int times)`.\r\n\r\nIn the opposite, `com.alibaba.dubbo.rpc.protocol.hessian.HessianProtocolTest#testOverload` never fails because `hessian.overload.method` is set to true."
    ],
    "752": [],
    "3235": [],
    "5581": [],
    "4893": [],
    "1679": [
        "Lets's add them to [project](https://github.com/apache/incubator-dubbo/projects/1) when finished.",
        ">Lets's add them to project when finished.\r\n\r\nAdded",
        "Claim",
        "close via #1885"
    ],
    "1682": [],
    "2380": [],
    "3459": [],
    "4645": [],
    "1134": [],
    "1689": [],
    "4544": [],
    "1697": [
        "@lovepoem I would like to work on this card",
        "ok it's yours"
    ],
    "4802": [],
    "2327": [],
    "2268": [],
    "1713": [
        "Meanwhile, the English documentation[1] has only described the default value, and is missing all supported values, compared to the Chinese documentation[2].\r\n\r\n[1] http://dubbo.apache.org/books/dubbo-user-book-en/references/xml/dubbo-application.html\r\n[2] http://dubbo.apache.org/books/dubbo-user-book/references/xml/dubbo-application.html",
        "I found code in *LoggerFactory*\uff0cWhy use log4j as default logger when system property \"dubbo.application.logger\" not set.\r\n\r\n```java\r\nstatic {\r\n        String logger = System.getProperty(\"dubbo.application.logger\");\r\n        if (\"slf4j\".equals(logger)) {\r\n            setLoggerAdapter(new Slf4jLoggerAdapter());\r\n        } else if (\"jcl\".equals(logger)) {\r\n            setLoggerAdapter(new JclLoggerAdapter());\r\n        } else if (\"log4j\".equals(logger)) {\r\n            setLoggerAdapter(new Log4jLoggerAdapter());\r\n        } else if (\"jdk\".equals(logger)) {\r\n            setLoggerAdapter(new JdkLoggerAdapter());\r\n        } else {\r\n            try {\r\n                setLoggerAdapter(new Log4jLoggerAdapter());\r\n            } catch (Throwable e1) {\r\n                try {\r\n                    setLoggerAdapter(new Slf4jLoggerAdapter());\r\n                } catch (Throwable e2) {\r\n                    try {\r\n                        setLoggerAdapter(new JclLoggerAdapter());\r\n                    } catch (Throwable e3) {\r\n                        setLoggerAdapter(new JdkLoggerAdapter());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n```",
        ">I found code in LoggerFactory\uff0cWhy use log4j as default logger when system property \"dubbo.application.logger\" not set.\r\n\r\nI think now slf4j has the highest  priority, should be default logger",
        "This issue has been fixed from 2.7.0 onwards."
    ],
    "4728": [],
    "2728": [],
    "4024": [],
    "2170": [],
    "2928": [],
    "3062": [],
    "5154": [],
    "1727": [
        "link to #1667",
        "It is a duplicated issue."
    ],
    "1728": [
        "Would you please send a pull request?"
    ],
    "2076": [],
    "4428": [],
    "1731": [],
    "5105": [],
    "3532": [],
    "1222": [],
    "2176": [],
    "246": [],
    "3167": [],
    "891": [],
    "1756": [
        "The failed testcase is: \r\n\r\n```java\r\n    @Test\r\n    public void testSelect_multiInvokers() throws Exception {\r\n        testSelect_multiInvokers(RoundRobinLoadBalance.NAME);\r\n        testSelect_multiInvokers(LeastActiveLoadBalance.NAME);\r\n        testSelect_multiInvokers(RandomLoadBalance.NAME);\r\n    }\r\n\r\n    public void testSelect_multiInvokers(String lbname) throws Exception {\r\n        int min = 1000, max = 5000;\r\n        Double d = (Math.random() * (max - min + 1) + min);\r\n        int runs = d.intValue();\r\n        Assert.assertTrue(runs > min);\r\n        LoadBalance lb = ExtensionLoader.getExtensionLoader(LoadBalance.class).getExtension(lbname);\r\n        initlistsize5();\r\n        for (int i = 0; i < runs; i++) {\r\n            Invoker sinvoker = cluster.select(lb, invocation, invokers, selectedInvokers);\r\n            Assert.assertEquals(true, sinvoker.isAvailable());\r\n        }\r\n        for (int i = 0; i < runs; i++) {\r\n            selectedInvokers.clear();\r\n            selectedInvokers.add(invoker1);\r\n            Invoker sinvoker = cluster.select(lb, invocation, invokers, selectedInvokers);\r\n            Assert.assertEquals(true, sinvoker.isAvailable());\r\n        }\r\n        for (int i = 0; i < runs; i++) {\r\n            selectedInvokers.clear();\r\n            selectedInvokers.add(invoker2);\r\n            Invoker sinvoker = cluster.select(lb, invocation, invokers, selectedInvokers);\r\n            Assert.assertEquals(true, sinvoker.isAvailable());\r\n\r\n            Mockito.clearInvocations(invoker1, invoker2, invoker3, invoker4, invoker5);\r\n        }\r\n        for (int i = 0; i < runs; i++) {\r\n            selectedInvokers.clear();\r\n            selectedInvokers.add(invoker2);\r\n            selectedInvokers.add(invoker4);\r\n            Invoker sinvoker = cluster.select(lb, invocation, invokers, selectedInvokers);\r\n            Assert.assertEquals(true, sinvoker.isAvailable());\r\n        }\r\n        for (int i = 0; i < runs; i++) {\r\n            selectedInvokers.clear();\r\n            selectedInvokers.add(invoker1);\r\n            selectedInvokers.add(invoker3);\r\n            selectedInvokers.add(invoker5);\r\n            Invoker sinvoker = cluster.select(lb, invocation, invokers, selectedInvokers);\r\n            Assert.assertEquals(true, sinvoker.isAvailable());\r\n        }\r\n        for (int i = 0; i < runs; i++) {\r\n            selectedInvokers.clear();\r\n            selectedInvokers.add(invoker1);\r\n            selectedInvokers.add(invoker2);\r\n            selectedInvokers.add(invoker3);\r\n            Invoker sinvoker = cluster.select(lb, invocation, invokers, selectedInvokers);\r\n            Assert.assertEquals(true, sinvoker.isAvailable());\r\n        }\r\n    }\r\n```",
        "After analyzing the heap dump, \r\n\r\n![image](https://user-images.githubusercontent.com/1152291/39793199-09916528-5377-11e8-8652-52720843122c.png)\r\n\r\norg.mockito.internal.verification.DefaultRegisteredInvocations#invocations, this is a List, it holds all the invocations in the for loop, so we can clear it after one invoke:\r\n\r\n```java\r\nMockito.clearInvocations(invoker1, invoker2, invoker3, invoker4, invoker5);\r\n```",
        "or we can simply shrink `min` and `max` to workaround this issue.",
        "@beiwei30 I get a PR to solve this problem, please help to review it. Thanks."
    ],
    "4290": [],
    "4112": [],
    "4935": [],
    "298": [],
    "64": [],
    "1765": [
        "\u5f02\u5e38\u6808\uff1a\r\n```\r\njava.lang.reflect.InvocationTargetException: null\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]\r\n        at com.alibaba.dubbo.config.AbstractConfig.toString(AbstractConfig.java:473) [dubbo-2.5.8.jar:2.5.8]\r\n        at java.lang.String.valueOf(String.java:2994) [?:1.8.0_131]\r\n        at java.lang.StringBuilder.append(StringBuilder.java:131) [?:1.8.0_131]\r\n        at com.alibaba.dubbo.config.spring.beans.factory.annotation.AbstractAnnotationConfigBeanBuilder.build(AbstractAnnotationConfigBeanBuilder.java:61) [dubbo-2.5.8.jar:2.5.8]\r\n        at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceBean(ReferenceAnnotationBeanPostProcessor.java:318) [dubbo-2.5.8.jar:2.5.8]\r\n        at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.access$100(ReferenceAnnotationBeanPostProcessor.java:45) [dubbo-2.5.8.jar:2.5.8]\r\n        at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:296) [dubbo-2.5.8.jar:2.5.8]\r\n        at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:72) [dubbo-2.5.8.jar:2.5.8]\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) [spring-beans-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.12.RELEASE.jar:4.3.12.RELEASE]\r\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]\r\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]\r\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.8.RELEASE.jar:1.5.8.RELEASE]\r\n```",
        "\u6211\u731c\u5e94\u8be5\u662f\u6ca1\u6709\u914d\u7f6e<dubbo:annotation package=\u201c\u201d/>",
        "\u4e0d\u662f\u697c\u4e0a\u90a3\u4e2a\u95ee\u9898\uff0c\u6b63\u5e38\u6709\u5b9e\u4f8b\u662f\u6ca1\u6709\u95ee\u9898\u7684\r\n\u6700\u8fd1\u53d1\u73b0\uff0c\u5c31\u7b97\u662f\u7528 ReferenceConfig\u5982\u679c\u662f\u5728\u7b2c\u4e00\u6b21 get()\u7684\u65f6\u5019\u4e5f\u62a5\u9519\uff0c\u90a3\u4e48\u8fd8\u662f\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\r\n\u731c\u60f3\u5e94\u8be5\u662fdubbo\u7684\u673a\u5236\uff1f\u521d\u59cb\u5316\u7684\u65f6\u5019\u5fc5\u987b\u6709\u5b9e\u4f8b\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u62a5\u9519",
        "dubbo.consumer.check=false\r\nor the same\r\n<dubbo:reference check=\"false\"></dubbo:reference>",
        "\u540c\u6837\u9047\u5230\u8be5\u95ee\u9898\u3002\u8fd9\u662fdubbo\u7684\u542f\u52a8\u65f6\u68c0\u67e5\uff08```dubbo.consumer.check=true```\uff09\u5bfc\u81f4\u7684\uff1a\u521d\u59cb\u5316\u65f6\u63d0\u4f9b\u65b9\u63a5\u53e3\u68c0\u67e5\u4e0d\u901a\u8fc7\uff0c\u5219\u4e4b\u540e\u8be5\u5f15\u7528\u90fd\u662fnull\u3002\r\n\r\n\u6211\u611f\u89c9\u8fd9\u7b97\u662f\u4e2abug\u3002\u542f\u52a8\u65f6\u68c0\u67e5\u7684\u521d\u8877\u5e94\u8be5\u662f\uff1a\u68c0\u67e5\u4e0d\u901a\u8fc7\uff0c\u5e94\u7528\u542f\u52a8\u5931\u8d25\u3002",
        "fixed, refer: https://github.com/apache/incubator-dubbo/pull/1999",
        "\u8fd9\u4e2a\u95ee\u9898\u5728\u6700\u65b0\u76842.6.5\u7248\u672c\u4e0a\u4f9d\u7136\u5b58\u5728\uff0c\u67e5\u4e86\u4e0b\u4ee3\u7801\uff0c\u90fd\u8fd9\u4e48\u4e45\u4e86\uff0c#1999\u7adf\u7136\u6ca1\u6709\u88ab\u5408\u5e76\u5230\u65b0\u7248\u672c\u91cc\u3002\u867d\u7136\u5728\u6700\u65b0\u76842.6.x\u5206\u652f\u4e0a\u5df2\u7ecf\u770b\u5230\u4e86\u4fee\u6539\uff0c\u4f46\u662f\u4ec0\u4e48\u65f6\u5019\u53d1\u5e03\u4e0b\u4e00\u4e2a\u7248\u672c\u5462\uff1f"
    ],
    "1768": [
        "@diecui1202 thanks",
        "The use of 2.6.2 version verification found that the problem still exists.\r\nI don't think this problem is solved. The issue needs to be reopened.",
        "@diecui1202 ",
        "Please provider more exception information. I'll check it later. Thanks.",
        "@diecui1202 \r\nThe cause of the problem was found.Features have not been merged into the 2.6.2 release. thanks"
    ],
    "5569": [],
    "1770": [
        "I think we can add this annotation at both 2.7.x version.  \r\n@Repeatable is effcient after jdk1.8.  ",
        "@cvictory it both works Dubbo 2.6.x and 2.7.x, and may do later"
    ],
    "2573": [],
    "1772": [],
    "3402": [],
    "3327": [],
    "1778": [
        "We're considering move hessian-lite to dubbo eco-system in 2.7.x which is the next major version.",
        "This issue has been done."
    ],
    "2839": [],
    "3424": [],
    "2900": [],
    "3731": [],
    "2920": [],
    "4786": [],
    "3634": [],
    "2943": [],
    "1814": [
        "[Dubbo-1814][Baiji-4] configure \"provider.XML\" \r\nadd a tag named Wait <dubbo:registry>: set timeout time for graceful downtime configuration in the registry.\r\n<dubbo:registry address=\"multicast://224.5.6.7:1234\" wait=\"100000\"/>",
        "In dubbo.properties, `dubbo.service.shutdown.wait` is used for config wait timeout of graceful shutdown. So we can use `dubbo:parameter` of `dubbo:service` to pass a timeout value to `DubboProtocal` to overide the value of `dubbo.service.shutdown.wait`\r\n\r\nHowever a static field `wait` is added into `DubboProtocal`, I can't find a more elegance way to implement it.\r\n#2375 "
    ],
    "3962": [],
    "1816": [],
    "2874": [],
    "5494": [],
    "3908": [],
    "2922": [],
    "2286": [],
    "3887": [],
    "1830": [],
    "1936": [],
    "4531": [],
    "3119": [],
    "1873": [],
    "3723": [],
    "5067": [],
    "1845": [
        "Thanks for your report. We will fix it ASAP.",
        "Hi, would you mind send a pull request?",
        "Yeah, my fault, sorry. The community wants everyone to join into. You can contribute your modification through sending a PR.",
        "close this via https://github.com/apache/incubator-dubbo/pull/1851"
    ],
    "4471": [],
    "3323": [],
    "776": [],
    "3086": [],
    "1451": [],
    "1144": [],
    "3536": [],
    "4798": [],
    "2150": [],
    "1861": [
        "suggest that   move  the code  in abstract  or remove it  before loadbalancer.select  ",
        "hi, it's a good way to send a PR for any enhancement or bugfix. Thanks.",
        "@diecui1202  I really want to join our big family, but now I have a lot of work to do .I need to liberate myself first.   Recently, the expansion of flow control and fuses has been completed. There are a lot of things to do",
        "hi @smallh0a1n1d0s \r\nIs this PR of mine the result you want?\r\n\r\nhttps://github.com/apache/incubator-dubbo/pull/2156",
        "It's good  to  optimize  initialization of loadbalance .  To my confusion : l can't  extend the SPI for ( loadbalancer.select )  when there is  none or  only one  invoker \u3002 Actually ,   the  sortable routers can't  support very well , So that l have to accomplish a sortable composition.   If some logics like  alarm notification when none or only one invoker , we can also extend the SPI  ( loadbalancer.select )  to achieve it . This is not a very good example, but it also means better scalability.",
        "OK, I know, thx for your issue and looking forward to your pr to solve this problem.\r\n:)",
        "I think @smallh0a1n1d0s hopes AbstractLoadBalance shouldn't provide select() impl like this:\r\n\r\n```java\r\n    @Override\r\n    public <T> Invoker<T> select(List<Invoker<T>> invokers, URL url, Invocation invocation) {\r\n        if (CollectionUtils.isEmpty(invokers)) {\r\n            return null;\r\n        }\r\n        if (invokers.size() == 1) {\r\n            return invokers.get(0);\r\n        }\r\n        return doSelect(invokers, url, invocation);\r\n    }\r\n```",
        "> It's good to optimize initialization of loadbalance . To my confusion : l can't extend the SPI for ( loadbalancer.select ) when there is none or only one invoker \u3002 Actually , the sortable routers can't support very well , So that l have to accomplish a sortable composition. If some logics like alarm notification when none or only one invoker , we can also extend the SPI ( loadbalancer.select ) to achieve it . This is not a very good example, but it also means better scalability.\r\n\r\nrouter's route() happens before load balancer's select(). In this case, it is reasonable to return null when there's no invoker and directly return **the** invoker when there's only one.",
        "Hi @beiwei30 . see you again, I'm not sure it's still a problem . For tag 2.5.5 , there are three cases where loadbalance. select (@SPI) is not extensible. Why not move it completely in the abstract method AbstractLoadBalance.select?  \r\n\r\n```java\r\n        if (invokers == null || invokers.size() == 0)\r\n            return null;\r\n        if (invokers.size() == 1)\r\n            return invokers.get(0);\r\n        // \u5982\u679c\u53ea\u6709\u4e24\u4e2ainvoker\uff0c\u9000\u5316\u6210\u8f6e\u5faa\r\n        if (invokers.size() == 2 && selected != null && selected.size() > 0) {\r\n            return selected.get(0) == invokers.get(0) ? invokers.get(1) : invokers.get(0);\r\n        }\r\n        Invoker<T> invoker = loadbalance.select(invokers, getUrl(), invocation);\r\n\r\n```\r\n",
        "Hi, @smallh0a1n1d0s \r\nSeems like this logic has been moved into select in the latest version:\r\n\r\n![image](https://user-images.githubusercontent.com/12047600/52936788-3d6b5280-3398-11e9-96b3-895e1dd5b9a4.png)\r\n\r\nIs this still a problem for u? Or do you mean that we should bring this change to the 2.5.x branch?",
        "Hi,@carryxyh \r\n\r\nl meant  the  AbstractClusterInvoker (eg) not the AbstractLoadBalance.\r\nShall we go a little further\uff1fMove  prepositional logic into AbstractLoadBalance.select or remove completely ~\r\n\r\n```java\r\n       private Invoker<T> doSelect(LoadBalance loadbalance, Invocation invocation,\r\n                                List<Invoker<T>> invokers, List<Invoker<T>> selected) throws RpcException {\r\n\r\n        if (CollectionUtils.isEmpty(invokers)) {\r\n            return null;\r\n        }\r\n        if (invokers.size() == 1) {\r\n            return invokers.get(0);\r\n        }\r\n        Invoker<T> invoker = loadbalance.select(invokers, getUrl(), invocation);\r\n```",
        "for the tag 2.7.0  above ",
        "reasonable.\r\nI will try to optimize this problem. ",
        "@smallh0a1n1d0s \r\nPls check whether my pr can solve your problems, thx:\r\nhttps://github.com/apache/incubator-dubbo/pull/3501 ",
        "@smallh0a1n1d0s \r\nI think you should extend the routing implementation yourself (refer: https://github.com/apache/incubator-dubbo/issues/1861).\r\n\r\n```java\r\npublic class WarningRouter implements Router {\r\n\r\n    @Override\r\n    public <T> List<Invoker<T>> route(List<Invoker<T>> invokers, URL url, Invocation invocation)\r\n            throws RpcException {\r\n\r\n        if(invokers == null || invokers.isEmpty()){\r\n            // trigger warning, no provider available\r\n            return null;\r\n        }\r\n\r\n        int size = invokers.size();\r\n\r\n        if(size > 1){\r\n            // don't care about that. do nothing.\r\n            return invokers;\r\n        }\r\n\r\n        if(size == 1)  {\r\n            // trigger warning, only 1 provider available\r\n            return invokers;\r\n        }\r\n\r\n        return invokers;\r\n    }\r\n}\r\n```\r\n\r\n> it is reasonable to return null when there's no invoker and directly return the invoker when there's only one\r\n+1 \r\n",
        "I don't agree with this modification. https://github.com/apache/incubator-dubbo/pull/3501 @carryxyh ",
        "@zonghaishang In my opinion.Firstly, let's think about why Dubbo provides both @SPI route and load balance . Secondly, whether the load balance @SPI is limited, or in some cases can't be extended. Users may want perfect extensibility for a framework, rather than simply filtering an invoker here.",
        "I didn't say that the original writing was wrong, but there was a suggestion to make the SPI more extensible. If so, why not?",
        "@smallh0a1n1d0s\r\n\r\nIf the requirements are not met, please override the select method.\r\nFor example, inherit the `AbstractLoadBalance` class and override its `select` method.\r\n\r\nI simply read the code changes, very unattractive, and completely unnecessary.",
        "@zonghaishang  @carryxyh Reasonable. I agree that `loadbalance` is more focused on filtering `invoker` logic. Let the extension logic rise to the `route` layer, and different applications customize the optional extension logic, such as: canary, circuit breaker, notification (existing 0 or 1 invoker ). As far as i know , `route` can only be expanded into a whole logic. `route` may need to use composite design pattern or configurable like `filter`.",
        "Router supports priority, similar to filter call.\r\nso, temporarily close, and then reopen if necessary.",
        "@zonghaishang \r\nI simply read the code.\r\n@version 2.7.0\r\n ```java\r\n    private Optional<List<Router>> toRouters(List<URL> urls) {\r\n        if (urls == null || urls.isEmpty()) {\r\n            return Optional.empty();\r\n        }\r\n\r\n        List<Router> routers = new ArrayList<>();\r\n        for (URL url : urls) {\r\n            if (Constants.EMPTY_PROTOCOL.equals(url.getProtocol())) {\r\n                continue;\r\n            }\r\n            String routerType = url.getParameter(Constants.ROUTER_KEY);\r\n            if (routerType != null && routerType.length() > 0) {\r\n                url = url.setProtocol(routerType);\r\n            }\r\n            try {\r\n ######### Router looks like a single extension rather than The Filter Design Pattern############\r\n                Router router = routerFactory.getRouter(url);\r\n                if (!routers.contains(router)) {\r\n                    routers.add(router);\r\n                }\r\n            } catch (Throwable t) {\r\n                logger.error(\"convert router url to router error, url: \" + url, t);\r\n            }\r\n        }\r\n\r\n        return Optional.of(routers);\r\n    }\r\n```"
    ],
    "389": [],
    "2256": [],
    "2721": [],
    "4236": [],
    "1875": [
        "after discuss with @chickenlj, we believe the original logic can handle the scenario correctly without any modification.\r\n\r\nthe reason is if remote invocation gets timeout, future.get() will throw the exception too."
    ],
    "4611": [],
    "2965": [],
    "5612": [],
    "4729": [],
    "1879": [
        "Hello, would you please send a pull request?"
    ],
    "4826": [],
    "4488": [],
    "4688": [],
    "2788": [],
    "1558": [],
    "5587": [],
    "1903": [
        "> \u6211\u4eec\u81ea\u5b9a\u4e49\u4e86\u5e8f\u5217\u5316\u65b9\u5f0f\uff0cserialization.getContentTypeId() == 88\r\n> \u8d85\u51fa\u8ba1\u7b97\u7684\u6700\u5927\u503c\u3002\r\n> \u6309\u7167ExchangeCodec\u7684\u903b\u8f91\uff0c\u8fd9\u4e2a\u503c\u6700\u5927\u5141\u8bb832\u3002\r\n> 88\u5728\u670d\u52a1\u7aef\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u53d8\u621024\uff0c\u65e0\u6cd5\u83b7\u53d6\u5230\u5e8f\u5217\u5316\u65b9\u5f0f\u3002\r\n\r\nThe maximum id limit seems to be **31**. \r\nYour customized id `88` exceeds the limit and was decoded to `24`, what if there's  a serialization type for id 24? I think a reasonable value below 32 should be used to replace 88.\r\n\r\n> \u5f02\u5e38\u629b\u51fa\u540e\uff0c\u6ca1\u6709\u505a\u5904\u7406\uff0c\u5bfc\u81f4\u7684\u670d\u52a1\u7aefhang\u4f4f\u4e0d\u8fd4\u56de\uff0c\u9700\u8981\u7b49\u5f85\u8d85\u65f6\u62a5\u9519\u3002\u4ee3\u7801\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\r\n> com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(Channel, ChannelBuffer, int, byte[]) Line:124\r\n\r\nI think Dubbo should send the serialization error back to consumer, i will check this problem further.   "
    ],
    "2517": [],
    "1915": [],
    "1917": [
        "if there is an exception in the subscription to Redis, when the disconnection is successful, we can think that the Redis connection is broken, we need to re-initiate the subscription, and we need to get the latest data from Redis again. But in JedisPool, no connection monitoring mechanism is provided.\r\nThe first attribute is to achieve the effect of connection monitoring.\r\nIf my idea is correct, I will submit  the PR to fix it #3087"
    ],
    "1920": [],
    "5291": [],
    "5585": [],
    "778": [],
    "1927": [
        "Met the same problem, and I opened a [ticket](https://youtrack.jetbrains.com/issue/IDEA-190547) for IntelliJ IDEA two months ago, but it seems that no progress has been made until now.\r\n\r\nI'm not sure whether Dubbo or IntelliJ IDEA should be responsible for this issue.",
        "It still didn't solve the problem that IDE cannot parse the correct bean type?"
    ],
    "1929": [
        "Would you please send a pull request?"
    ],
    "3118": [],
    "352": [],
    "5031": [],
    "3916": [],
    "2815": [],
    "600": [],
    "4386": [],
    "3583": [],
    "3642": [],
    "4530": [],
    "5395": [],
    "5622": [],
    "5492": [],
    "5340": [],
    "2195": [],
    "1849": [],
    "5390": [],
    "1331": [],
    "763": [],
    "1978": [
        "@liulijun553 \r\nThis issue will be fixed sooner by @carryxyh."
    ],
    "3730": [],
    "2754": [],
    "2103": [],
    "4941": [],
    "539": [],
    "1998": [
        "Thanks for reporting, I am planning to look into it in the next one to two days.",
        "Hi, I think removing SpringContextLoaderListener in your web.xml will solve this issue.  But that will require user to change their code.\r\n\r\nThe DubboWebApplicationInitializer will be called before any Listener configured in web.xml.\r\n\r\nI am still thinking about a more elegant way to solve it.",
        "Is it possible for dubbo to implement it's own ServletContextListener? \r\n1. For web application, just a bit more configuration is required.\r\n2. For Java SE application (e.g. JavaFX, a java client technology), the current approach ( add shutdown hook in AbstractConfig) is appreciated.",
        "> Is it possible for dubbo to implement it's own ServletContextListener?\r\n\r\nYes. But that also requires user to change their configuration. Actually it is possible to configure the `DubboApplicationListener` in your applicationContext.xml or using annotations.\r\n\r\nThe primary concern here is how to enable that feature without user being aware of it. So I use the ServletContainerInitializer to implement that.\r\n\r\nIf you check the source code of `org.springframework.web.context.AbstractContextLoaderInitializer#registerContextLoaderListener`\r\n\r\n```java\r\n\tprotected void registerContextLoaderListener(ServletContext servletContext) {\r\n\t\tWebApplicationContext rootAppContext = createRootApplicationContext();\r\n\t\tif (rootAppContext != null) {\r\n\t\t\tContextLoaderListener listener = new ContextLoaderListener(rootAppContext);\r\n\t\t\tlistener.setContextInitializers(getRootApplicationContextInitializers());\r\n\t\t\tservletContext.addListener(listener);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlogger.debug(\"No ContextLoaderListener registered, as \" +\r\n\t\t\t\t\t\"createRootApplicationContext() did not return an application context\");\r\n\t\t}\r\n\t}\r\n```\r\n\r\nYou will find that it does the same thing for you. So you will not need to specify the `ContextLoaderListener` anymore.\r\n\r\nSo I am suggesting that you remove the `ContextLoaderListener` configuration in your web.xml. Does that make sense?\r\n\r\n",
        "Hi, I am closing this issue for now, please reopen it if you still encounter any issue.",
        "Hi, I think this issue will break the compatibility if user is going to upgrade to 2.6.3 or above, so I am going to re-open it.",
        "Hi, @ATAKing1023 Your problem will fixed in 2.6.3. Please help to check in 2.6.3-release branch, or when we are doing release vote in the mailing list.",
        "I will verify and comment later. Thank you."
    ],
    "5546": [],
    "1746": [],
    "3295": [],
    "2003": [
        "May be you need use the following values as the parameterTypes\r\n* long[].class.getName()\r\n* int[].class.getName()\r\n* char[].class.getName()\r\n\r\nYou can try it out.",
        "@diecui1202 thanks.\r\nTried it, but still reported the wrong.",
        "OK, let me check it out.",
        "@ningyu1 I got the same exception. \r\n\r\nSample is here: https://github.com/diecui1202/dubbo-samples/tree/samples-2.7.x/dubbo-samples-genericinvoke",
        "fixed, refer: https://github.com/apache/incubator-dubbo/commit/0882c83bb9c772966d57cbf161a60ec3633f1e1e",
        "@diecui1202 @zonghaishang thanks"
    ],
    "2365": [],
    "196": [],
    "2009": [
        "can you provide a demo that can reproduce this issue?",
        "in fact, it is a warning log message instead of a thrown exception, see below in org.apache.dubbo.config.spring.status.SpringStatusChecker#check:\r\n\r\n```java\r\n        } catch (Throwable t) {\r\n            logger.warn(t.getMessage(), t);\r\n        }\r\n```\r\n\r\nI think this is not a bug. Right now SpringStatusChecker checks config locations for all potential ConfigurableWebApplicationContext's implementations within which some impls may throw UnsupportedOperationException but I think it's fine since eventually SpringStatusChecker will **catch** all exceptions and logs a warning."
    ],
    "2013": [
        "+1 for a limited thread pool on consumer side.",
        "> So a choice for users to limit the max size of consumer thread is needed.\r\n\r\nAgree to left the choice to users, the best threadpool policies may vary in different scenarios. Would you mind to enable the consumer side threadpool configuration and send a PR?\r\n\r\nConsider another perspective, you may need to scale your cluster on the consumer side to make sure it can cope with the blazingly amount of QPS.",
        "when can this issue be implemented @chickenlj ",
        "I also hit this issue.Could I know when you can fix it please. @chickenlj @lovepoem ",
        "I want to solve the problem, and I want to add a tag 'threadpool', but what complex tag should I add the tag to?",
        "@ralf0131 Yes, I think adding a label \"threadpool\" can solve the problem. But maybe my English is a little poor, I don't understand your reply published this morning. I'm not sure you say yes or no to my plan.",
        "@chickenlj what is the bug fix pull request? is it merged into master, why is this issue closed now",
        "@Jaskey https://github.com/apache/incubator-dubbo/pull/2114, which is included in 2.6.3 release. Please check whether it will solve your problem."
    ],
    "2394": [],
    "2016": [
        "@ralf0131 Can you look up the issue? ",
        "@chickenlj  it happens in 1600 QPS again these days. ",
        "@haiyang1985  please upload a demo that can reproduce this issue? ",
        "Can you upload a demo to reproduce this issue?\n\n\n\nHaiyang <notifications@github.com> \u4e8e2018\u5e747\u670830\u65e5\u5468\u4e00 \u4e0a\u534810:47\u5199\u9053\uff1a\n\n> @chickenlj <https://github.com/chickenlj> it happens again, in 1600 QPS\n> these days.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/incubator-dubbo/issues/2016#issuecomment-408731870>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AD5mbEVyq3L43YFLDwIRvziedCRAKcNhks5uLnPagaJpZM4VANbg>\n> .\n>\n\n\n-- \n\nBest Regard!\ncvitory\n",
        "We encounter the same exception when dubbo shutdown. I does not understand why ignore the destroyed Invoker for Exporter unexported (`AbstractExporter.unexport()`). @beiwei30 "
    ],
    "2017": [],
    "949": [],
    "2426": [],
    "2027": [
        "Hi, this is caused by the new website transition. I am working on it.",
        "Please try again. It is fixed."
    ],
    "2029": [
        "It look goods to me :-)",
        "looks good!\r\nI'd like to add flow control into netty4 transport",
        "Fixed in the master branch with #2049, need to sync to 2.6.x."
    ],
    "2030": [
        "1.  Required attributes are specified with annotations?\r\n2. After optimization, it may still be very long, support compression?",
        "Remove some unused info and use compression maybe better.\r\nIntegrate other Config Center make operation and maintenance complex. It means that we should deploy a Config Center to use dubbo, not very suitable for me",
        "> 1. Required attributes are specified with annotations?\r\n\r\nI tend to choose the Dubbo framework itself to decide which attribute should be added to Registry, no need to be an option for users.\r\n\r\n> 2. After optimization, it may still be very long, support compression?\r\n\r\nCompression is a good idea. Maybe we can try simplification first, then see if we need compression.",
        "Config Center is not necessary in Dubbo, sometime I want to directly connect to the provider.",
        "As for many company use config center. I think it can be an option for user ",
        "> Integrate other Config Center make operation and maintenance complex. It means that we should deploy a Config Center to use dubbo, not very suitable for me\r\n\r\nWe need to keep compatibility with current Overrides policies. I listed 'Apollo', 'Archaius', 'Diamond' above, but Zookeeper can still be an option for configuration, Archaius itself also doesn't need too much effort to deploy. So it's not mandatory to deploy a Config Center.\r\n\r\nBesides, Config Center seems to be a common system for a Microservice architecture, users usually don't need to deploy it for Dubbo purpose, it is usually already there. \r\nConsider a cluster with a certain scale, it may have lots of rules that need to be stored and notified at runtime, a separate configuration center may be more scalable.\r\n\r\nWhat do you think now, @carryxyh ?",
        "@chickenlj \r\nThat makes sense. We can make it be configed to use or not and decide which Config Center to use.\r\nBut support so many Config Center is not a small amount of work, let's work hard together  \ud83d\udc4d ",
        "hi, I think chose URL as the carrier for Dubbo is ingenious, and the goal you descripted here is keep Registry clean. but I have some questions:\r\n1. Config Center dependency on Registry? or provider directly expose to Config Center?\r\n2. Config Center is duplicate with Admin? and will community should talk about service governments around with Config Center? at  least we can list some topic and best patterner.",
        "@carryxyh make a abstract composite for integration with different config centers, and then every contributor will be PR a specified one.",
        "@kimmking \r\nyeah\r\nmake it optional and configure.\r\n",
        "The Registry URL for dubbo may contanins many information. I simply divided into several categories\uff1a\r\n\r\n### 1.Service registration\r\n1. where is the service? so comes ip and port\r\n2. What services are provided? for dubbo use interface or path\r\n3. how contact with the service? we may use protocol, codec, exchanger, serialization...\r\n4. support multiple versions and isolated\uff0c can use group, version\r\n5. ...\r\n\r\n### 2.Service config\r\nWe can use configuration in provider side to give a suggestion behavior of the remote call.\r\n1. How long will timeout?\r\n2. Do we need retries? or jsut failfast?\r\n3. how to select one instance fron a list? loadbalance, weight...\r\n4. how about service downgrade? can use mock...\r\n5. Do we need cache invoke result?\r\n6. generic invoke?\r\n6. methods level configuration\r\n...\r\n\r\n### 3.Provider Config\r\n1. Thread pool\r\n2. Delay pubilsh\r\n3. Register or not\r\n4. Application info\r\n5. Parallel control(executes)\r\n6. Which transporter\r\n...\r\n\r\n### 4.Feature depends on registry\r\n1. Callback parameter\r\n2. Token Authorization\r\n3. Tag a service deprecated\r\n...\r\n\r\n### 5.Runtime\r\nmethods, timstamp, dubbo, pid, revision, side...\r\n\r\n\r\nI think we may retain the Service registration and Feature depends on registry in registry URL.\r\nSome common serivce config is also needed\uff0c may for compatibility.\r\n\r\nAnd finally, there will also be many keys",
        "## Parameters need to transfer to Registry\r\n\r\nThe URL for provider parameters comes from:\r\n\r\n1. ApplicationConfig\r\n2. ModuleConfig\r\n3. ProviderConfig\r\n4. ProtocolConfig\r\n5. ServiceConfig\r\n6. MethodConfig&ArgumentConfig\r\n7. others: side/dubbo/timestamp/pid/generic/methods/revision/default/token/notify/dynamic\r\n\r\n#### ApplicationConfig\r\n\r\napplication(name) need to transfer.\r\n\r\n#### ModuleConfig\r\n\r\nModule info may not need to transfer to registry.\r\n\r\n#### ProviderConfig\r\n\r\nProviderConfig \u2018 keys are subsets of keys in ServiceConfig and ProtocolConfig, And It's `default.` prefix should be removed.\r\n\r\n#### ProtocolConfig\r\n\r\n| key           | C use     | transfer            |\r\n| ------------- | --------- | ------------------- |\r\n| accepts       | N         | N                   |\r\n| accesslog     | N         | N                   |\r\n| buffer        | Y         | N                   |\r\n| charset       | N         | N                   |\r\n| client        | Y         | N                   |\r\n| codec         | Y         | Y                   |\r\n| contextpath   | N         | N                   |\r\n| default       | N         | N                   |\r\n| dispatcher    | N         | N                   |\r\n| dispather     | N         | N                   |\r\n| exchanger     | Y         | Y                   |\r\n| extension     | Y         | N                   |\r\n| heartbeat     | N         | N                   |\r\n| host          | Y         | Y                   |\r\n| id            | N         | N                   |\r\n| iothreads     | N         | N                   |\r\n| keep-alive    | N         | N                   |\r\n| name          | Y         | Y                   |\r\n| networker     | p2p?      | ?                   |\r\n| optimizer     | for kryo? | ?                   |\r\n| path          | N         | N                   |\r\n| payload       | Y         | N?                  |\r\n| port          | Y         | N not in parameters |\r\n| prompt        | N         | N                   |\r\n| queues        | N         | N                   |\r\n| register      | N         | N                   |\r\n| serialization | Y         | Y                   |\r\n| server        | N         | N                   |\r\n| status        | N         | N                   |\r\n| telnet        | N         | N                   |\r\n| threadpool    | N         | N                   |\r\n| threads       | N         | N                   |\r\n| transporter   | Y         | N                   |\r\n\r\n#### ServiceConfig\r\n\r\n| key                      | C use           | transfer    |\r\n| ------------------------ | --------------- | ----------- |\r\n| accesslog                | N               | N           |\r\n| actives                  | Y               | Y?          |\r\n| async                    | Y               | N           |\r\n| cache                    | Y               | N?          |\r\n| callbacks                | callback limits | N?          |\r\n| cluster                  | Y               | Y           |\r\n| connections              | Y               | Y           |\r\n| delay                    | N               | N           |\r\n| deprecated               | Y               | Y           |\r\n| document                 | N               | N           |\r\n| dynamic                  | N               | N           |\r\n| executes                 | N               | N           |\r\n| export                   | N               | N           |\r\n| filter\tservice.filter | N               | N           |\r\n| generic                  | Y               | N?          |\r\n| group                    | Y               | Y           |\r\n| id                       | N               | N           |\r\n| interface                | Y               | N, use path |\r\n| layer                    | N               | N           |\r\n| listener                 | N               | N           |\r\n| loadbalance              | Y               | Y           |\r\n| local                    | same with stub  | ??          |\r\n| merger                   | Y               | N           |\r\n| mock                     | Y               | Y           |\r\n| monitor                  | N               | N           |\r\n| onconnect                | N               | N           |\r\n| ondisconnect             | N               | N           |\r\n| owner                    | N               | N           |\r\n| path                     | Y               | Y           |\r\n| proxy                    | N               | N           |\r\n| ref                      | N               | N           |\r\n| register                 | Y               | Y           |\r\n| retries                  | Y               | N?          |\r\n| scope                    | N               | N           |\r\n| sent                     | Y               | N?          |\r\n| serialization            | Y               | Y           |\r\n| stub                     | Y               | N           |\r\n| timeout                  | Y               | Y           |\r\n| token                    | Y               | Y           |\r\n| validation               | Y               | N           |\r\n| version                  | Y               | Y           |\r\n| warmup                   | Y               | Y           |\r\n| weight                   | Y               | Y           |\r\n\r\n#### MethodConfig&ArgumentConfig\r\n\r\nMethod & Argument Config should not transfer to registry. Use configurators instead.\r\n\r\n**All transfer to Consumer side**\r\n\r\n#### others\r\n\r\nothers: side/dubbo/timestamp/pid/generic/methods/revision/default/notify/dynamic\r\n\r\nthe `dubbo`? &  `timestamp`  should be transfered.\r\n\r\n### TranferKeys\r\n\r\n- application\r\n- codec\r\n- exchanger\r\n- ~~host~~\r\n- ~~protocol~~\r\n- ~~payload~~\r\n- ~~port~~\r\n- serialization\r\n- cluster\r\n- connections\r\n- deprecated\r\n- group\r\n- loadbalance\r\n- mock\r\n- path\r\n- timeout\r\n- token\r\n- version\r\n- warmup\r\n- weight\r\n- ~~dubbo~~?\r\n- timestamp\r\n- ~~pid~~\r\n- Any method level configuration of the listed keys above\r\n\r\n## Parameters to search center\r\n\r\n* All parameters should be stored to search center\r\n* Further enrich method signature information: method name, param name, JSON string that fully reflects the parameter structure."
    ],
    "2958": [],
    "4922": [],
    "2454": [],
    "916": [],
    "2045": [
        "\u76ee\u524d\u60c5\u51b5\u4e0b\u597d\u50cf\u662f\u4e0d\u53ef\u4ee5\u7684\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u5728parameters\u8fd9\u4e2a\u53c2\u6570\u4e2d\u8bbe\u7f6e\u4e0b\u770b\u770b\u3002",
        "\u540c\u95ee \u5173\u6ce8\u4e0b ",
        "\u76ee\u524d\u597d\u50cf\u4e0d\u80fd\uff0c\u6211\u4e4b\u524d\u4e00\u76f4\u60f3\u5728provider\u65b9\u7684@Service\u6ce8\u89e3\uff0c\u914d\u7f6e\u65b9\u6cd5\u7ea7\u522b\u7684\u670d\u52a1provider\u914d\u7f6e\uff0c\u6ca1\u6709\u8fd9\u4e9b\u9009\u9879\uff0c\u53ea\u80fd\u7528xml\u914d\u7f6e\u3002\u4f46\u662f\u65e2\u7136\u7528\u4e86\u6ce8\u89e3\uff0c\u5c31\u80af\u5b9a\u4e0d\u518d\u5355\u72ec\u7528xml\u914d\u7f6e\u4e86\u3002",
        "\u770b\u770b\u8fd9\u4e2a https://my.oschina.net/roccn/blog/871032",
        "@cvictory please apply this change https://github.com/apache/incubator-dubbo/pull/2603 to the master branch.",
        "https://github.com/cvictory/incubator-dubbo/tree/issue_2045",
        "I still need to do some test . "
    ],
    "3491": [],
    "2786": [],
    "2046": [
        "\u5f02\u5e38\u6ca1\u6709\u4e0a\u629b\u5e94\u8be5\u662f\u8ba4\u4e3aqos\u529f\u80fd\u4e0d\u5f71\u54cddubbo\u4f7f\u7528\u5427\uff1f\u6bd5\u7adfQOS\u53ea\u662f\u4e2a\u589e\u5f3a\u578b\u7684plugin",
        "It`s bug",
        "Hi, \r\n\r\nCould you please send a pull request to fix it?\r\nI think it is a trivial change. I am going to a `good first issue` label.",
        "@yswwpp \r\n\r\nThis problem has been fixed by this pr:\r\nhttps://github.com/apache/incubator-dubbo/pull/2153\r\n\r\nIs there any other questions for this issue?  If not, we will close it soon. :)",
        "@ralf0131 Does #2153 need to merge back to 2.6.x?",
        "I think so. @diecui1202 I can do the back port"
    ],
    "5012": [],
    "2358": [],
    "1191": [],
    "4825": [],
    "1328": [],
    "832": [],
    "2063": [
        "Hi, this is fixed in the master branch, I think it should be back ported to 2.6.x branch. @beiwei30 ",
        "@nzomkxia  please commit a pr , then we will merge to master."
    ],
    "630": [],
    "1550": [],
    "757": [],
    "4740": [],
    "4166": [],
    "2072": [
        "This is fixed by #2076"
    ],
    "4186": [],
    "2470": [],
    "3864": [],
    "2391": [],
    "1704": [],
    "1646": [],
    "2088": [],
    "4392": [],
    "4756": [],
    "5251": [],
    "3968": [],
    "162": [],
    "1242": [],
    "4047": [],
    "4035": [],
    "5214": [],
    "4591": [],
    "2372": [],
    "3712": [],
    "707": [],
    "2129": [],
    "4411": [],
    "2714": [],
    "2134": [
        "you can submit a PR to exclude the older version.",
        "@LeoAugust19 \r\n\r\ndubbo-rpc-thrift doesn't introduce multiple versions for http-core. I think the only reason you see two versions is because you introduce `org.apache.http.impl.conn.Wire` in `org.apache.dubbo.rpc.protocol.thrift.io.RandomAccessByteArrayOutputStream`, which is only available in http-client 4.5.3.\r\n\r\n```sh\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building dubbo-rpc-thrift 2.7.0-SNAPSHOT\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-dependency-plugin:2.10:tree (default-cli) @ dubbo-rpc-thrift ---\r\n[INFO] org.apache.dubbo:dubbo-rpc-thrift:jar:2.7.0-SNAPSHOT\r\n[INFO] +- org.apache.dubbo:dubbo-rpc-api:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] |  +- org.apache.dubbo:dubbo-common:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] |  |  +- commons-logging:commons-logging:jar:1.2:compile\r\n[INFO] |  |  +- log4j:log4j:jar:1.2.16:compile\r\n[INFO] |  |  +- org.javassist:javassist:jar:3.20.0-GA:compile\r\n[INFO] |  |  +- com.alibaba:hessian-lite:jar:3.2.3:compile\r\n[INFO] |  |  +- com.alibaba:fastjson:jar:1.2.46:compile\r\n[INFO] |  |  +- com.esotericsoftware:kryo:jar:4.0.1:compile\r\n[INFO] |  |  |  +- com.esotericsoftware:reflectasm:jar:1.11.3:compile\r\n[INFO] |  |  |  |  \\- org.ow2.asm:asm:jar:5.0.4:compile\r\n[INFO] |  |  |  \\- com.esotericsoftware:minlog:jar:1.3.0:compile\r\n[INFO] |  |  +- de.javakaffee:kryo-serializers:jar:0.42:compile\r\n[INFO] |  |  \\- de.ruedigermoeller:fst:jar:2.48-jdk-6:compile\r\n[INFO] |  |     +- com.fasterxml.jackson.core:jackson-core:jar:2.8.6:compile\r\n[INFO] |  |     \\- com.cedarsoftware:java-util:jar:1.9.0:compile\r\n[INFO] |  |        \\- com.cedarsoftware:json-io:jar:2.5.1:compile\r\n[INFO] |  \\- org.apache.dubbo:dubbo-serialization-api:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] +- org.apache.dubbo:dubbo-rpc-dubbo:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] |  \\- org.apache.dubbo:dubbo-container-api:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] +- org.apache.dubbo:dubbo-remoting-api:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] +- org.apache.dubbo:dubbo-remoting-netty4:jar:2.7.0-SNAPSHOT:compile\r\n[INFO] |  \\- io.netty:netty-all:jar:4.1.25.Final:compile\r\n[INFO] +- org.apache.thrift:libthrift:jar:0.8.0:compile\r\n[INFO] |  +- org.slf4j:slf4j-api:jar:1.7.25:compile\r\n[INFO] |  +- commons-lang:commons-lang:jar:2.5:compile\r\n[INFO] |  +- org.apache.httpcomponents:httpclient:jar:4.5.3:compile\r\n[INFO] |  |  \\- commons-codec:commons-codec:jar:1.9:compile\r\n[INFO] |  \\- org.apache.httpcomponents:httpcore:jar:4.1.3:compile\r\n[INFO] +- org.springframework:spring-context:jar:4.3.16.RELEASE:compile\r\n[INFO] |  +- org.springframework:spring-aop:jar:4.3.16.RELEASE:compile\r\n[INFO] |  +- org.springframework:spring-beans:jar:4.3.16.RELEASE:compile\r\n[INFO] |  +- org.springframework:spring-core:jar:4.3.16.RELEASE:compile\r\n[INFO] |  \\- org.springframework:spring-expression:jar:4.3.16.RELEASE:compile\r\n[INFO] +- org.apache.dubbo:dubbo-config-spring:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  +- org.apache.dubbo:dubbo-config-api:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  |  +- org.apache.dubbo:dubbo-monitor-api:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  |  +- org.apache.dubbo:dubbo-filter-validation:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  |  |  \\- javax.validation:validation-api:jar:1.1.0.Final:test\r\n[INFO] |  |  \\- org.apache.dubbo:dubbo-filter-cache:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  |     \\- javax.cache:cache-api:jar:1.0.0:test\r\n[INFO] |  +- org.apache.dubbo:dubbo-bootstrap:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  +- org.springframework:spring-web:jar:4.3.16.RELEASE:test\r\n[INFO] |  \\- org.apache.dubbo:dubbo-rpc-injvm:jar:2.7.0-SNAPSHOT:test\r\n[INFO] +- org.apache.dubbo:dubbo-registry-multicast:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |  \\- org.apache.dubbo:dubbo-registry-api:jar:2.7.0-SNAPSHOT:test\r\n[INFO] |     \\- org.apache.dubbo:dubbo-cluster:jar:2.7.0-SNAPSHOT:test\r\n[INFO] +- junit:junit:jar:4.12:test\r\n[INFO] |  \\- org.hamcrest:hamcrest-core:jar:1.3:test\r\n[INFO] +- org.hamcrest:hamcrest-all:jar:1.3:test\r\n[INFO] +- org.mockito:mockito-core:jar:2.18.3:test\r\n[INFO] |  +- net.bytebuddy:byte-buddy:jar:1.8.5:test\r\n[INFO] |  +- net.bytebuddy:byte-buddy-agent:jar:1.8.5:test\r\n[INFO] |  \\- org.objenesis:objenesis:jar:2.6:compile\r\n[INFO] \\- cglib:cglib-nodep:jar:2.2:test\r\n```",
        "@beiwei30 \r\nHi, executing the command **mvn dependency:tree -Dverbose**, you can get the complete dependency tree of  dubbo-rpc-thrift.\r\n\r\n```\r\nPS C:\\Users\\Apple\\Downloads\\incubator-dubbo-dubbo-2.6.2\\dubbo-rpc\\dubbo-rpc-thrift> mvn dependency:tree -Dverbose\r\n\r\n[INFO] Scanning for projects...\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building dubbo-rpc-thrift 2.6.2\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO]\r\n[INFO] --- maven-dependency-plugin:2.10:tree (default-cli) @ dubbo-rpc-thrift ---\r\n[WARNING] Using Maven 2 dependency tree to get verbose output, which may be inconsistent with actual Maven 3 resolution\r\n[INFO] com.alibaba:dubbo-rpc-thrift:jar:2.6.2\r\n[INFO] +- com.alibaba:dubbo-rpc-api:jar:2.6.2:compile\r\n[INFO] |  +- com.alibaba:dubbo-common:jar:2.6.2:compile\r\n[INFO] |  |  +- commons-logging:commons-logging:jar:1.2:compile\r\n[INFO] |  |  +- log4j:log4j:jar:1.2.16:compile\r\n[INFO] |  |  +- org.javassist:javassist:jar:3.20.0-GA:compile\r\n[INFO] |  |  +- com.alibaba:hessian-lite:jar:2.6.2:compile\r\n[INFO] |  |  +- com.alibaba:fastjson:jar:1.2.46:compile\r\n[INFO] |  |  +- com.esotericsoftware:kryo:jar:4.0.1:compile\r\n[INFO] |  |  |  +- com.esotericsoftware:reflectasm:jar:1.11.3:compile\r\n[INFO] |  |  |  |  \\- org.ow2.asm:asm:jar:5.0.4:compile\r\n[INFO] |  |  |  +- com.esotericsoftware:minlog:jar:1.3.0:compile\r\n[INFO] |  |  |  \\- org.objenesis:objenesis:jar:2.2:compile\r\n[INFO] |  |  +- de.javakaffee:kryo-serializers:jar:0.42:compile\r\n[INFO] |  |  |  \\- (com.esotericsoftware:kryo:jar:4.0.1:compile - version managed from 4.0.0; omitted for duplicate)\r\n[INFO] |  |  \\- de.ruedigermoeller:fst:jar:2.48-jdk-6:compile\r\n[INFO] |  |     +- com.fasterxml.jackson.core:jackson-core:jar:2.8.6:compile\r\n[INFO] |  |     +- (org.javassist:javassist:jar:3.20.0-GA:compile - version managed from 3.19.0-GA; omitted for duplicate)\r\n[INFO] |  |     +- (org.objenesis:objenesis:jar:2.4:compile - omitted for conflict with 2.2)\r\n[INFO] |  |     \\- com.cedarsoftware:java-util:jar:1.9.0:compile\r\n[INFO] |  |        +- (commons-logging:commons-logging:jar:1.2:compile - version managed from 1.1.1; omitted for duplicate)\r\n[INFO] |  |        \\- com.cedarsoftware:json-io:jar:2.5.1:compile\r\n[INFO] |  \\- com.alibaba:dubbo-serialization-api:jar:2.6.2:compile\r\n[INFO] |     +- (com.alibaba:dubbo-common:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] |     +- (com.alibaba:hessian-lite:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] |     +- (com.alibaba:fastjson:jar:1.2.46:compile - omitted for duplicate)\r\n[INFO] |     +- (com.esotericsoftware:kryo:jar:4.0.1:compile - version managed from 4.0.0; omitted for duplicate)\r\n[INFO] |     +- (de.javakaffee:kryo-serializers:jar:0.42:compile - omitted for duplicate)\r\n[INFO] |     \\- (de.ruedigermoeller:fst:jar:2.48-jdk-6:compile - omitted for duplicate)\r\n[INFO] +- com.alibaba:dubbo-rpc-dubbo:jar:2.6.2:compile\r\n[INFO] |  +- (com.alibaba:dubbo-rpc-api:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] |  +- (com.alibaba:dubbo-remoting-api:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] |  \\- com.alibaba:dubbo-container-api:jar:2.6.2:compile\r\n[INFO] |     \\- (com.alibaba:dubbo-common:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] +- com.alibaba:dubbo-remoting-api:jar:2.6.2:compile\r\n[INFO] |  +- (com.alibaba:dubbo-common:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] |  \\- (com.alibaba:dubbo-serialization-api:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] +- com.alibaba:dubbo-remoting-netty:jar:2.6.2:compile\r\n[INFO] |  +- (com.alibaba:dubbo-remoting-api:jar:2.6.2:compile - omitted for duplicate)\r\n[INFO] |  \\- org.jboss.netty:netty:jar:3.2.5.Final:compile\r\n[INFO] +- org.apache.thrift:libthrift:jar:0.8.0:compile\r\n[INFO] |  +- org.slf4j:slf4j-api:jar:1.7.25:compile (version managed from 1.5.8)\r\n[INFO] |  +- commons-lang:commons-lang:jar:2.5:compile\r\n[INFO] |  +- org.apache.httpcomponents:httpclient:jar:4.5.3:compile (version managed from 4.1.2)\r\n[INFO] |  |  +- (org.apache.httpcomponents:httpcore:jar:4.4.6:compile - omitted for conflict with 4.1.3)\r\n[INFO] |  |  +- (commons-logging:commons-logging:jar:1.2:compile - version managed from 1.1.1; omitted for duplicate)\r\n[INFO] |  |  \\- commons-codec:commons-codec:jar:1.9:compile\r\n[INFO] |  \\- org.apache.httpcomponents:httpcore:jar:4.1.3:compile\r\n[INFO] +- org.springframework:spring-context:jar:4.3.16.RELEASE:compile\r\n[INFO] |  +- org.springframework:spring-aop:jar:4.3.16.RELEASE:compile\r\n[INFO] |  |  +- (org.springframework:spring-beans:jar:4.3.16.RELEASE:compile - omitted for duplicate)\r\n[INFO] |  |  \\- (org.springframework:spring-core:jar:4.3.16.RELEASE:compile - omitted for duplicate)\r\n[INFO] |  +- org.springframework:spring-beans:jar:4.3.16.RELEASE:compile\r\n[INFO] |  |  \\- (org.springframework:spring-core:jar:4.3.16.RELEASE:compile - omitted for duplicate)\r\n[INFO] |  +- org.springframework:spring-core:jar:4.3.16.RELEASE:compile\r\n[INFO] |  |  \\- (commons-logging:commons-logging:jar:1.2:compile - version managed from 1.1.1; omitted for duplicate)\r\n[INFO] |  \\- org.springframework:spring-expression:jar:4.3.16.RELEASE:compile\r\n[INFO] |     \\- (org.springframework:spring-core:jar:4.3.16.RELEASE:compile - omitted for duplicate)\r\n[INFO] +- com.alibaba:dubbo-config-spring:jar:2.6.2:test\r\n[INFO] |  +- com.alibaba:dubbo-config-api:jar:2.6.2:test\r\n[INFO] |  |  +- (com.alibaba:dubbo-registry-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |  |  +- com.alibaba:dubbo-monitor-api:jar:2.6.2:test\r\n[INFO] |  |  |  \\- (com.alibaba:dubbo-rpc-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |  |  +- (com.alibaba:dubbo-remoting-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |  |  +- (com.alibaba:dubbo-rpc-injvm:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |  |  +- com.alibaba:dubbo-filter-validation:jar:2.6.2:test\r\n[INFO] |  |  |  +- (com.alibaba:dubbo-rpc-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |  |  |  \\- javax.validation:validation-api:jar:1.1.0.Final:test\r\n[INFO] |  |  \\- com.alibaba:dubbo-filter-cache:jar:2.6.2:test\r\n[INFO] |  |     +- (com.alibaba:dubbo-rpc-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |  |     \\- javax.cache:cache-api:jar:1.0.0:test\r\n[INFO] |  +- (org.springframework:spring-beans:jar:4.3.16.RELEASE:test - omitted for duplicate)\r\n[INFO] |  +- (org.springframework:spring-context:jar:4.3.16.RELEASE:test - omitted for duplicate)\r\n[INFO] |  \\- com.alibaba:dubbo-rpc-injvm:jar:2.6.2:test\r\n[INFO] |     \\- (com.alibaba:dubbo-rpc-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] +- com.alibaba:dubbo-registry-multicast:jar:2.6.2:test\r\n[INFO] |  \\- com.alibaba:dubbo-registry-api:jar:2.6.2:test\r\n[INFO] |     +- com.alibaba:dubbo-cluster:jar:2.6.2:test\r\n[INFO] |     |  \\- (com.alibaba:dubbo-rpc-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] |     \\- (com.alibaba:dubbo-container-api:jar:2.6.2:test - omitted for duplicate)\r\n[INFO] +- junit:junit:jar:4.12:test\r\n[INFO] |  \\- org.hamcrest:hamcrest-core:jar:1.3:test\r\n[INFO] +- org.easymock:easymock:jar:3.4:test\r\n[INFO] |  \\- (org.objenesis:objenesis:jar:2.2:compile - scope updated from test; omitted for duplicate)\r\n[INFO] +- org.jmockit:jmockit:jar:1.33:test\r\n[INFO] \\- cglib:cglib-nodep:jar:2.2:test\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 3.668 s\r\n[INFO] Finished at: 2018-07-27T13:56:16+08:00\r\n[INFO] Final Memory: 18M/266M\r\n[INFO] ------------------------------------------------------------------------\r\n```"
    ],
    "2136": [
        "https://github.com/apache/incubator-dubbo/blob/69311abe3a84996ec6b1a38a381fd39f48bbfdf3/dubbo-serialization/dubbo-serialization-api/pom.xml#L41\r\n\r\nhttps://github.com/apache/incubator-dubbo/blob/69311abe3a84996ec6b1a38a381fd39f48bbfdf3/dubbo-serialization/dubbo-serialization-hessian2/pom.xml#L41"
    ],
    "2207": [],
    "3128": [],
    "1839": [],
    "4203": [],
    "3080": [],
    "101": [],
    "4738": [],
    "5467": [],
    "678": [],
    "5314": [],
    "2162": [
        "need to modify documentation, the checklist is #2305"
    ],
    "2739": [],
    "3410": [],
    "1958": [],
    "2169": [],
    "5169": [],
    "4076": [],
    "2177": [
        "The following branches are in need of UT:\r\n* org.apache.dubbo.registry.support.AbstractRegistry#register\r\n* org.apache.dubbo.registry.support.AbstractRegistry#unregister\r\n* org.apache.dubbo.registry.support.AbstractRegistry#subscribe\r\n* org.apache.dubbo.registry.support.AbstractRegistry#unsubscribe\r\n* org.apache.dubbo.registry.support.AbstractRegistry#recover\r\n* org.apache.dubbo.registry.support.AbstractRegistry#notify(java.util.List<org.apache.dubbo.common.URL>)\r\n* org.apache.dubbo.registry.support.AbstractRegistry#notify(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener, java.util.List<org.apache.dubbo.common.URL>)\r\n\r\nThe better the higher of the code coverage. But remember code coverage is not the only standard, A reasonable Test Case is also very important."
    ],
    "2178": [
        "hi, I haven't contributed before but would like to take this one on, is that okay? I am not actually sure of how to best address this one, but may get a better handle on things after taking a closer look at this portion of the code",
        "@jtanza, feel free to give it a try, pls. submit a pull request once you finish it :)",
        "Awesome, will do!",
        "I think this snippet works, only too much warn logs, is that right?\r\n```java\r\nif (!type.isArray() && !type.isEnum() && !ReflectionUtils.checkZeroArgConstructor(type)) {\r\n            if (logger.isWarnEnabled()) {\r\n                logger.warn(type + \" has no zero-arg constructor and this will affect the serialization performance\");\r\n            }\r\n            return new JavaSerializer();\r\n        }\r\n```",
        "It seems that Kryo 4.0.1 used by Dubbo already support Java 8 Date types. It's the CompatibleKryo short-circuited that logic by checking zero-arg constructor.",
        "Thank you all guys for working on this issue.\r\nMay I know what's the plan to release this fix??"
    ],
    "2180": [
        "+1 \r\nand I think vote should be via email\uff1f",
        "ok. I'll send a mail for this.",
        "+1\r\nAs far as I know, very few people use them.And this is a more edge feature",
        "I'll send a PR to deprecate these two methods.",
        "@diecui1202 \r\nHi, I found the ActivateComparator class use these two methods, and there is also a test case: \r\nhttps://github.com/apache/incubator-dubbo/blob/master/dubbo-common/src/test/java/org/apache/dubbo/common/extension/support/ActivateComparatorTest.java\r\nThe test case use before and after method in filter's @Activate\uff0c and the case is passed.\r\n\r\n#1926 is confusing, since I tried the before,after in our project, found it works. \r\n\r\nConsider a scene: a user's custorm filter which need to after or before a given filter, as the other filter's order are uncertain, the relative order maybe more more suitable."
    ],
    "5302": [],
    "3309": [],
    "2187": [],
    "4229": [],
    "2428": [],
    "759": [],
    "2188": [
        "Hi, \r\nWould u like to send a pr ?",
        "ok, pr is https://github.com/apache/incubator-dubbo/pull/2190",
        "\ud83d\udc4d \r\nThx for your contribution."
    ],
    "2330": [],
    "2901": [],
    "2194": [
        "@mercyblitz How about this issue ?",
        "@mercyblitz  How is it going?",
        "same as : https://github.com/apache/incubator-dubbo/issues/2522\r\n\r\nI will fix it this weekend.",
        "\u8fd9\u4e2a\u95ee\u9898\u662f\u4e0d\u662f 2.6.4\u5df2\u7ecf\u89e3\u51b3\u4e86\uff1f \u8c8c\u4f3c\u73b0\u5728 \u53ef\u4ee5\u4e86\u3002\r\n\u5728\u4e00\u4e2a\u65b9\u6cd5\u5185\u6d4b\u8bd5\u4e86\u4e00\u4e0b \u8fd8\u6ca1\u6709\u5177\u4f53\u591a\u4e2a\u5730\u65b9\u6d4b\u8bd5 \u4e0d\u6e05\u695a\u662f\u4e0d\u662fContext\u5728\u540c\u4e00\u4e2aContext\u7684\u539f\u56e0",
        "fixed, close it now. see : https://github.com/apache/incubator-dubbo/pull/2649"
    ],
    "4356": [],
    "3600": [],
    "1658": [],
    "2962": [],
    "2205": [],
    "1426": [],
    "2898": [],
    "2218": [
        "Hi, would you mind send a pull request?",
        "There is a guide here: https://github.com/apache/incubator-dubbo/wiki/New-contributor-guide",
        "Since the PR #2273 has been merged to master, we need a new PR that merge it to 2.6.x"
    ],
    "4976": [],
    "4038": [],
    "2227": [
        "I'll take it."
    ],
    "7": [],
    "2235": [
        "awesome.",
        "What is the rule exactly now after the refactor?"
    ],
    "5071": [],
    "1738": [],
    "2655": [],
    "2078": [],
    "2251": [],
    "749": [],
    "147": [],
    "4212": [],
    "1791": [],
    "5542": [],
    "2483": [],
    "2660": [],
    "3225": [],
    "324": [],
    "777": [],
    "2399": [],
    "3184": [],
    "2138": [],
    "1190": [],
    "3900": [],
    "2408": [],
    "2257": [],
    "3658": [],
    "2297": [
        "@mercyblitz How about this issue? Ready for merge?",
        "@mercyblitz  My be you should commit a pr for this issue."
    ],
    "2298": [
        "@mercyblitz How about this issue?",
        "I will commit a pr \uff0c and make this feature work.  ",
        "I will commit another pr on another branch.",
        "https://github.com/apache/incubator-dubbo/pull/2603\r\nThere are some conflicts that I need to merge.  @mercyblitz  should review this pr."
    ],
    "1396": [],
    "2301": [
        "@mercyblitz could u pls. send a PR?",
        "I write a demo to check this issue, but I found ReferenceBean has this parameter.\r\n\r\nmodify dubbo configuration file :   \r\n```\r\n    <dubbo:annotation/>\r\n    <context:component-scan base-package=\"com.alibaba.dubbo.demo.consumer\">\r\n        <context:include-filter type=\"annotation\" expression=\"com.alibaba.dubbo.config.annotation.Reference\"/>\r\n    </context:component-scan>\r\n```\r\n\r\nwrite service:  \r\n```\r\n@Service\r\npublic class ConsumerService {\r\n\r\n    @Reference(parameters = {\"k1\", \"v1\"})\r\n    private DemoService demoService;\r\n\r\n    public void testReference() {\r\n        System.out.println(demoService.sayHello(\"www.world\"));\r\n    }\r\n}\r\n```\r\n\r\nAnd debug the referenceConfig, I found the parameter contain this key as follow:  \r\n\r\nI write a demo to check this issue, but I found ReferenceBean has this parameter.\r\n\r\nmodify dubbo configuration file :   \r\n```\r\n    <dubbo:annotation/>\r\n    <context:component-scan base-package=\"com.alibaba.dubbo.demo.consumer\">\r\n        <context:include-filter type=\"annotation\" expression=\"com.alibaba.dubbo.config.annotation.Reference\"/>\r\n    </context:component-scan>\r\n```\r\n\r\nwrite service:  \r\n```\r\n@Service\r\npublic class ConsumerService {\r\n\r\n    @Reference(parameters = {\"k1\", \"v1\"})\r\n    private DemoService demoService;\r\n\r\n    public void testReference() {\r\n        System.out.println(demoService.sayHello(\"www.world\"));\r\n    }\r\n}\r\n```\r\n\r\nAnd debug the referenceConfig, I found the parameter contain this key as follow:  \r\n\r\n\r\n![2](https://user-images.githubusercontent.com/4089452/45801237-df9de600-bce5-11e8-8e20-02caea1705f6.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "@mercyblitz  please check this issue again.  \r\n\r\n&READY-TO-CLOSE&",
        "@mercyblitz  I saw you have a commit to this issue. Maybe you should commit a dependent pr and related to this issue."
    ],
    "4308": [],
    "76": [],
    "1647": [],
    "1733": [],
    "3497": [],
    "3064": [],
    "2315": [
        "@mercyblitz Could u pls. send a PR for this?",
        "#2454 "
    ],
    "784": [],
    "5358": [],
    "2909": [],
    "2323": [
        "Yes, we are facing this problem when using async:\r\n1. Consumer side, I found this problem and added a TODO in here when writing down this async \r\nfeature.\r\nhttps://github.com/apache/incubator-dubbo/blob/7d3a6ab0c19b8182d8a8b0d907d0ed758e65c2a7/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/filter/ConsumerContextFilter.java#L52  \r\nAt first, I want to use `RpcContext.removeContext()` to remove the RpcContext instance from the current thread, but users may need the RpcContext after a Dubbo remote call.\r\n\r\n2. Provider side, \r\nThis would not be a problem with `RpcContext.removeContext()` in ContextFilter\r\nhttps://github.com/apache/incubator-dubbo/blob/7d3a6ab0c19b8182d8a8b0d907d0ed758e65c2a7/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/filter/ContextFilter.java#L75\r\n\r\nAnyway, I tend to agree with you, as what I can think of now, a copy of RpcContext may be a good solution.\r\n"
    ],
    "1475": [],
    "2518": [],
    "2339": [
        "http://dubbo.apache.org/zh-cn/docs/user/references/xml/dubbo-parameter.html\r\n\r\nor\r\n\r\n                <xsd:attribute name=\"protocol\" type=\"xsd:string\">\r\n                    <xsd:annotation>\r\n                        <xsd:documentation><![CDATA[ The service protocol. ]]></xsd:documentation>\r\n                    </xsd:annotation>\r\n                </xsd:attribute>",
        "not valid any longer."
    ],
    "108": [],
    "3383": [],
    "4438": [],
    "2173": [],
    "2805": [],
    "2352": [],
    "2353": [
        "@hupuxiaojun Could u pls. provide a demo for us ?",
        "it seems that if use the Service annotation and set the value of interfaceName,it always throws the exception above,and if i add a property with the name of interfaceName to the ServiceBean,then the exception is gone.the purpose of the interfaceName is that if a Service implements two or more interfaces,the default interface to export is the first one, but we can use the interfaceName to specify a interface to export.But something seems wrong to that.",
        "Hi, guys, I read the codes and think we should modify it correctly.",
        "> Hi, guys, I read the codes and think we should modify it correctly.\r\n\r\nis there any problem with the pr above\uff1f"
    ],
    "3997": [],
    "1913": [],
    "2677": [],
    "3909": [],
    "4949": [],
    "4086": [],
    "5209": [],
    "4936": [],
    "4915": [],
    "1444": [],
    "5418": [],
    "2506": [],
    "2329": [],
    "2527": [],
    "4222": [],
    "2389": [],
    "3403": [],
    "2423": [
        "This is because there are multiple network interfaces in my macOS, both for ipv4 and ipv6:\r\n\r\n```\r\nen0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500\r\n        ether e0:ac:cb:7f:75:20\r\n        inet6 fe80::cfb:9054:967d:13be%en0 prefixlen 64 secured scopeid 0x5\r\n        inet 192.168.31.235 netmask 0xffffff00 broadcast 192.168.31.255\r\n        nd6 options=201<PERFORMNUD,DAD>\r\n        media: autoselect\r\n        status: active\r\nawdl0: flags=8943<UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1484\r\n        ether 62:32:71:46:6b:2e\r\n        inet6 fe80::6032:71ff:fe46:6b2e%awdl0 prefixlen 64 scopeid 0x7\r\n        nd6 options=201<PERFORMNUD,DAD>\r\n        media: autoselect\r\n        status: active\r\n```\r\n\r\n`awdl0` is ipv6 only and `en0` is both ipv4 and ipv6 available. However the JVM selects `awdl0` as the default Network Interface in `java.net.DefaultInterface#getDefault()` method.  So if we use a ipv4 address for multicasting, the error will occur.\r\n\r\nIf `-Djava.net.preferIPv4Stack=true` is specified, JVM will avoid choosing `awdl0` as default network interface. So everything will be all right.\r\n\r\n### Enhancement\r\n\r\nBasically we don't want to let user to specify that vm args manually, so I'd like to propose to automatically select network interface by the input multicast address.\r\n\r\nIf the multicast address is ipv4 address, automatically use ipv4 network address (by calling `java.net.MulticastSocket#setInterface()`), and vise versa.\r\n \r\n\r\n",
        "@ralf0131 When does this problem plan to fix?",
        "No ETA yet :( \r\nDo you have interest to take this?"
    ],
    "5539": [],
    "3565": [],
    "4267": [],
    "1866": [],
    "5582": [],
    "214": [],
    "1953": [],
    "2459": [
        "I'm happy to work on this, can you provide more information ? @chickenlj ",
        "Any progress? Do we need to fix it in 2.6.4?",
        "From Mark:\r\n\r\n> The sha512 hash is missing the '*' marker to indicate that this is a\r\nbinary file. Minor issue but one that was present on the previous\r\nrelease and should have been fixed by now.\r\n\r\nThis issue must be fixed in 2.6.5.",
        "I have sent an email to the dev mailing list for help.",
        "This issue can be solved when packaging:\r\n\r\n> https://linux.die.net/man/1/sha512sum\r\n> \r\n> You want \u2018-b",
        "I will modify the release.sh , and -b into shasum."
    ],
    "3009": [],
    "5171": [],
    "4343": [],
    "5550": [],
    "1042": [],
    "5523": [],
    "3906": [],
    "4880": [],
    "2983": [],
    "3793": [],
    "2489": [
        "When I add this configuration:\r\n```xml\r\n<dubbo:reference mock=\"force:org.apache.dubbo.demo.consumer.DemoServiceMock\" id=\"demoService\" check=\"false\" interface=\"org.apache.dubbo.demo.DemoService\"/>\r\n```\r\n\r\nthe following exception occurs:\r\n\r\n```java\r\nException in thread \"main\" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoService': Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:\r\nPropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'mock' threw exception; nested exception is java.lang.IllegalStateException: Invalid mock=\"force\\:org.apache.dubbo.demo.consumer.DemoServiceMock\" contains illegal character, only digit, letter, '-', '_' or '.' is legal.\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1570)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1280)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)\r\n\tat org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)\r\n\tat org.apache.dubbo.demo.consumer.Consumer.main(Consumer.java:31)\r\nCaused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:\r\nPropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'mock' threw exception; nested exception is java.lang.IllegalStateException: Invalid mock=\"force\\:org.apache.dubbo.demo.consumer.DemoServiceMock\" contains illegal character, only digit, letter, '-', '_' or '.' is legal.\r\n\tat org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:121)\r\n\tat org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:75)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1566)\r\n\t... 13 more\r\n```",
        "<dubbo:reference id=\"demoService\" check=\"false\" interface=\"org.apache.dubbo.demo.DemoService\" mock=\"true\">\r\n    <dubbo:method name=\"sayHello\" />\r\n</dubbo:reference>\r\n\r\nor\r\n\r\n<dubbo:reference id=\"demoService\" check=\"false\" interface=\"org.apache.dubbo.demo.DemoService\" mock=\"org.apache.dubbo.demo.DemoServiceMock\">\r\n    <dubbo:method name=\"sayHello\"  />\r\n</dubbo:reference>\r\n\r\n"
    ],
    "4069": [],
    "2491": [
        "package a sample in binary releases, right?\r\nexperience it in a \"java-jar\" way.",
        "Maybe start.dubbo.io would be better.",
        "> package a sample in binary releases, right?\r\n\r\n@ningyu1 Yes, that's what I mean. Some packaged jar and starting scripts can be a good choice. Facilitating user usage as much as possible. ",
        "@ningyu1 Do you want to give it a try? I am fully engaged in 2.7.0 these days, and would not available for this task until 2.7.0 is released.",
        "Currently, the binary release is packaged from the [dubbo-distribution](https://github.com/apache/incubator-dubbo/tree/master/dubbo-distribution) module, I think packaging dubbo-demo or adding an extra sample module would all be ok, u can also try to  figure out a better way.",
        "@chickenlj I am happy to try, but I have been busy recently and need to wait for some time.",
        "> @chickenlj I am happy to try, but I have been busy recently and need to wait for some time.\r\n\r\nThank you for the attention, you are welcome whenever you get some time. \r\n\r\nNow, I will move this one to the 'some day' milestone."
    ],
    "1353": [],
    "3075": [],
    "336": [],
    "1785": [],
    "2080": [],
    "3358": [],
    "2507": [
        "@jiangyunpeng could u pls. provide a demo to reproduce the problem? Also u can send a PR to fix it.",
        "good suggestion."
    ],
    "3969": [],
    "4020": [],
    "3149": [],
    "3395": [],
    "2275": [],
    "4803": [],
    "3579": [],
    "4066": [],
    "2522": [
        "@zonghaishang  how is it going?  If you fix it, please edit the milestone to 2.6.5.",
        "fixed, close it now. see : https://github.com/apache/incubator-dubbo/pull/2649"
    ],
    "4860": [],
    "2525": [
        "```\r\n3.\u5efa\u8bae\uff1a\u9488\u5bf9Spring\u5bb9\u5668\u4f18\u96c5\u505c\u673a\uff0c\u6211\u4eec\u5efa\u8bae\u5c06spring close\u4e8b\u4ef6\u76d1\u542c\u903b\u8f91\u79fb\u5230ApplicationConfig\u4e2d\uff0c\u5e76\u5728ApplicationConfig\u4e2d\u6ce8\u9500\u9ed8\u8ba4\u505c\u673ahook\uff0c\u6ce8\u518cspring \u505c\u673ahook\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\uff0c\u5982\u679c\u6846\u67b6\u662f\u57fa\u4e8espring\u5bb9\u5668\uff0c\u53ef\u4ee5\u4e00\u5200\u5207\u7684\u65b9\u5f0f\u5b9e\u73b0hook\u7684\u7ba1\u7406\uff0c\u5b8c\u5168\u4f9d\u8d56spirng\u7ba1\u7406\u505c\u673a\uff0c\u4f7f\u7528\u8005\u4ec5\u9700\u8981\u5173\u7cfbspring\u751f\u547d\u5468\u671f\u3002\r\n```\r\n\u5f3a\u7ed1\u5b9a\u4e86spring\u5bb9\u5668\uff0c\u4e0d\u53ef\u53d6\uff0c\u8fd9\u5728dubbo-config-api\u6a21\u5757\u4e0d\u4f9d\u8d56spring\u3002\r\n\r\n",
        "duplicate of https://github.com/apache/incubator-dubbo/issues/2435",
        "I have already commented\uff1a https://github.com/apache/incubator-dubbo/issues/2435",
        "Thanks for providing valuable suggestions. Do you have any actual scenario problems with 2.6.3?",
        "\u5982\u4e0a\u63cf\u8ff0\u573a\u666f\u4e00\uff08Springboot+innerTomcat\uff09\uff0cspring\u5148\u4e8e\u505c\u673a\u6d41\u7a0b\u7ed3\u675f\uff0c\u5f71\u54cd\u5728\u9014\u8c03\u7528\u3002",
        "--sry\uff0c\u6ca1\u7406\u89e3\u60a8\u7684\u7b54\u590d\uff0c\u770b\u6ce8\u91ca\u7684\u610f\u601d\u662f\u7b49\u5f85\u6ce8\u518c\u4e2d\u5fc3\u901a\u77e5\u5ef6\u8fdf\u3002\r\n\r\n\u5173\u4e8e\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u57282.6.1\u4e2dProtocolConfig\u7c7b\u4e2d\uff0cdestroyAll\u65b9\u6cd5\u5305\u542b\u5982\u4e0bsleep\u4ee3\u7801\u30022.6.2\u4e2d\u5c06\u6b64\u90e8\u5206sleep\u4ee3\u7801\u5220\u9664\u4e86\u3002\r\nsee HeaderExchangeServer#isRunning:\r\n\r\n    private boolean isRunning() {\r\n        Collection<Channel> channels = getChannels();\r\n        for (Channel channel : channels) {\r\n            if (DefaultFuture.hasFuture(channel)) {\r\n             /**\r\n             *  If there are any client connections,\r\n             *  our server should be running.\r\n             */\r\n             if (channel.isConnected()) {\r\n                return true;\r\n            }\r\n        }\r\nIf there is a client connection, it will automatically wait\uff0c there was a bug before, so will invoke sleep",
        "\u9488\u5bf9\u573a\u666f1\u80fd\u63d0\u4f9b\u590d\u73b0\u7684demo\u5417\uff1f\u4f60\u81ea\u5df1\u5efa\u7acb\u4e00\u4e2agithub\u5de5\u7a0b\uff0c\u628ademo\u4ee3\u7801\u653e\u8fdb\u53bb\u3002\r\n\u9488\u5bf9\u573a\u666f3\uff0c\u539f\u6765\u56e0\u4e3a\u5173\u95edserver\u7684\u65f6\u5019\u6ca1\u6709\u6b63\u786e\u5224\u65ad\u662f\u5426\u8fd8\u6709client\u6301\u6709\u8fde\u63a5\uff0c\u6240\u4ee5\u8981sleep, \u73b0\u5728\u8fd9\u4e2aBug\u89e3\u51b3\u4e86\uff0c\u4e0d\u9700\u8981\u4e3b\u52a8sleep\u4e86",
        "`\u5982\u4e0a\u63cf\u8ff0\u573a\u666f\u4e00\uff08Springboot+innerTomcat\uff09\uff0cspring\u5148\u4e8e\u505c\u673a\u6d41\u7a0b\u7ed3\u675f\uff0c\u5f71\u54cd\u5728\u9014\u8c03\u7528\u3002` \u8fd9\u4e2a\u573a\u666f\u4f7f\u7528\u54ea\u4e2a\u7248\u672c\u7684dubbo?",
        "I will look into this further in this week.",
        "@rangtao I made a quick prototype based on @ralf0131's work. Would you mind take a look and give me your feedback?\r\n\r\npls. check this: https://github.com/apache/incubator-dubbo/pull/2725",
        "enhanced with pull requests: https://github.com/apache/incubator-dubbo/pull/2734, https://github.com/apache/incubator-dubbo/pull/2725"
    ],
    "2532": [],
    "2533": [],
    "4589": [],
    "3109": [],
    "880": [],
    "2539": [
        "The log is already obvious.\r\nWhen the main thread initializes the spring container, it locks org.springframework.beans.factory.support.DefaultSingletonBeanRegistry#singletonObjects and then tries to lock a RegistryDirectory when executing MulticastRegistry.doSubscribe.\r\n\r\nThe DubboMulticastRegistryReceiver thread locks the RegistryDirectory when it is in MulticastRegistry.receive. When it gets the bean, it tries to lock org.springframework.beans.factory.support.DefaultSingletonBeanRegistry#singletonObjects and deadlock.\r\n\r\nSo it seems that we need to synchronize the execution of MulticastRegistry.this.receive in the MulticastRegistry constructor to eliminate deadlock.",
        "I know what happened,  maybe that multiple threads try to init  the spring context or do something before finishing the initialize is very dangerous and we should avoid it. \r\n\r\nI will commit a pr to fix this issue after my vocation.",
        "Very much agree. I think we should check other constructors to prevent similar problems.\r\nVery valuable issue. Thx!",
        "I will add a lock to forbid the multiple thread running at the same time.  I have write a demo to verify it, and it work well. "
    ],
    "2545": [
        "@356082462 \r\n\r\nDubbo does not resolve the registry address is a good suggestion\uff0cdelayed address (such as zookeeper) parsing, also pay attention to the limitations of dns cache, but jvm provides parameter control",
        "Would you like to submit pr to fix this problem?",
        "@zonghaishang \r\n\u597d\u7684\uff0c\u6211\u5df2\u7ecf\u63d0\u4ea4\u4e86\u4ee3\u7801\u3002\u5173\u4e8eJVM\u4f1a\u7f13\u5b58DNS\u89e3\u6790\u8bb0\u5f55\uff0c\u4f60\u662f\u60f3\u63d0\u9192\u6211\u4e00\u65b9\u9762\u8981\u4fdd\u62a4DNS\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u5e0c\u671b\u6ce8\u518c\u4e2d\u5fc3\u5ba2\u6237\u7aef\u8fdb\u5165\u91cd\u8bd5\u903b\u8f91\u65f6\u4e0d\u4f1a\u5bf9DNS\u670d\u52a1\u5668\u5f62\u6210\u5f3a\u4f9d\u8d56\u662f\u5417\uff1f"
    ],
    "3867": [],
    "4817": [],
    "4011": [],
    "4566": [],
    "2557": [
        "Hi, thanks for reporting, would you please send a pull request? ",
        "Hi, please refer to this: https://github.com/apache/incubator-dubbo/blob/master/CONTRIBUTING.md\r\n\r\nYou need to fork Dubbo first.",
        "I have pull a request,Thank You @ralf0131 "
    ],
    "2560": [],
    "2189": [],
    "3471": [],
    "5478": [],
    "141": [],
    "5428": [],
    "2570": [
        "@yangfuhai could u pls. provide a demo to reproduce this problem?",
        "> @yangfuhai could u pls. provide a demo to reproduce this problem?\r\n\r\n\u5df2\u7ecf\u5b9a\u4f4d\u5230\u95ee\u9898\uff0c\u539f\u56e0\u662f\u5f53\u6392\u9664spring\u4f9d\u8d56\u540e\uff0cdubbo 2.6.3 \u4e0b\u6709web-fragment.xml\u6587\u4ef6\uff0cweb-fragment.xml\u4f1a\u81ea\u52a8\u53bb\u52a0\u8f7d org.springframework.web.context.ContextLoaderListener \u5bfc\u81f4tomcat\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\u3002\r\n\r\n\u5efa\u8bae\u4fee\u6539\uff1a\r\n\r\nContextLoaderListener \u4fee\u6539\u4e3a DubboContextLoaderListener\uff0c\u5728 DubboContextLoaderListener \u91cc\u53bb\u67e5\u770bspring\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u5c31\u542f\u52a8spring \u7684 ContextLoaderListener\uff0c\u5426\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002",
        "@ralf0131 pls. check this problem. ",
        "If you don't run Dubbo with Tomcat + spring, then don't need this file. If file is intended to bed used for Dubbo + Tomcat + Spring.\r\n\r\nPlease remove the dependency to dubbo-config-spring",
        "I think he uses com.alibaba:dubbo, all in one jar, so can not exclude this dependency.",
        "> I think he uses com.alibaba:dubbo, all in one jar, so can not exclude this dependency.\r\n\r\n\u4e4b\u524d\u7684\u7248\u672c\u5e76\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u30022.6.3 \u624d\u6709\u7684\u3002",
        "@yangfuhai In this case, please don't depend on the all in one dependency. \r\n\r\n```xml\r\n    <groupId>com.alibaba</groupId>\r\n    <artifactId>dubbo</artifactId>\r\n    <version>2.6.3</version>\r\n```\r\n\r\nAnd try to depend on the specific module you wish to use, e.g. \r\n\r\n```xml\r\n    <groupId>com.alibaba</groupId>\r\n    <artifactId>dubbo-config-api</artifactId>\r\n    <version>2.6.3</version>\r\n```",
        "@diecui1202 \r\n\r\n> I think he uses com.alibaba:dubbo, all in one jar, so can not exclude this dependency.\r\n\r\nWhy we need to shade all the dependency into one jar?  This make it difficult to customize the dependency.\r\nI think this is something worth discussion.",
        "> @diecui1202\r\n> \r\n> > I think he uses com.alibaba:dubbo, all in one jar, so can not exclude this dependency.\r\n> \r\n> Why we need to shade all the dependency into one jar? This make it difficult to customize the dependency.\r\n> I think this is something worth discussion.\r\n\r\n\r\nprovide dubbo-all-without-spring module, just like dubbo-all, but dubbo-all-without-spring module did't rely spring-framework and have no dubbo-xxx-spring module\r\n\r\nI have forked dubbo repo and make [dubbo-all-without-spring](https://github.com/SKYhuangjing/incubator-dubbo/blob/master/dubbo-all-without-spring/pom.xml) module in mine repo.\r\n\r\nif offical don't provide, you can make it yourself.",
        "Hi, \r\n\r\nI would suggest to use maven profile to do this kind of customization.\r\n\r\nFor example, use the `default` profile for most of the dependencies, and use `spring` profile to include spring dependency.",
        "@yangfuhai, would you mind to try out the change I proposed in https://github.com/apache/incubator-dubbo/pull/2640",
        "Hi, \r\n\r\nAs another work-around, you may try to skip the annotation scan for dubbo-all.jar, so that this `org.springframework.web.context.ContextLoaderListener` won't be scaned or loaded. \r\n\r\nRead [this](https://wiki.apache.org/tomcat/HowTo/FasterStartUp) see `Configure your web application` and  `Exclude JARs from scanning` section for more details.",
        "provide dubbo-all can be easy integrate to our app, if no dubbo-all,  we have to  need rely multi dubbo-xxx, it's not easy job(That is very painful for rookie(just like me...))\r\nand may be dev don't wanna change the tomcat(or wildfly), in my humble opinion, this work is also more hardly.\r\nas a middleware, i hope dubbo can provide a more easy usage option in non-spring runtime.,just like dubbo-all module.  Of course this may be based on the fact that I am a rookie and I hope that the integrated dubbo upgrade can be easier.\r\n",
        "@SKYhuangjing @yangfuhai I believe I've finalized the solution I proposed in pull request \r\nhttps://github.com/apache/incubator-dubbo/pull/2640, would you mind to try it out?",
        "it's been fixed.",
        "i have upgraded dubbo version to 2.7.0, it's good solution for me"
    ],
    "2583": [
        "It is dependent on how do you defind a Service:\r\n- a backend service is a Service\r\n- or a proxy service is a Service",
        "Yes. \r\nThe flexibility of refer a service with different proxy is good(As above, one proxy in sync, another in async). But, it's terrible that we are not able to get the proxy we have created. \r\nFor that, we are able to cache the proxy by extend the ProxyFactory. But, the issue is that the wrapper executed without order, which result in different proxy returned. \r\nHopefully, the constrains be removed from the ApplicationModel cache.",
        "@haiyang1985 I drop a comment in https://github.com/apache/incubator-dubbo/pull/2582#pullrequestreview-162318577, pls. take a look.",
        "I don't think this is a problem or fixing bug. Here are two reasions.\r\n\r\n1) Pratically,  the same service is not recommended to create twice on the consumer side. If async and sync are both needed,  we can do it in mehod level to config, or a util method to switch between aync and sync.\r\n\r\n2) most importantly, please check the two classes (URL and StringUtils), there is a method named getServiceKey, which is used commonly in Dubbo. A service can be unique under three properties whare are serviceInterface, Group, Version. So,  there is no property Ref to constraint service's unique. \r\n\r\nFor example, a group rule or route rule is defined in ZK, which service is it applied to? I think, serviceKey (name, group, version) is the condition. So as the online/offline rules.",
        "@Jeff-Lv I agree with your opinion. For this particular problem, let's consider it as a limitation. User cannot configure two references with the different behavior. We will provide alternative way to user to change the behavior either via API, utilities or dynamic config.\r\n\r\nLet's roll back the relevant change in https://github.com/apache/incubator-dubbo/pull/2646."
    ],
    "5083": [],
    "5377": [],
    "2241": [],
    "4033": [],
    "2600": [],
    "2231": [],
    "1561": [],
    "549": [],
    "3085": [],
    "2725": [],
    "4752": [],
    "2619": [
        "This is really a bug, but it won't affect it at the moment, because I searched it, there is no place to use this method. please @zonghaishang  check again",
        "I have checked that, @46557783 Could you make a pull request to fix it?"
    ],
    "2371": [],
    "3959": [],
    "3313": [],
    "4776": [],
    "2199": [],
    "2375": [],
    "2552": [],
    "3246": [],
    "3035": [],
    "5231": [],
    "4624": [],
    "2109": [],
    "2637": [
        "Passed in my mac.",
        "> Passed in my mac.\r\n\r\n![d9350a3f-eafe-4282-8e1f-40400b65e566](https://user-images.githubusercontent.com/6000915/46793794-1614d100-cd79-11e8-86e5-83dc864b8e48.png)\r\n\r\n:) As the code, it will be loaded from os filesystem if filename is started with '/'. It will be invalid in windows.",
        "Oh, I remember there is a pr to fix this issue.\r\nLet me check.",
        "https://github.com/apache/incubator-dubbo/pull/2562\r\nPr is here. It didn't effect on the 2.6.x branch.\r\nI will remind him to submit this pr to the 2.6.x branch. Thank you for your issue.\r\n:)",
        "@carryxyh If it's not easy to reach him, I think you can do it directly.",
        "@carryxyh cool. ",
        "> @carryxyh If it's not easy to reach him, I think you can do it directly.\r\n\r\nNo problem. fix it soon.",
        "https://github.com/Jeff-Lv/incubator-dubbo/commit/7cd86a1d0cdc4101a3d1c66e92a1b321ed6ac739\r\n@carryxyh I think the change made by Jeff-Lv is more reasonable.",
        "@chickenlj \r\n\r\nI agree with this modification. Compared to our judgment of the environment information in the code, I agree more that the user should set different dubbo.properties.file according to the current environment. All we have to do is determine if the input dubbo.properties.file exists.\r\n\r\n@Jeff-Lv \r\nWe can reach a consensus on this issue, please submit a pr to optimize it.",
        "please check this PR https://github.com/apache/incubator-dubbo/pull/2607\n\n\u65f6\u65e0\u4e24\u4e36 <notifications@github.com> \u4e8e2018\u5e7410\u670811\u65e5\u5468\u56db \u4e0b\u53485:51\u5199\u9053\uff1a\n\n> Reopened #2637 <https://github.com/apache/incubator-dubbo/issues/2637>.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/incubator-dubbo/issues/2637#event-1897725914>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFuREw8uk6TKJHadML7vHDf2DoMQoyzZks5ujxSdgaJpZM4XXEdG>\n> .\n>\n",
        "Hi, @Jeff-Lv \r\nI have seen this pr.\r\nI think there is no problem with modifying the part of this issue. But there are other parts of your pr, I am not very familiar, and may need someone to review.\r\n\r\nMaybe he can help u : @chickenlj .\r\n:)",
        "Close via https://github.com/apache/incubator-dubbo/issues/2637"
    ],
    "5636": [],
    "4736": [],
    "3820": [],
    "3833": [],
    "1803": [],
    "3878": [],
    "4810": [],
    "4364": [],
    "1040": [],
    "2409": [],
    "3469": [],
    "5292": [],
    "4818": [],
    "5011": [],
    "356": [],
    "3566": [],
    "3889": [],
    "805": [],
    "2152": [],
    "4681": [],
    "790": [],
    "2265": [],
    "4208": [],
    "300": [],
    "3763": [],
    "3577": [],
    "2726": [],
    "225": [],
    "5028": [],
    "4195": [],
    "4326": [],
    "5241": [],
    "2748": [],
    "136": [],
    "5566": [],
    "578": [],
    "3396": [],
    "1394": [],
    "2393": [],
    "2259": [],
    "3280": [],
    "2762": [
        "I also have this problem , Dubbo 2.5.10",
        "looks like we should call 'stopServer' in 'destroy'."
    ],
    "2193": [],
    "4359": [],
    "5078": [],
    "1781": [],
    "4249": [],
    "2777": [
        "LGTM.\r\nI have check this point by using Provider in demo package.\r\nSeems like if we don't let it be daemon, the main thread will block all the way."
    ],
    "3859": [],
    "2779": [],
    "4100": [],
    "3915": [],
    "1020": [],
    "4983": [],
    "1865": [],
    "1976": [],
    "4135": [],
    "2798": [],
    "4781": [],
    "1192": [],
    "915": [],
    "5421": [],
    "3010": [],
    "4244": [],
    "3862": [],
    "2827": [
        "Could you please attach your sample code?",
        "\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0cdubbo version: 2.6.5\uff0cSpring version 4.3.18 @HuangDayu \u8bf7\u95ee\u4f60\u89e3\u51b3\u4e86\u5417",
        "@slankka \u6211\u4e5f\u8fd8\u6ca1\u89e3\u51b3\uff0c\u4e0d\u5f71\u54cd\u4f7f\u7528\u6240\u4ee5\u6211\u4e0d\u7406\u4e86\u3002\u6362\u6210 `2.6.2` \u7248\u672c\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002",
        "dubbo version 2.6.5 \u51fa\u73b0\u4e00\u6837\u7684\u95ee\u9898",
        "\u76ee\u524d\u770b\uff0c\u901a\u8fc7\u663e\u5f0f\u914d\u7f6e application logger \u4f1a\u6709\u8fd9\u6837\u7684\u8b66\u544a\u4fe1\u606f\uff0c\r\n\u6bd4\u5982: `applicationConfig.setLogger(\"slf4j\")`\r\n\r\n@mercyblitz @beiwei30 ",
        "Yes, this issue can be reproduced by `applicationConfig.setLogger(\"slf4j\")`, but I believe this is expected. The reason for the exception stack trace print out is the logging level is set to DEBUG, otherwise you will only see the WARNING message similiar like following:\r\n\r\n```\r\n[03/09/19 14:12:43:510 CST] main  INFO annotation.AnnotationConfigApplicationContext: Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13: startup date [Tue Sep 03 14:12:43 CST 2019]; root of context hierarchy\r\n[03/09/19 14:13:04:948 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:level, try to find an extension (bean) of type org.apache.dubbo.common.logger.Level, dubbo version: , current host: 192.168.64.1\r\n[03/09/19 14:13:04:963 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:level, type:org.apache.dubbo.common.logger.Level found, stop get bean., dubbo version: , current host: 192.168.64.1\r\n[03/09/19 14:13:06:493 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:file, try to find an extension (bean) of type java.io.File, dubbo version: , current host: 192.168.64.1\r\n[03/09/19 14:13:06:494 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:file, type:java.io.File found, stop get bean., dubbo version: , current host: 192.168.64.1\r\n[03/09/19 14:13:06:494 CST] main  INFO logger.LoggerFactory: using logger: org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter\r\n[03/09/19 14:13:07:864 CST] main  INFO annotation.AnnotationConfigApplicationContext: Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b6d844d: startup date [Tue Sep 03 14:12:43 CST 2019]; root of context hierarchy\r\n[03/09/19 14:13:07:878 CST] main  INFO support.AbstractRegistryFactory:  [DUBBO] Close all registries [], dubbo version: , current host: 192.168.64.1\r\n[03/09/19 14:13:07:880 CST] main  INFO annotation.AnnotationConfigApplicationContext: Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13: startup date [Tue Sep 03 14:12:43 CST 2019]; root of context hierarchy\r\n```",
        "> Yes, this issue can be reproduced by `applicationConfig.setLogger(\"slf4j\")`, but I believe this is expected. The reason for the exception stack trace print out is the logging level is set to DEBUG, otherwise you will only see the WARNING message similiar like following:\r\n> \r\n> ```\r\n> [03/09/19 14:12:43:510 CST] main  INFO annotation.AnnotationConfigApplicationContext: Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13: startup date [Tue Sep 03 14:12:43 CST 2019]; root of context hierarchy\r\n> [03/09/19 14:13:04:948 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:level, try to find an extension (bean) of type org.apache.dubbo.common.logger.Level, dubbo version: , current host: 192.168.64.1\r\n> [03/09/19 14:13:04:963 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:level, type:org.apache.dubbo.common.logger.Level found, stop get bean., dubbo version: , current host: 192.168.64.1\r\n> [03/09/19 14:13:06:493 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:file, try to find an extension (bean) of type java.io.File, dubbo version: , current host: 192.168.64.1\r\n> [03/09/19 14:13:06:494 CST] main  WARN extension.SpringExtensionFactory:  [DUBBO] No spring extension (bean) named:file, type:java.io.File found, stop get bean., dubbo version: , current host: 192.168.64.1\r\n> [03/09/19 14:13:06:494 CST] main  INFO logger.LoggerFactory: using logger: org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter\r\n> [03/09/19 14:13:07:864 CST] main  INFO annotation.AnnotationConfigApplicationContext: Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b6d844d: startup date [Tue Sep 03 14:12:43 CST 2019]; root of context hierarchy\r\n> [03/09/19 14:13:07:878 CST] main  INFO support.AbstractRegistryFactory:  [DUBBO] Close all registries [], dubbo version: , current host: 192.168.64.1\r\n> [03/09/19 14:13:07:880 CST] main  INFO annotation.AnnotationConfigApplicationContext: Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13: startup date [Tue Sep 03 14:12:43 CST 2019]; root of context hierarchy\r\n> ```\r\n\r\nthe root issue is the `WARN` level logger message, not the exception. \r\n\r\nIMO, the \"[DUBBO] No spring extension (bean) named\", which should be `DEBUG` or `INFO` level.\r\n\r\nand take the `Slf4jLoggerAdapter` as an example, maybe there is no need of auto injection for the `setLevel` and `setFile` method \r\n\r\n@beiwei30 "
    ],
    "3758": [],
    "3975": [],
    "5298": [],
    "2875": [],
    "5597": [],
    "2842": [
        "Hi, @beiwei30 \r\nI can't reproduce this on my mac.\r\nI use this command: mvn clean install -Prelease -Dmaven.test.skip=true (before this, I have remove the maven-gpg-plugin).\r\n\r\nAfter doing install, the spi file in dubbo-all/target/ looks nice...                                                                                                                                                                                       \r\n",
        "I also tried locally, but cannot reproduce.\r\n1. clone `dubbo-2.6.4` tag\r\n2. run `mvn clean install -DskipTests`",
        "I cannot reproduce it either on 2.6.5",
        "It's present in the binary and source jar files of 2.6.5."
    ],
    "2845": [],
    "582": [],
    "4677": [],
    "2850": [],
    "1974": [],
    "1891": [],
    "2384": [],
    "3156": [],
    "2864": [
        "Hi, would you please send a pull request?"
    ],
    "1997": [],
    "676": [],
    "3092": [],
    "164": [],
    "4614": [],
    "3948": [],
    "4387": [],
    "2881": [
        "\u611f\u89c9\u8fd9\u4e2a\u53ef\u4ee5\u53c2\u8003\uff1ahttps://www.2cto.com/kf/201805/743957.html",
        "@eoc2015 ,\u662f\u8981\u4fee\u6539dubbo\u7684\u4ee3\u7801\uff0c\u624d\u80fd\u89e3\u51b3\u5417\uff1f",
        "I find the how it is happen.  I will commit a pr to complete the kryo\nserialization.\nBut if you want to control the registry class , there will be some constraint\nto use.\n\nllx206 <notifications@github.com> \u4e8e2018\u5e7412\u67086\u65e5\u5468\u56db \u4e0b\u53485:31\u5199\u9053\uff1a\n\n> @eoc2015 <https://github.com/eoc2015> ,\u662f\u8981\u4fee\u6539dubbo\u7684\u4ee3\u7801\uff0c\u624d\u80fd\u89e3\u51b3\u5417\uff1f\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/incubator-dubbo/issues/2881#issuecomment-444807244>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AD5mbFEyKQDI5IDThVzoS9vXVpbHl20Dks5u2OPkgaJpZM4ZADEY>\n> .\n>\n\n\n-- \n\nBest Regard!\ncvitory\n",
        "kryo\u7c7b\u578b\u67e5\u627e\u4f1a\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u662f\u6839\u636e\u7c7b\u540d\uff0c\u4e00\u79cd\u662f\u6839\u636eid\u548c\u7c7b\u540d\u7684\u6620\u5c04\u3002\r\n\u5982\u679c\u53ea\u662f\u6839\u636e\u7c7b\u540d\u8fdb\u884c\u6620\u5c04\uff0c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6027\u80fd\u7a0d\u5dee\uff1b\u5982\u679c\u60f3\u6839\u636eid\u548c\u7c7b\u540d\u7684\u6620\u5c04\uff0c\u6027\u80fd\u8f83\u597d\uff0c\u4f46\u662fid\u548cclass\u7684\u5173\u7cfb\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5728server\u7aef\u548cclient\u7aef\u7684\u987a\u5e8f\u4e00\u81f4\u3002\r\n\u5728dubbo\u4e2d\uff0c\u5f53\u4f60\u4f7f\u7528optimizer=\"org.apache.dubbo.benchmark.serialize.SerializationOptimizerImpl\"\r\n\u914d\u7f6e\u65f6\uff0c\u5c31\u4f1a\u9488\u5bf9SerializationOptimizerImpl\u4e2d\u5b9a\u4e49\u7684class\u5f00\u542fid\u548cclass\u6620\u5c04\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\r\n*```*\r\n\r\npublic Collection<Class> getSerializableClasses() {\r\n    return Arrays.asList(User.class, Page.class, UserService.class);\r\n}\r\n\r\n*```*\r\n*\u6574\u4e2a\u8c03\u7528\u51fa\u73b0\u95ee\u9898\u7684\u539f\u7406\u53ef\u4ee5\u770b\u4e0b\u56fe\u3002*\r\n![image](https://user-images.githubusercontent.com/4089452/49933990-2297e000-ff08-11e8-8861-fd5931d1fc5a.png)\r\n\r\n\r\n\u6240\u4ee5\u89e3\u51b3\u529e\u6cd5\u6709\u4e24\u79cd\uff1a\r\n1.\u4e0d\u8981\u542f\u7528\u8fd9\u4e2a\u4f18\u5316\uff0c\u4e5f\u5c31\u662f\u4e0d\u8981\u8bbe\u7f6eoptimizer\u3002\r\n2.dubbo\u4ee3\u7801\u8fdb\u884c\u4e86\u521d\u6b65\u7684\u4f18\u5316\uff0c\u8fdb\u884c\u4e86\u521d\u6b65\u7684\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u8fd0\u884c\u3002\u539f\u7406\u5982\u56fe\uff1a\r\n\r\n![image](https://user-images.githubusercontent.com/4089452/49934014-33e0ec80-ff08-11e8-9f04-a9f8104946ce.png)\r\n\r\n\r\n\u539f\u6765\u7684\u63a5\u53e3\u91cc\u6709\u4e00\u4e2a\u5168\u5c40\u7684\u6620\u5c04\u8868\uff0c\u8fd9\u4e2a\u903b\u8f91\u4e0d\u6539\u53d8\u7684\u524d\u63d0\u4e0b\uff1b\u9488\u5bf9\u90e8\u5206\u63a5\u53e3\u7ef4\u5ea6\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2aid\u548cclass\u5217\u8868\u3002\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u529f\u80fd\uff0c\u4f46\u662f\u540c\u65f6\u5e26\u6765\u4e86\u65b0\u5efa\u548c\u7ef4\u62a4\u8fd9\u4e2a\u5217\u8868\u7684\u6210\u672c\u3002\r\n\r\nvictory <shenglicao2@gmail.com> \u4e8e2018\u5e7412\u670812\u65e5\u5468\u4e09 \u4e0b\u53483:04\u5199\u9053\uff1a\r\n\r\n> I find the how it is happen.  I will commit a pr to complete the kryo\r\n> serialization.\r\n> But if you want to control the registry class , there will be some constraint\r\n> to use.\r\n>\r\n> llx206 <notifications@github.com> \u4e8e2018\u5e7412\u67086\u65e5\u5468\u56db \u4e0b\u53485:31\u5199\u9053\uff1a\r\n>\r\n>> @eoc2015 <https://github.com/eoc2015> ,\u662f\u8981\u4fee\u6539dubbo\u7684\u4ee3\u7801\uff0c\u624d\u80fd\u89e3\u51b3\u5417\uff1f\r\n>>\r\n>> \u2014\r\n>> You are receiving this because you are subscribed to this thread.\r\n>> Reply to this email directly, view it on GitHub\r\n>> <https://github.com/apache/incubator-dubbo/issues/2881#issuecomment-444807244>,\r\n>> or mute the thread\r\n>> <https://github.com/notifications/unsubscribe-auth/AD5mbFEyKQDI5IDThVzoS9vXVpbHl20Dks5u2OPkgaJpZM4ZADEY>\r\n>> .\r\n>>\r\n>\r\n>\r\n> --\r\n>\r\n> Best Regard!\r\n> cvitory\r\n>\r\n\r\n\r\n-- \r\n\r\nBest Regard!\r\ncvitory\r\n",
        "@cvictory \uff0c\u975e\u5e38\u611f\u8c22\u4f60\u7ec6\u81f4\u7684\u56de\u590d\u3002\u8fd8\u6709\u4e24\u4e2a\u95ee\u9898\u518d\u8bf7\u6559\u4e0b\u3002\r\n1.\u4e0d\u8981\u542f\u7528\u8fd9\u4e2a\u4f18\u5316\uff0c\u4e5f\u5c31\u662f\u4e0d\u8981\u8bbe\u7f6eoptimizer\u3002\r\n\u95ee\uff1a\u4e0d\u542f\u7528\u4f18\u5316\uff0c\u76f8\u6bd4hessian2\u5e8f\u5217\u5316\u534f\u8bae\uff0ckryo\u7684\u6027\u80fd\u5982\u4f55\u5462\uff1f\r\n2.dubbo\u4ee3\u7801\u8fdb\u884c\u4e86\u521d\u6b65\u7684\u4f18\u5316\uff0c\u8fdb\u884c\u4e86\u521d\u6b65\u7684\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u8fd0\u884c\r\n\u95ee\uff1a\u9488\u5bf9\u90e8\u5206\u63a5\u53e3\u7ef4\u5ea6\u7684\u4f18\u5316\uff0c\u65b0\u5efa\u4e00\u4e2aID\u548cclass\u5217\u8868\uff0c\u8fd9\u4e2a\u4f1a\u5728dubbo\u7684\u54ea\u4e2a\u7248\u672c\u52a0\u5165\u5462\uff1f\r\n\r\n\u671f\u5f85\u4f60\u7684\u518d\u6b21\u56de\u590d\uff0c\u8c22\u8c22\uff01\uff01"
    ],
    "1357": [],
    "1876": [],
    "5529": [],
    "4604": [],
    "2891": [
        "\u540e\u7eed\u4f1a\u57fa\u4e8edubbo\u7684metrics api\u6765\u5b9e\u73b0dubbo monitor\u7684\u6570\u636e\u91c7\u96c6",
        "@yinghonghui \r\nyou can commit a pr to optimize the code."
    ],
    "2438": [],
    "3185": [],
    "2897": [],
    "4929": [],
    "947": [],
    "446": [],
    "3524": [],
    "5409": [],
    "780": [],
    "755": [],
    "2608": [],
    "1424": [],
    "2935": [
        "I am claiming this issue.",
        "I have raised the PR for the dubbo-rpc-api filter package java class documentation \r\nPR link for the same is \r\nhttps://github.com/apache/incubator-dubbo/pull/2967",
        "Code merged to master."
    ],
    "4327": [],
    "3898": [],
    "576": [],
    "899": [],
    "5324": [],
    "2376": [],
    "4178": [],
    "2303": [],
    "2945": [],
    "260": [],
    "202": [],
    "4953": [],
    "3346": [],
    "5514": [],
    "2122": [],
    "4297": [],
    "589": [],
    "2973": [
        "I just fix it ,and make a pull request number #2974 ",
        "I take a pull request for it again which is #2979",
        "just fixed by  #2979 , already merge to master ,so close this issues"
    ],
    "2977": [
        "This issue has been resolved, I will close it now, thank you for your attention."
    ],
    "5138": [],
    "2981": [
        "Hi, can u provide a demo to reproduce this problem?\r\nI'd like take a look.",
        "@carryxyh  \u4e0d\u597d\u610f\u601d\uff0c\u4e4b\u540e\u4e0a\u4f20demo\uff0c\u76ee\u524d\u6211\u67e5\u5230\u7684\u539f\u56e0\u5982\u4e0b\uff1a\r\nAbstractInvoker.java\r\n![image](https://user-images.githubusercontent.com/5336857/50152042-86058180-02fd-11e9-8f6c-6cbcc70b5d4d.png)\r\n\r\n",
        "Seems like this problem will occur whether use thrift protocol or dubbo protocol right ?\r\nPls send a simple demo that can reproduce this problem.",
        "> Seems like this problem will occur whether use thrift protocol or dubbo protocol right ?\r\n> Pls send a simple demo that can reproduce this problem.\r\n\r\n@carryxyh  \u63d0\u4f9b\u4e86\u91cd\u73b0demo\uff1a\r\nhttps://github.com/cadeeper/dubbo-thrift-bug-demo/tree/master",
        "@cadeeper \r\nOk, I'd like have a look.",
        "Hello, I don't know about the thrift protocol. I can try to reproduce this problem myself.\r\n\r\n1. Consumer invoke interface1\r\n2. in interface1's impl, generic invoke interface2\r\n\r\nIn this case, the generic invoke will actually call a wrong interface (interface1). Is this what it looks like?",
        "There is a problem.\r\nThx for your issue, I will fix it soon.",
        "> There is a problem.\r\n> Thx for your issue, I will fix it soon.\r\n\u597d\u7684",
        "we have met the same problem, "
    ],
    "4292": [],
    "2984": [
        "I'm interested in working on this issue",
        "Hi, @danielamorais \r\nWelcome! Looking forward to your pull request.\r\nBy the way, I recommend you to participate in our mailing list and share your thoughts\r\n\r\nhttp://dubbo.apache.org/en-us/docs/developers/contributor-guide/mailing-list-subscription-guide_dev.html",
        "@danielamorais Cool, please, send one PR and link to this issue once done."
    ],
    "2987": [],
    "4921": [],
    "2988": [
        "Oh, I see, haha\r\n\r\nSo shall we merge the same interface or separate them?",
        "Personally think we should separate them.\r\n:)",
        "Can we differentiate multiple implementations of interfaces when 'ls' commands, add group information, and facilitate the next invoke operation?\r\njust like this:\r\n```\r\ndubbo>ls\r\norg.apache.dubbo.demo.DemoService$demoA\r\norg.apache.dubbo.demo.DemoService$demoB\r\ndubbo>invoke org.apache.dubbo.demo.DemoService$demoB.sayHello(\"china\")\r\n\"Hello china, response from provider: DemoBService\"\r\n```",
        "@wangweiufofly \r\nSeems like we haven't supported this.\r\n",
        "> @wangchangbing\r\n> Seems like we haven't supported this.\r\n\r\nOr we just implement a Round Robin like selecting by merging them together?\r\nIt looks more simple",
        "Emm..  Not a good way.\r\nRound Robin is to load balancing. In dubbo invoke, we need precise control. This is two cases.",
        "> Emm.. Not a good way.\r\n> Round Robin is to load balancing. In dubbo invoke, we need precise control. This is two cases.\r\n\r\nSo..... We will expose them as the implemented class name? Or just these multiple implemented interfaces?",
        "@jasonjoo2010 \r\nMaybe we can discuss on mailing list. Would u pls reply the mail for some ideas?",
        " A questions ::\r\n- As adding group here, indicate multiple implementation support of a service which is exposed. How the consumer will discover which one to use? \r\n    1. Is consumer developer will know about groups at the time of  writing it? Or some one else by understanding implementation details and available groups can choose which one to use?\r\n\r\nFew improvements which I am guessing can be possible (Correct me If I am wrong here)\r\n   1. Is there will be a default group support for any exposed service (e.g. in sprint boot there could be multiple implementation of a data source but there will be a default **primary** bean always.\r\n  2.  If a implementation of service (e.g. group B) is unavailable should we provide support that consumer call can be still served by default group (or configured group D ), this can be use full when a particular group is in upgradation phase or out of service).\r\n\r\nAny correction of my thought will be appreciated.Thanks in advanced.\r\n\r\n",
        "> A questions ::\r\n> \r\n> * As adding group here, indicate multiple implementation support of a service which is exposed. How the consumer will discover which one to use?\r\n>   \r\n>   1. Is consumer developer will know about groups at the time of  writing it? Or some one else by understanding implementation details and available groups can choose which one to use?\r\n> \r\n> Few improvements which I am guessing can be possible (Correct me If I am wrong here)\r\n> \r\n> 1. Is there will be a default group support for any exposed service (e.g. in sprint boot there could be multiple implementation of a data source but there will be a default **primary** bean always.\r\n> 2. If a implementation of service (e.g. group B) is unavailable should we provide support that consumer call can be still served by default group (or configured group D ), this can be use full when a particular group is in upgradation phase or out of service).\r\n> \r\n> Any correction of my thought will be appreciated.Thanks in advanced.\r\n\r\nHere what we talked about is only Telnet handler and will not effect normal RPC requests",
        "@jasonjoo2010 I will give it a try.",
        "> > A questions ::\r\n> > \r\n> > * As adding group here, indicate multiple implementation support of a service which is exposed. How the consumer will discover which one to use?\r\n> >   \r\n> >   1. Is consumer developer will know about groups at the time of  writing it? Or some one else by understanding implementation details and available groups can choose which one to use?\r\n> > \r\n> > Few improvements which I am guessing can be possible (Correct me If I am wrong here)\r\n> > \r\n> > 1. Is there will be a default group support for any exposed service (e.g. in sprint boot there could be multiple implementation of a data source but there will be a default **primary** bean always.\r\n> > 2. If a implementation of service (e.g. group B) is unavailable should we provide support that consumer call can be still served by default group (or configured group D ), this can be use full when a particular group is in upgradation phase or out of service).\r\n> > \r\n> > Any correction of my thought will be appreciated.Thanks in advanced.\r\n> \r\n> Here what we talked about is only Telnet handler and will not effect normal RPC requests\r\n\r\n@jasonjoo2010 thanks for your reply and correcting me.",
        "> > > A questions ::\r\n> > > \r\n> > > * As adding group here, indicate multiple implementation support of a service which is exposed. How the consumer will discover which one to use?\r\n> > >   \r\n> > >   1. Is consumer developer will know about groups at the time of  writing it? Or some one else by understanding implementation details and available groups can choose which one to use?\r\n> > > \r\n> > > Few improvements which I am guessing can be possible (Correct me If I am wrong here)\r\n> > > \r\n> > > 1. Is there will be a default group support for any exposed service (e.g. in sprint boot there could be multiple implementation of a data source but there will be a default **primary** bean always.\r\n> > > 2. If a implementation of service (e.g. group B) is unavailable should we provide support that consumer call can be still served by default group (or configured group D ), this can be use full when a particular group is in upgradation phase or out of service).\r\n> > > \r\n> > > Any correction of my thought will be appreciated.Thanks in advanced.\r\n> > \r\n> > \r\n> > Here what we talked about is only Telnet handler and will not effect normal RPC requests\r\n> \r\n> @jasonjoo2010 thanks for your reply and correcting me.\r\n\r\n:)",
        "> @jasonjoo2010 I will give it a try.\r\n\r\nthanks",
        "> dubbo>ls\r\n> demoA:org.apache.dubbo.demo.DemoService:1.0.0\r\n> demoB:org.apache.dubbo.demo.DemoService:1.0.0\r\n> \r\n\r\nHow about this.",
        "> > dubbo>ls\r\n> > demoA:org.apache.dubbo.demo.DemoService:1.0.0\r\n> > demoB:org.apache.dubbo.demo.DemoService:1.0.0\r\n> \r\n> How about this.\r\n\r\nI think we should keep backwards compatibility.\r\n\r\nSo if no multiple implementation it should not change the gramma or formats.\r\nMaybe it would changed when meet multiple implementation, eg:\r\n\r\n```shell\r\ndubbo>ls\r\norg.apache.dubbo.demo.FirstService\r\norg.apache.dubbo.demo.SecondService\r\norg.apache.dubbo.demo.SecondServiceImplA\r\norg.apache.dubbo.demo.SecondServiceImplB\r\n```\r\n\r\nSurely there is no extra info including version, group and etc. only work for multiple implementation."
    ],
    "2924": [],
    "2991": [
        "https://github.com/apache/incubator-dubbo/issues/2884",
        "@carryxyh could you assign this issue to me.",
        "Seems like I can't assign to u because u are not a committer or a PMC.\r\nI can't find u at the assignees list.\r\nBut u can direct do this and send pr. I will take a look. :)",
        "No worries, I mark myself in this issue in comment secntion, so that we can avoid double spend.",
        "@khanimteyaz working on it.",
        "I'm not sure if this issue is been fixed but I can work on it if @khanimteyaz is not available. Let me know if I should try to work on other issues ",
        "Hi,\nPlease you start working on this.  Due to time crunch I am not able work on\nthis.  thanks for your cooperation.\n\nOn Friday, March 15, 2019, Daniela Marques de Morais <\nnotifications@github.com> wrote:\n\n> I'm not sure if this issue is been fixed but I can work on it if\n> @khanimteyaz <https://github.com/khanimteyaz> is not available. Let me\n> know if I should try to work on other issues\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/incubator-dubbo/issues/2991#issuecomment-473332040>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AdXcPf_c_sHLGRLYD6tEvlukQp2XuQhtks5vW72qgaJpZM4ZXltN>\n> .\n>\n",
        "I'll work on this",
        "Very nice of u. @danielamorais \r\nLooking forward to your pr."
    ],
    "581": [],
    "371": [],
    "49": [],
    "2994": [
        "https://github.com/apache/incubator-dubbo/issues/2884"
    ],
    "44": [],
    "2190": [],
    "4584": [],
    "2245": [],
    "2999": [
        "https://github.com/apache/incubator-dubbo/issues/2884",
        "I am learning this piece recently, I will gradually improve this comment.",
        "Nice work.\r\nLooking forward to it.",
        "you are good boy",
        "@carryxyh I'm learning this module too, do @Leishunyu needs a collaborator? I'll mainly help to clean up the code"
    ],
    "2092": [],
    "3002": [
        "https://github.com/apache/incubator-dubbo/issues/2884",
        "I will do it.",
        "Ok, looking forward to your pull request.\r\n:)"
    ],
    "1878": [],
    "3798": [],
    "1471": [],
    "2802": [],
    "5172": [],
    "5465": [],
    "4546": [],
    "4695": [],
    "2620": [],
    "1706": [],
    "3023": [],
    "1316": [],
    "3026": [
        "Hi, I leave some comments, would u pls check it?\r\n:)",
        "> Hi, I leave some comments, would u pls check it?\r\n> :)\r\n\r\nThanks, I will."
    ],
    "1019": [],
    "3029": [
        "Excellent!\r\nWho use Netty4 in production environment?",
        "good idea, in fact, the only work is to change the dependency in pom.xml from netty to nett4, change the constants file, change the default adaptive class in transport"
    ],
    "1732": [],
    "4642": [],
    "2495": [],
    "1779": [],
    "2262": [],
    "3263": [],
    "2278": [],
    "1205": [],
    "3428": [],
    "3301": [],
    "3166": [],
    "1039": [],
    "4434": [],
    "1413": [],
    "3170": [],
    "2066": [],
    "3069": [
        "```\r\n2019-08-06 16:26:08.383 [NettyServerWorker-6-13] WARN  com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec |  [DUBBO] Fail to encode response: Response [id=5235576, version=stormjar, status=20, event=false, error=null, result=RpcResult [result=null, exception=null]], send bad_response info instead, cause: For input string: \"\", dubbo version: 2.6.6, current host: 10.50.1.45\r\njava.lang.NumberFormatException: For input string: \"\"\r\n        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_60]\r\n        at java.lang.Integer.parseInt(Integer.java:592) ~[na:1.8.0_60]\r\n        at java.lang.Integer.parseInt(Integer.java:615) ~[na:1.8.0_60]\r\n        at com.alibaba.dubbo.common.Version.parseInt(Version.java:92) ~[dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.common.Version.getIntVersion(Version.java:81) ~[dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.common.Version.isSupportResponseAttatchment(Version.java:70) ~[dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.rpc.protocol.dubbo.DubboCodec.encodeResponseData(DubboCodec.java:192) ~[dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.encodeResponse(ExchangeCodec.java:278) [dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.encode(ExchangeCodec.java:74) [dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.rpc.protocol.dubbo.DubboCountCodec.encode(DubboCountCodec.java:38) [dubbo-2.6.6.jar:2.6.6]\r\n        at com.alibaba.dubbo.remoting.transport.netty4.NettyCodecAdapter$InternalEncoder.encode(NettyCodecAdapter.java:70) [dubbo-2.6.6.jar:2.6.6]\r\n        at io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:743) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:735) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:820) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:728) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.ChannelDuplexHandler.write(ChannelDuplexHandler.java:106) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at com.alibaba.dubbo.remoting.transport.netty4.NettyServerHandler.write(NettyServerHandler.java:105) [dubbo-2.6.6.jar:2.6.6]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:743) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:735) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:36) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1072) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1126) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1061) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:408) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:455) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144) [netty-all-4.0.42.Final.jar:4.0.42.Final]\r\n        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_60]\r\n```",
        "It's already been fixed, please try 2.7.4-SNAPSHOT."
    ],
    "4696": [],
    "413": [],
    "3240": [],
    "3070": [
        "I will submit a pr to remove this duplicate code"
    ],
    "3645": [],
    "3183": [],
    "3419": [],
    "3559": [],
    "3084": [
        "I personally think that the use of this method is very limited.\r\nIf you have special needs, it is recommended to implement your own registration center.",
        "A project has many applications, and they communication each other via dubbo RPC. \r\nAnyone who want to migration this project's dubbo registration center smoothy will need this feature.\r\nFor example, migration registration center from redis to zookeeper without stop the full Project.",
        "I think u can impl a new Registry which will subscribe and registry to multi registration center.",
        "@chickenlj @mercyblitz @ralf0131  Any suggestions for this issue ?",
        "@flystar32 \r\n1.  dubbo\u652f\u6301\u591a\u6ce8\u518c\uff0c\u591a\u6d88\u8d39\r\n\u53ef\u4ee5\u5c06\u4f60\u4eec\u7684Provider\u4e3a\u6bcf\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u90fd\u6ce8\u518c\u4e00\u4efd\u6570\u636e\uff0c\u6d88\u8d39\u65b9\u6d88\u8d39\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u670d\u52a1\uff0c\u76ee\u524ddubbo\u662f\u6309\u7167\u914d\u7f6e\u6ce8\u518c\u4e2d\u5fc3\u7684\u5faa\u5e8f\u8fdb\u884c\u6d88\u8d39\uff0c\u6bd4\u5982\u662f\u914d\u7f6e\u4e86redis, zk\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4f18\u5148\u6d88\u8d39redis\u670d\u52a1\uff0c\u5982\u679credis\u6ca1\u6709\u670d\u52a1\u4f1a\u81ea\u52a8\u53bb\u6d88\u8d39zk\u670d\u52a1\r\n\r\n2. \u8fd9\u4e2a\u548c\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u73b0\u6ca1\u6709\u5173\u7cfb, \u67092\u4e2d\u65b9\u6cd5\u53ef\u4ee5\u652f\u6301\u4f60\u7684\u9700\u6c42\uff1a\r\na. org.apache.dubbo.config.ReferenceConfig#createProxy\r\nAvailableCluster \u9ed8\u8ba4\u662f\u6839\u636e\u914d\u7f6e\u987a\u5e8f\u6d88\u8d39\u6ce8\u518c\u4e2d\u5fc3\u6570\u636e\uff0c\u53ef\u4ee5\u5b9e\u73b0\u65b0\u7684Cluster\u51b3\u5b9a\u6d88\u8d39\u7b56\u7565\r\nb. \u4f60\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u8def\u7531Router\uff0c\u591a\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u51b3\u5b9a\u6d88\u8d39\u54ea\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u670d\u52a1\r\n\r\nGoogle translation\uff1a\r\n\r\nDubbo supports multiple registrations, more consumption\r\nYou can register your Provider for each registration center, and the consumer consumes multiple registration center services. Currently, dubbo is consumed according to the configuration registration center. For example, redis, zk registration center, priority consumption redis Service, if redis no service will automatically consume zk service\r\n\r\nThis has nothing to do with the registry implementation. There are 2 ways to support your needs:\r\na. org.apache.dubbo.config.ReferenceConfig#createProxy\r\nAvailableCluster defaults to consuming registry data sequentially according to configuration\r\nb. You can implement a routing router, and multiple registries dynamically determine which registrar service to consume at runtime."
    ],
    "2687": [],
    "2653": [],
    "1810": [],
    "5084": [],
    "154": [],
    "3106": [
        "@kezhenxu94 , what you mentioned I am with it. I think we should keep the responsibility of operation on objects e.g. in this case clearing the registry to the owner of registries object AbstractRegistry.java and when ever it returns any mutable member variable it should return copy of it. But having said that we also needs to consider memory footprint/performance of creating clone copy of returned object. I beleve it should not change memory footprint or performance drastically but better to have some data around it.",
        "> I beleve it should not change memory footprint or performance drastically but better to have some data around it.\r\n\r\n@khanimteyaz That's my opinion too. What I suggest is to wrap the member variable such as using `Collections.unmodifiableSet`, and this may break something, so it needs investigation and discussion",
        "> > I beleve it should not change memory footprint or performance drastically but better to have some data around it.\r\n> \r\n> @khanimteyaz That's my opinion too. What I suggest is to wrap the member variable such as using `Collections.unmodifiableSet`, and this may break something, so it needs investigation and discussion\r\n\r\n@kezhenxu94 agree.",
        "then, can someone nicely work on it?",
        "@beiwei30  I'll work on it"
    ],
    "4015": [],
    "2744": [],
    "1345": [],
    "5455": [],
    "3989": [],
    "4057": [],
    "4216": [],
    "3111": [],
    "479": [],
    "3123": [],
    "3124": [],
    "798": [],
    "3333": [],
    "3224": [],
    "3137": [
        "@cvictory  \r\nIs there a plan for this suggestion? If there is no plan, I plan to start doing this in the near future.",
        "@CrazyHZM pls. take a look at #4017. I've finished step1.\r\n\r\n- step2, we need to create multiple **Constants** in dubbo-common module.\r\n- step3, start to reference new **Constatns** one by one.\r\n- step4, delete old **Constants**\r\n- step5, examine each new **Constants** and evaluate if they are more suitable to move out from dubbo-common into its delegated module, say: org.apache.dubbo.common.serialize.Constants to dubbo-serialization-api\r\n\r\nLet me know if it's reasonable, and which part will you claim for step2. I will start from common:\r\n\r\n```java\r\n    // BEGIN common\r\n    public static final String DUBBO = \"dubbo\";\r\n   ...\r\n   public static final int MAX_PROXY_COUNT = 65535;\r\n    // END common\r\n```\r\n",
        "@beiwei30 \r\nI think this step is good, I am responsible for doing the remoting, rpc, config parts, I will start with remoting",
        "will you do it based on the current pull request, or wait until it's merged?",
        "Wait until after being merged",
        "@CrazyHZM #4017 is merged. pls. start to move constants into **constants** sub package first. In this step, let's don't touch org.apache.dubbo.common.Constants **untouched**.",
        "FYI, the first new constant class I created is: org.apache.dubbo.common.constants.CommonConstants",
        "I created \r\norg.apache.dubbo.common.constants.RemotingConstants\u3001\r\norg.apache.dubbo.common.constants.RpcConstants and org.apache.dubbo.common.constants.ConfigConstants.",
        "@CrazyHZM see #4020",
        "@beiwei30 \r\nstep2 #4021",
        "> @beiwei30\r\n> step2 #4021\r\n\r\nI left my comment. Would you mind to review mine too?",
        "> @CrazyHZM see #4020\r\n\r\nI will merge it when I pass ci",
        "I think we can now move to step3.",
        "I will start modifying the remoting later.",
        "so, now we should move to step4, start to review any constants suitable to move back to its own module.\r\n\r\nfor example, in RPCConstants:\r\n\r\n```java\r\n    // BEGIN dubbo-rpc-rest\r\n    String KEEP_ALIVE_KEY = \"keepalive\";\r\n\r\n    boolean DEFAULT_KEEP_ALIVE = true;\r\n\r\n    String EXTENSION_KEY = \"extension\";\r\n    // END dubbo-rpc-rest\r\n```",
        "Add comments first or move directly?",
        "if you are pretty sure it should be move into individual module, just do it, and let's review :)",
        "ok,I will start to review remoting part.",
        "@CrazyHZM FYI, I am on remoting.",
        "@beiwei30 \r\nI will start the fourth step of config.",
        "You can continue to work at this in dubbo-2.7.3"
    ],
    "5441": [],
    "3651": [],
    "771": [],
    "233": [],
    "2192": [],
    "4923": [],
    "4515": [],
    "3122": [],
    "2587": [],
    "2611": [],
    "3165": [
        "netty\u5df2\u7ecf\u5e2e\u4f60\u5b9e\u73b0\u4e86\uff1b\u53ef\u4ee5\u770b\u4e0bIdleStateHandler\u7684\u5b9e\u73b0\uff0c\u91cc\u9762\u6709\u5b9a\u65f6\u5668",
        "> netty\u5df2\u7ecf\u5e2e\u4f60\u5b9e\u73b0\u4e86\uff1b\u53ef\u4ee5\u770b\u4e0bIdleStateHandler\u7684\u5b9e\u73b0\uff0c\u91cc\u9762\u6709\u5b9a\u65f6\u5668\r\n\r\nIdleStateHandler\u91cc\u9762\u4e5f\u53ea\u662f\u89e6\u53d1userEventTriggered\u4e8b\u4ef6\uff0c\u4f46\u662f\u5728qos\u91cc\u597d\u50cf\u6ca1\u6709\u627e\u5230\u76f8\u5173\u7684userEventTriggered\u5904\u7406",
        "\u4f60\u7684\u610f\u601d\u662f\u9700\u8981\u5bf9\u68c0\u6d4b\u5230\u65ad\u5f00\u540e\u52a0\u4e0a\u5904\u7406\u5bf9\u5417\r\n",
        "@lkj41110 \r\n\u8fd9\u4e2a\u5730\u65b9\u597d\u50cf\u786e\u5b9e\u662f\u6ca1\u52a0\u3002\u63d0\u4ea4\u4e2aPR\u52a0\u4e0a\u5427\uff0cidle\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5close\u6389channel\u5373\u53ef\u3002"
    ],
    "6": [],
    "893": [],
    "3179": [
        "@chickenlj  should you modify the configcenter to this way later. "
    ],
    "3255": [],
    "3021": [],
    "3186": [
        "In my impression, dubbo will not support jdk lower version than version 8 when the 3.0 version realease ?",
        "@htynkn Maybe you can add some detail items that can be done, so that someone could come in to help.",
        "I think the following detail need check:\r\n\r\n1. argline set -Xmx to 512M? (do we really need this? or just let JVM decide)\r\n2. profile - java6 need remove\r\n3. profile - test need remove?\r\n4. profile - hudson need remove\r\n5. profile - java8-vm-args need remove\r\n6. maven-source-plugin - hard code version, should use properties\r\n\r\n\r\n",
        "> I think the following detail need check:\r\n> \r\n> 1. argline set -Xmx to 512M\r\n> 2. profile - java6 need remove\r\n> 3. profile - test need remove?\r\n> 4. profile - hudson need remove\r\n> 5. profile - java8-vm-args need remove\r\n> 6. maven-source-plugin - hard code version, should use properties\r\n\r\nThe first configuration seems to exist already, what do you think?",
        "> > I think the following detail need check:\r\n> > \r\n> > 1. argline set -Xmx to 512M\r\n> > 2. profile - java6 need remove\r\n> > 3. profile - test need remove?\r\n> > 4. profile - hudson need remove\r\n> > 5. profile - java8-vm-args need remove\r\n> > 6. maven-source-plugin - hard code version, should use properties\r\n> \r\n> The first configuration seems to exist already, what do you think?\r\n\r\nsorry, I mean do we really limit memory to 512M? or it's better let JVM decide?\r\nwill add explanation for item 1",
        "> In my impression, dubbo will not support jdk lower version than version 8 when the 3.0 version realease ?\r\n\r\nDubbo will only support Java 8 and above from 2.7 onwards."
    ],
    "5134": [],
    "3189": [],
    "3192": [],
    "3193": [
        "\u53ea\u80fd\u901a\u8fc7\u8bbe\u5b9aspring.main.allow-bean-definition-overriding\u4e3atrue\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f     \u8fd8\u6709\u5176\u4ed6\u65b9\u5f0f\u5417\uff08\u4e0d\u5347\u7ea7dubbo\u7248\u672c\uff09?"
    ],
    "1837": [],
    "1237": [],
    "3205": [],
    "3967": [],
    "4526": [],
    "2939": [],
    "3037": [],
    "3218": [
        "\u4ee3\u7801\u7684\u903b\u8f91\u7684\u5165\u53e3\uff0c\u53c2\u8003\uff1aorg.apache.dubbo.config.DubboShutdownHook#doDestroy\u3002\r\n\r\n```java.lang.IllegalStateException: Failed to unregister dubbo://192.168.199.229:20880/org.apache.dubbo.samples.generic.api.IUserService?anyhost=true&application=generic-generic&default.timeout=5000&dubbo=2.0.2&generic=false&interface=org.apache.dubbo.samples.generic.api.IUserService&methods=get&pid=2705&side=provider&specVersion=2.7.0-SNAPSHOT&timestamp=1547389521528 to registry 127.0.0.1:2181, cause: Failed to unregister dubbo://192.168.199.229:20880/org.apache.dubbo.samples.generic.api.IUserService?anyhost=true&application=generic-generic&default.timeout=5000&dubbo=2.0.2&generic=false&interface=org.apache.dubbo.samples.generic.api.IUserService&methods=get&pid=2705&side=provider&specVersion=2.7.0-SNAPSHOT&timestamp=1547389521528 to zookeeper zookeeper://127.0.0.1:2181/org.apache.dubbo.registry.RegistryService?application=generic-generic&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=2705&specVersion=2.7.0-SNAPSHOT&timestamp=1547389521520, cause: instance must be started before calling this method\r\n\tat org.apache.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:273)\r\n\tat org.apache.dubbo.registry.integration.RegistryProtocol$ExporterChangeableWrapper.unexport(RegistryProtocol.java:637)\r\n\tat org.apache.dubbo.registry.integration.RegistryProtocol.destroy(RegistryProtocol.java:408)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.destroy(ProtocolFilterWrapper.java:121)\r\n\tat org.apache.dubbo.qos.protocol.QosProtocolWrapper.destroy(QosProtocolWrapper.java:77)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.destroy(ProtocolListenerWrapper.java:75)\r\n\tat org.apache.dubbo.config.DubboShutdownHook.destroyProtocols(DubboShutdownHook.java:103)\r\n\tat org.apache.dubbo.config.DubboShutdownHook.doDestroy(DubboShutdownHook.java:91)\r\n```\r\n\u6267\u884corg.apache.dubbo.config.DubboShutdownHook.destroyProtocols\u4e4b\u524d\uff0c\u5df2\u7ecf\u6267\u884c\u4e86AbstractRegistryFactory.destroyAll()\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u91cc\u5df2\u7ecf\u53bb\u6267\u884c\u4e86zookeeperClient\u7684close\u65b9\u6cd5\u3002\u53c2\u8003\uff1aorg.apache.dubbo.registry.zookeeper.ZookeeperRegistry#destroy\r\n```\r\n    @Override\r\n    public void destroy() {\r\n        super.destroy();\r\n        try {\r\n            zkClient.close();\r\n        } catch (Exception e) {\r\n            logger.warn(\"Failed to close zookeeper client \" + getUrl() + \", cause: \" + e.getMessage(), e);\r\n        }\r\n    }\r\n```"
    ],
    "3219": [
        "Hi, please describe your issue properly. What problem did you have?",
        "In tomcat 7.0.74, modify the default threadfactory used create threads in forkjoin threadpool to safeForkJoinThreadFactory. And the the thread context classloader in SafeForkJoinThread that force set to SystemClassLoader.So when i use ReferenceConfig init in ForkJoinPool,will not load all use customzie class include created by proxy. @ralf0131 "
    ],
    "2293": [],
    "1456": [],
    "4339": [],
    "2228": [],
    "3384": [],
    "3844": [],
    "4138": [],
    "3237": [
        "looks like a bug, would you mind to fix it?"
    ],
    "595": [],
    "3331": [],
    "3242": [
        "RouterChain\u7c7b  \r\n this.routers = new CopyOnWriteArrayList<>(builtinRouters);\r\n   this.sort(); \r\nCopyOnWriteArrayList\u4e0d\u652f\u6301Collections.sort ",
        "thank you , I will fix it",
        "Thats all right!",
        "2.7.1-SNAPSHOT \u542f\u52a8 dubbo-demo-api-consumer \u4e5f\u62a5\u8fd9\u6837\u7684\u9519\u8bef\r\n\r\nException in thread \"main\" java.lang.UnsupportedOperationException\r\n\tat java.util.concurrent.CopyOnWriteArrayList$COWIterator.set(CopyOnWriteArrayList.java:1185)\r\n\tat java.util.Collections.sort(Collections.java:170)\r\n\tat org.apache.dubbo.rpc.cluster.RouterChain.sort(RouterChain.java:87)",
        "\u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\uff1a\u63d0\u9ad8jdk\u7248\u672c\u52301.8.0_90\u4ee5\u4e0a\u8bd5\u8bd5\u3002\u6211\u76841.8.0_92\u7684\u53ef\u4ee5"
    ],
    "3243": [
        "I see your error message, it seems that you use the hessian protocol, what do you think?\r\n\r\n`com.alibaba.dubbo.rpc.protocol.hessian.HttpClientConnection.sendRequest(HttpClientConnection.java:64) ~[dubbo-2.6.5.jar!/:2.6.5]\r\nat com.caucho.hessian.client.HessianProxy.sendRequest(HessianProxy.java:296) ~[hessian-4.0.37.jar!/:3.1.0]`\r\n\r\nif you use the hessian protoco and dubbo version is 2.6.5 \r\nhttpclient is created in this way. When a concurrent request is made, the exception is thrown because the previous httpclient is not released.\r\n'HttpClient httpClient = new DefaultHttpClient()' \r\n\r\nIn the latest version, httpclient is created this way.\r\n`httpClient = HttpClientBuilder.create().setDefaultRequestConfig(requestConfig).build();`\r\n`build()`this method uses the PoolingHttpClientConnectionManager, so it won't cause this exception to be thrown.\r\n",
        "@ralf0131 \r\nIf I am correct, do we have to modify 2.6.x simultaneously?",
        "> @ralf0131\r\n> If I am correct, do we have to modify 2.6.x simultaneously?\r\n\r\nYes\uff0cplease modify 2.6.x simultaneously.",
        "@CrazyHZM Would you help to fix it in 2.6.x?",
        "> @CrazyHZM Would you help to fix it in 2.6.x?\r\nI will fix it later. ",
        "> > @CrazyHZM Would you help to fix it in 2.6.x?\r\n> > I will fix it later.\r\n\r\nThanks,I will re-download the v2.6.5 when you fix it.",
        "I downloaded the 2.6.5 version of the jar package again. Why do I see that the source code hasn't changed?",
        "@ralf0131  Please review that pr.",
        "The pull request has been merged, it will be fixed from 2.6.7 onwards.\r\nYou can try the 2.6.x branch."
    ],
    "3244": [
        "I will do it.",
        "@beiwei30 \r\nI have submitted a pr fix it, please review it."
    ],
    "554": [],
    "5147": [],
    "3249": [
        "\u7b2c\u4e00\u4e2a\u95ee\u9898\u5728master\u4e0a\u5df2\u7ecf\u4fee\u590d\u4e86\uff0c\u90a3\u4f4d\u63d0\u4ea4\u8005\u6ca1\u6709\u63d0\u4ea4\u52302.6.x\u5206\u652f\u4e0a\uff0c\u53ef\u4ee5\u827e\u7279\u4ed6\u518d\u63d0\u4ea4\u4e00\u4e2a\u52302.6.x\u4e0a\u597d\u4e86",
        "@cvictory is this fixed on both 2.7 and 2.6?",
        "I have submitted the pr to fix this problem on both  2.7 and 2.6. The method `compareTo` is no need to  \r\n overwrite in the most cases since the method `getPriority` existing."
    ],
    "3251": [
        "java.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)\r\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)\r\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)\r\n\tat org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.lang.IllegalArgumentException: @Service interfaceClass() or interfaceName() or interface class must be present!\r\n\tat org.springframework.util.Assert.notNull(Assert.java:193)\r\n\tat com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass(ServiceAnnotationBeanPostProcessor.java:344)\r\n\tat com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBean(ServiceAnnotationBeanPostProcessor.java:251)\r\n\tat com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:143)\r\n\tat com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.postProcessBeanDefinitionRegistry(ServiceAnnotationBeanPostProcessor.java:104)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:327)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:138)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)\r\n\t... 25 more\r\n\r\n> ### ### _****_",
        "Please give more details.",
        "dubbo\u7248\u672c2.6.2\r\n\u4f7f\u7528\u65b9\u5f0f\uff1a\u63a5\u53e3 ---> \u62bd\u8c61\u7c7b ---> \u670d\u52a1\u5b9e\u73b0\u7c7b\uff0c@service\u6ce8\u89e3\u52a0\u5728\u670d\u52a1\u5b9e\u73b0\u7c7b\u4e0a\u3002",
        "Can it works if you use xml-based config?",
        "```java\r\nprivate Class<?> resolveServiceInterfaceClass(Class<?> annotatedServiceBeanClass, Service service) {\r\n\r\n        Class<?> interfaceClass = service.interfaceClass();\r\n\r\n        if (void.class.equals(interfaceClass)) {\r\n\r\n            interfaceClass = null;\r\n\r\n            String interfaceClassName = service.interfaceName();\r\n\r\n            if (StringUtils.hasText(interfaceClassName)) {\r\n                if (ClassUtils.isPresent(interfaceClassName, classLoader)) {\r\n                    interfaceClass = resolveClassName(interfaceClassName, classLoader);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (interfaceClass == null) {\r\n\r\n            Class<?>[] allInterfaces = annotatedServiceBeanClass.getInterfaces();\r\n\r\n            if (allInterfaces.length > 0) {\r\n                interfaceClass = allInterfaces[0];\r\n            }\r\n\r\n        }\r\n\r\n        Assert.notNull(interfaceClass,\r\n                \"@Service interfaceClass() or interfaceName() or interface class must be present!\");\r\n\r\n        Assert.isTrue(interfaceClass.isInterface(),\r\n                \"The type that was annotated @Service is not an interface!\");\r\n\r\n        return interfaceClass;\r\n    }\r\n```\r\nRead this method in ServiceAnnotationBeanPostProcessor.java .\r\nIf you do not set the interfaceClass of @Service annotation obviously, the method will just find the interfaces that the class declare by itself, but it will not search the interfaces that its super classes declares.\r\nI think it is not a bug, it can be regarded as a simpler design because the a class may have many hierarchies of super classes so searching the interfaces of its super classes recursively may be too heavy.",
        "So even if the super class has declared the interface that is implemented, you can declare it be implemented by the sub class obviously.",
        "yes\uff0cit can be solved by appointing the property interfaceClass of @service annotation ,but I think, dubbo should specify the interface name automatically\u3002\u7b97\u4e86\u8fd8\u662f\u8bf4\u4e2d\u6587\u5427\uff0c\u662f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u670d\u52a1\u7c7b\u7684@service\u6ce8\u89e3\u7684 interfaceClass= \"xxx.class\"\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u96be\u9053dubbo\u4e0d\u5e94\u8be5\u662f\u81ea\u52a8\u5730\u5e2e\u6211\u6307\u5b9a\u6700\u9876\u5c42\u7684\u63a5\u53e3\u4f5c\u4e3a\u8fd9\u4e2a\u6ce8\u89e3\u5c5e\u6027interfaceClass\u7684\u503c\u5417\u3002\u4e3a\u4f55\u975e\u5f97\u4eba\u4e3a\u6307\u5b9a\u3002\u4ee3\u7801\u5b9e\u73b0\u4e0a\uff0c\u4e0d\u5e94\u8be5\u662f\u4ece\u6700\u7ec8\u7684\u7c7b\u5f80\u7236\u7c7b\u4e00\u5c42\u4e00\u5c42\u627e\uff0c\u76f4\u5230\u627e\u5230\u6709\u63a5\u53e3\u5417\u3002\u8fd9\u786e\u5b9e\u4e0d\u80fd\u7b97bug\uff0c\u4f46\u6211\u611f\u89c9\u5b9e\u73b0\u4e0a\u6709\u5f85\u4f18\u5316\u54c8\u3002",
        "\u90a3\u6837\u9700\u8981\u9012\u5f52\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0a\u627e\u6240\u6709\u7236\u7c7b\u5b9e\u73b0\u7684\u63a5\u53e3\uff0c\u7136\u540e\u805a\u5408\u6210\u4e00\u4e2alist\uff0c\u518d\u53d6\u7b2c\u4e00\u4e2a\u3002\u4e0d\u662f\u4e0d\u53ef\u7528\u505a\uff0c\u53ea\u662f\u6ca1\u5fc5\u8981\u3002spring\u91cc\u4e5f\u6709\u5f88\u591a\u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u7136\u540e\u4e5f\u58f0\u660e\u5b9e\u73b0\u4e86\u540c\u4e00\u4e2a\u63a5\u53e3",
        "@mercyblitz Hi, when fix the problem, please consider the issue.\r\n#3357 "
    ],
    "4879": [],
    "3264": [],
    "463": [],
    "3254": [],
    "3230": [],
    "2602": [],
    "4899": [],
    "2277": [],
    "3441": [],
    "3275": [
        "@cyejing   \u73b0\u5728\u662f\u600e\u4e48\u89e3\u51b3\u7684",
        "Same issue #3386",
        "@magang0425  \u8fd9\u6837\r\n```\r\n@Override\r\npublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\r\n    try{\r\n        return method.invoke(bean, args);\r\n    }catch(InvocationTargetException ite){\r\n        throw ite.getTargetException();\r\n    }\r\n}\r\n```",
        "@magang0425  \u6211\u9009\u62e9\u91cd\u5199 ReferenceAnnotationBeanPostProcessor \u65b9\u6cd5\r\n\u5982@scm1219 \u7684\u4ee3\u7801\u3002\r\n\u7b49\u65b0\u7248\u4fee\u590d"
    ],
    "3269": [],
    "5504": [],
    "884": [],
    "3288": [
        "https://github.com/apache/incubator-dubbo/issues/3569\r\nThe zkclient implements is very complicated and hard to keep. \r\nSo a survey is created so that we should continue to keep zkclient in dubbo project.",
        "https://github.com/cvictory/incubator-dubbo/tree/issue_3288"
    ],
    "3289": [
        "Compared to wildcard expression, is CIDR a more convenient way?\r\nlike `10.0.0.1/24`\r\nor expression like `10.0.0.1-10.0.0.254`",
        "@biyuhao +1",
        "https://www.java2s.com/Code/Java/Network-Protocol/CheckifIPaddressmatchpattern.htm \r\nMaybe this meet this requirement.",
        "https://stackoverflow.com/questions/2942299/converting-cidr-address-to-subnet-mask-and-network-address\r\n\r\nIt need to support both ip4 and ip6.",
        "https://github.com/cvictory/incubator-dubbo/tree/issue_3289\r\nIt is in testing."
    ],
    "2708": [],
    "2253": [],
    "4678": [],
    "5346": [],
    "3294": [],
    "3883": [],
    "3296": [
        "Duplicated issue  #3188"
    ],
    "2036": [],
    "3174": [],
    "1062": [],
    "2319": [],
    "3341": [],
    "388": [],
    "3542": [],
    "4181": [],
    "4869": [],
    "1018": [],
    "3342": [
        "It should keep the no-argument constructor method.",
        "Yeah, in Hessian, you must keep a no-argument constructor method.",
        "You are right\uff01it must keep a no-argument constructor method in URL.java. I will submit a PR to fix it.",
        "@qq925716471 \r\nI noticed that you have not submitted a pull request. Would you like to try to submit a pull request to fix the problem you found yourself?",
        "I have already submitted a pr.\r\n\bSo I should close my pr , right?",
        "@carryxyh \r\nWhy not deal with my PR?",
        "We should involve more people in the community, unless the person asking the question does not intend to submit the pr, otherwise we should encourage the person asking the question to submit the pr, especially those who have never participated in the community.\r\n\r\nWhy don't I deal your pr? good question. I would like to ask you, why not encourage the person who made this issue to submit pr to fix his own question?",
        "Then I want to ask you, I solve this problem is to encourage others to solve it? Someone raised a question. If you have been waiting for the person who asked the question to solve it, should the obvious problem be backlogged?\r\nThere are many ways to participate in the community, and asking questions is also a way to participate in the community. I think I just saw this problem and felt that it could be solved, then I submitted the changes, and in exchange for being ignored, and understood to discourage others from solving the problem. If you need to wait for someone to ask a question, then how long do you think it will be reasonable? Then I know now, to deal with other people's problems is to discourage others from solving their own problems.",
        "You misunderstood what I meant. This is a very simple little problem and it is not urgent to be fixed. In this case, I asked the submitter of this issue.\r\n\r\nI just checked your two prs, I think @qq925716471 's pr is better, for specific reasons pls check the comments under https://github.com/apache/incubator-dubbo/pull/3350.",
        "@qq925716471 \r\nThx for your contribution."
    ],
    "979": [],
    "2024": [],
    "4099": [],
    "3347": [
        "In the release-2.7.0 branch modification or master\uff1f",
        "@CrazyHZM i think for now, just for branch. after 2.7.0 release, it can apply to master  "
    ],
    "1868": [],
    "5512": [],
    "3355": [],
    "3783": [],
    "3271": [],
    "945": [],
    "470": [],
    "1482": [],
    "3361": [
        "+1 do you have any plan how to do this?",
        "There are many logs printed to console by `DubboAppender`.\r\n`DubboAppender` is extended from `ConsoleAppender`, it will print to console then cache the log in memory, and some unit test case are depending on it.\r\n\r\nI am trying to make `DubboAppender` extend from `FileAppender`, it will print to the local file instead of the console without breaking any unit test logic.\r\nI did some test in my forked repo, here is the patch https://github.com/biyuhao/incubator-dubbo/commit/b4b7812827dc808c82831751ab89f1232ec215c0\r\n\r\nAnd the corresponding Travis log\r\nhttps://api.travis-ci.org/v3/job/485302374/log.txt\r\nhttps://api.travis-ci.org/v3/job/485302373/log.txt\r\n\r\nAs you can see, after this tweak, the Travis log dropped to about 1.51MB.\r\nI'm not sure if there is any better idea. If this solution is fine I'll send a PR.",
        "In this way, if there is some error, are we able to check the file for detailed exception?",
        "#### for Travis environment\r\nWe can output all the unit test log to one local file maybe `PROJECT_ROOT/dubbo.log`.\r\nIf there is some error, use Travis `after_failure` to print last information of `dubbo.log`.\r\n```\r\nafter_failure:\r\n  - if [ -f dubbo.log ]; then echo \"------TAIL of dubbo.log------\"; tail -n 1000 dubbo.log; echo \"------END of dubbo.log------\"; fi\r\n```\r\n\r\nI simulated a test failure, and the Travis log is https://api.travis-ci.org/v3/job/485746697/log.txt\r\n```\r\ntravis_time:end:238f76ac:start=1548741013072176158,finish=1548741024298622064,duration=11226445906\r\n\u001b[0Ktravis_fold:end:cache.2\r\n\u001b[0K\r\ntravis_fold:start:after_failure\r\n\u001b[0Ktravis_time:start:2672b980\r\n\u001b[0K$ if [ -f dubbo.log ]; then echo \"------TAIL of dubbo.log------\"; tail -n 1000 dubbo.log; echo \"------END of dubbo.log------\";fi\r\n------TAIL of dubbo.log------\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.ClassNotFoundException: TestService\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\r\n// SOME STACK INFO HERE\r\n\r\n\t... 27 more\r\n2019-01-29 05:50:12,177 WARN [org.apache.dubbo.remoting.transport.AbstractServer:disconnected] -  [DUBBO] All clients has disconnected from /172.17.0.1:34644. You can graceful shutdown now., dubbo version: 2.7.1-SNAPSHOT, current host: 172.17.0.1\r\n------END of dubbo.log------\r\ntravis_time:end:2672b980:start=1548741024303108412,finish=1548741024308579986,duration=5471574\r\n\u001b[0Ktravis_fold:end:after_failure\r\n\u001b[0K\r\nDone. Your build exited with 1.\r\n```\r\n\r\n#### for local environment\r\nWe can always check the full content of the local file log.\r\n\r\nIf everything is fine, the Travis log will be like https://api.travis-ci.org/v3/job/485755453/log.txt\r\nAnd the full view of the commit https://github.com/biyuhao/incubator-dubbo/commit/1a103d1e8c956e8981aa415bde1710a3f0063011\r\n",
        "@biyuhao Thanks for the explanation. That's what I want!"
    ],
    "2390": [],
    "3365": [
        "I am compiling errors when running this UT\r\n\r\n`Error:(38, 46) java: \u627e\u4e0d\u5230\u7b26\u53f7\r\n  \u7b26\u53f7:   \u7c7b ZookeeperTransporter\r\n  \u4f4d\u7f6e: \u7c7b org.apache.dubbo.metadata.store.test.JTestMetadataReport4Test`\r\n`Error:(29, 13) java: \u627e\u4e0d\u5230\u7b26\u53f7\r\n  \u7b26\u53f7:   \u7c7b ZookeeperTransporter\r\n  \u4f4d\u7f6e: \u7c7b org.apache.dubbo.metadata.store.test.JTestMetadataReportFactory4Test`"
    ],
    "3367": [
        "Deleting the space will succeed. I don't recommend enhancing the handling of the space here. What do you think?",
        "There is a similar discussion in Springboot project \r\nhttps://github.com/spring-projects/spring-boot/issues/13602#issuecomment-402113151",
        "White space should definitely be considered."
    ],
    "3775": [],
    "5459": [],
    "322": [],
    "3995": [],
    "4443": [],
    "3868": [],
    "102": [],
    "3550": [],
    "5075": [],
    "3401": [
        "> Hi, I followed your steps but can't reproduce your error locally. Could you describe it in more detail?\r\n\r\nThat's all the information I can provide,in my local mechain,the following code \r\n\r\n> MulticastRegistry.this.receive(msg, (InetSocketAddress) recv.getSocketAddress());\r\n\r\nthe host of (InetSocketAddress) recv.getSocketAddress() is 127.0.0.1, and when it goes to org.apache.dubbo.registry.multicast.MulticastRegistry#receive, the value of NetUtils.getLocalHost() is \r\n10.200.182.127, then the unicast method is called,actually it is multicast method which should be called\r\n\r\n```java\r\npublic MulticastRegistry(URL url) {\r\n        super(url);\r\n        if (url.isAnyHost()) {\r\n            throw new IllegalStateException(\"registry address == null\");\r\n        }\r\n        try {\r\n            multicastAddress = InetAddress.getByName(url.getHost());\r\n            checkMulticastAddress(multicastAddress);\r\n\r\n            multicastPort = url.getPort() <= 0 ? DEFAULT_MULTICAST_PORT : url.getPort();\r\n            multicastSocket = new MulticastSocket(multicastPort);\r\n            NetUtils.joinMulticastGroup(multicastSocket, multicastAddress);\r\n            Thread thread = new Thread(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    byte[] buf = new byte[2048];\r\n                    DatagramPacket recv = new DatagramPacket(buf, buf.length);\r\n                    while (!multicastSocket.isClosed()) {\r\n                        try {\r\n                            multicastSocket.receive(recv);\r\n                            String msg = new String(recv.getData()).trim();\r\n                            int i = msg.indexOf('\\n');\r\n                            if (i > 0) {\r\n                                msg = msg.substring(0, i).trim();\r\n                            }\r\n                            MulticastRegistry.this.receive(msg, (InetSocketAddress) recv.getSocketAddress());\r\n                            Arrays.fill(buf, (byte) 0);\r\n                        } catch (Throwable e) {\r\n                            if (!multicastSocket.isClosed()) {\r\n                                logger.error(e.getMessage(), e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, \"DubboMulticastRegistryReceiver\");\r\n            thread.setDaemon(true);\r\n            thread.start();\r\n        } catch (IOException e) {\r\n            throw new IllegalStateException(e.getMessage(), e);\r\n        }\r\n        this.cleanPeriod = url.getParameter(Constants.SESSION_TIMEOUT_KEY, Constants.DEFAULT_SESSION_TIMEOUT);\r\n        if (url.getParameter(\"clean\", true)) {\r\n            this.cleanFuture = cleanExecutor.scheduleWithFixedDelay(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n                        clean(); // Remove the expired\r\n                    } catch (Throwable t) { // Defensive fault tolerance\r\n                        logger.error(\"Unexpected exception occur at clean expired provider, cause: \" + t.getMessage(), t);\r\n                    }\r\n                }\r\n            }, cleanPeriod, cleanPeriod, TimeUnit.MILLISECONDS);\r\n        } else {\r\n            this.cleanFuture = null;\r\n        }\r\n    }\r\n```"
    ],
    "5553": [],
    "2264": [],
    "3458": [],
    "4988": [],
    "1509": [],
    "3411": [
        "Can you provide a demo project on github that can reproduce the error?",
        "refer #1655\r\nIs it the same as yours?",
        "thank you for your reply.\r\nthe sourcecode url is https://github.com/schdai/dubbo-webservice.git\r\n\r\nthe wsdl address:   http://localhost:8080/dubbo-webservice/services/DubboService?wsdl\r\n\r\nand there is noting under port element, it should exists if you use dubbo 2.5.3 & cxf 2.7.7\r\n<wsdl:service name=\"DubboService\">\r\n<wsdl:port binding=\"tns:DubboServiceSoapBinding\" name=\"DubboServicePort\">\r\n    </wsdl:port>\r\n</wsdl:service>\r\n\r\n",
        "refer #1655    is the same result with mine.  but under dubbo 2.5.3 + cxf 2.7.7, everything is ok."
    ],
    "3938": [],
    "5584": [],
    "4739": [],
    "1388": [],
    "3423": [
        "release of version 3.2.5 includes this feature"
    ],
    "2964": [],
    "3426": [
        "\u53ef\u4ee5\u770b\u4e00\u4e0b\u793a\u4f8b\uff1ahttps://github.com/apache/incubator-dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples\r\n\u5e94\u8be5\u4ec5\u4ec5\u6dfb\u52a0\uff1a\r\n>       <groupId>org.apache.curator</groupId>\r\n>       <artifactId>curator-framework</artifactId>\r\n\u5c31\u53ef\u4ee5",
        "I think it's a side effect of defaulting the Registry (only if it's zookeeper) as the Config Center.\r\n\r\nI guess you are using `zookeeper` registry and `zkclient`, right?",
        "> I think it's a side effect of defaulting the Registry (only if it's zookeeper) as the Config Center.\r\n> \r\n> I guess you are using `zookeeper` registry and `zkclient`, right?\r\n\r\nyes, I use zk as my registry",
        "\u7528curator-client \u5c31\u53ef\u4ee5\u89e3\u51b3",
        "we need to refresh README when we release 2.7.1"
    ],
    "2803": [],
    "3808": [],
    "3429": [
        "\u6211\u8c03\u8bd5\u4e86\u4e00\u4e0b\uff0c\u5c31\u662f\u56e0\u4e3aReferenceBeanInvocationHandler \u7c7b\u7684init\u65b9\u6cd5\u6ca1\u6709\u8c03\u7528\u5bfc\u81f4bean\u5c5e\u6027\u4e3anull\uff0c\r\n\u6211\u628a\u8fd9\u4e2a\u7c7b\u505a\u4e86\u5982\u4e0b\u4fee\u6539\uff1a\r\n<img width=\"726\" alt=\"default\" src=\"https://user-images.githubusercontent.com/16658917/52172140-67235780-27a4-11e9-8fe9-3877de33c898.png\">\r\n\r\n\u5728ReferenceBeanInvocationHandler \u7684\u6784\u9020\u65b9\u6cd5\u91cc\u9762\u8c03\u7528init\u65b9\u6cd5\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u6e05\u695a\u8fd9\u6837\u505a\u4f1a\u4e0d\u4f1a\u6709\u5176\u5b83\u7684\u95ee\u9898\u3002\r\n\u4e0b\u9762\u662f\u4fee\u6539\u540e\u7684Junit\u6d4b\u8bd5\u7ed3\u679c\uff1a\r\n<img width=\"975\" alt=\"default\" src=\"https://user-images.githubusercontent.com/16658917/52172151-a9e52f80-27a4-11e9-8c78-10682377f52a.png\">\r\n",
        "Would you please provide a demo project that can reproduce the problem?",
        "\u6211\u5df2\u7ecf\u628a\u76f8\u5173demo\u4e0a\u4f20\u5230github\r\n[https://github.com/meixinbin/dubbo-test](url)\r\n\r\n\u628a\u9879\u76ee\u91cc\u9762\u7684com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor \u7c7b\u5220\u9664\u5373\u53ef\u91cd\u73b0bug",
        "Did you have used https://github.com/apache/incubator-dubbo-spring-boot-project ?",
        "@mercyblitz \r\nyes I do",
        "@tswstarplanet \r\n@mercyblitz \r\n Has the problem been solved? ",
        "I also encountered the same problem, unable to inject in junit\r\n :: Dubbo Spring Boot (v2.7.0) : https://github.com/apache/incubator-dubbo-spring-boot-project\r\n :: Dubbo (v2.7.0) : https://github.com/apache/incubator-dubbo\r\n :: Discuss group : dev@dubbo.apache.org\r\n\r\n[DUBBO] Unsubscribe: provider://192.168.200.232:8000/\r\n```kotlin\r\n@RunWith(SpringRunner::class)\r\n@SpringBootTest\r\nclass UserServiceImplTest {\r\n\r\n    // Place definition above class declaration to make field static\r\n    private val _logger = KotlinLogging.logger {}\r\n\r\n    @Reference(check = false, timeout = 10000)\r\n    private lateinit var userService: UserService\r\n\r\n    @Test\r\n    fun getByUsernameOrPhoneNumOrEmail() {\r\n        userService.getByUsernameOrPhoneNumOrEmail(\"test\")\r\n    }\r\n}\r\n\r\n\r\njava.lang.NullPointerException\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.invoke(ReferenceAnnotationBeanPostProcessor.java:158)\r\n\tat com.sun.proxy.$Proxy147.getByUsernameOrPhoneNumOrEmail(Unknown Source)\r\n\tat com.jidian.cosalon.upms.service.impl.UserServiceImplTest.getByUsernameOrPhoneNumOrEmail(UserServiceImplTest.kt:26)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\r\n\r\n```"
    ],
    "3431": [
        "ConfigManager can work as the basis for the Builder: https://github.com/apache/incubator-dubbo/blob/master/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/context/ConfigManager.java",
        "Good idea!",
        "Cool,I love it",
        "nice",
        "I think the export and refer method of DubboBuilder can provider overload methods such as\r\n```java\r\nDubboBuilder.export(ServiceConfig service,  ProviderConfig provider, RegistryConfig registry)\r\njava\r\nif users would like to refer specific config to a service or a reference. They can config by themselves.",
        ">DubboBuilder.export(ServiceConfig service,  ProviderConfig provider, RegistryConfig registry)\r\njava\r\nif users would like to refer specific config to a service or a reference. They can config by themselves.\r\n\r\nI would suggest providing the service-restricted configs using ServiceConfigBuilder:\r\n`ServiceConfigBuilder.provider(The ProviderConfig).registry(The RegistryConfig).build()`\r\n\r\nWhat do you think? @tswstarplanet ",
        "Is there anyone who's interested and want to give it a try?",
        "Yes, it looks good. We should also limit reproduction of global configs, such as application.",
        "I want to try this issue.And I will commit a pr after serveral days",
        "> Yes, it looks good. We should also limit reproduction of global configs, such as application.\r\n\r\nYes, the `ConfigManager` introduced in 2.7.0 can achieve that, but it may have some room for improvement.",
        "@Bricks-Man Awesome, please let me know if you have any problem.",
        "Further thought on this topic. \r\n\r\nA unified entry like `DubboBuilder.start()` can help us with:\r\n1. Application level rules. You may have noticed of some application level rules introduced in 2.7.0.  The rules are fetched and watched inside each Service, I think it would be better if we can have an application level place to do that.\r\n2. Adapting to microservice architecture. The microservice model is one microservice per process which is different from Dubbo's interface level service model. A unified entry would make the application level service discovery model more easily achieved.",
        "@chickenlj I have finished this issue.Could you have time to do a review for it?Please tell me if you have any question.",
        "#3661"
    ],
    "4362": [],
    "5238": [],
    "4990": [],
    "3445": [
        "Related issue #2088\r\n\r\nVerified. I can reproduce this issue using the sample in `https://github.com/apache/incubator-dubbo-samples/tree/master/dubbo-samples-rest`(changing the dubbo version to 2.7.1-SNAPSHOT), will take more investigation in it. So this may be a bug?",
        "\u4e00\u4e2a\u6700\u7b80\u5355\u7684rest\u4f8b\u5b50\uff1a\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:dubbo=\"http://dubbo.apache.org/schema/dubbo\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd\r\n                           http://dubbo.apache.org/schema/dubbo\r\n                           http://dubbo.apache.org/schema/dubbo/dubbo.xsd\">\r\n\r\n    <dubbo:application name=\"demo-provider\" logger=\"slf4j\"/>\r\n    <dubbo:registry address=\"zookeeper://127.0.0.1:2181\"/>\r\n\r\n    <!-- use dubbo protocol to export service on port 20880 -->\r\n    <dubbo:protocol name=\"dubbo\" port=\"20880\"/>\r\n    <dubbo:protocol name=\"rest\" port=\"8080\" server=\"tomcat\" />\r\n\r\n    <bean id=\"demoService\" class=\"com.nbport.dubbo.rest.ServiceImpl\"/>\r\n    <!-- declare the service interface to be exported -->\r\n    <dubbo:service interface=\"com.nbport.dubbo.rest.ServiceFacade\" ref=\"demoService\" protocol=\"rest\"/>\r\n\r\n</beans>\r\n```\r\n--------\r\n```\r\n@Path(\"demo\")\r\npublic class ServiceImpl implements ServiceFacade {\r\n\r\n    @Override\r\n    @Path(\"hello\")\r\n    @GET\r\n    public String hello() {\r\n        return \"Hello World! \";\r\n    }\r\n\r\n    @Override\r\n    @GET\r\n    @Path(\"/error\")\r\n    public String error() {\r\n        throw new RuntimeException();\r\n    }\r\n}\r\n```\r\n\u4f7f\u75282.7.0\u7684\u4ee3\u7801\uff0c\u5728\u6d4f\u89c8\u5668\u4e0a\u662f\u8bbf\u95ee\u4e0d\u5230http://localhost:8080/demo/hello\u9875\u9762\u7684\uff0c\u800c\u75282.6.5\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u7684\u3002\u4ee3\u7801\u8ddf\u4e86\u4e00\u4e0b\uff0c2.7\u7684\u4ee3\u7801getContextPath\u4f1a\u8fd4\u56de\u63a5\u53e3\u7684\u7c7b\u540d\uff0c\u5982\uff1a\u201ccom.nbport.dubbo.rest.ServiceFacade\u201d\uff0c\u800c\u672c\u4f8b\u4e2d\u539f\u6765\u7248\u672c\u8fd4\u56de\u7684\u662f\u201c\u201d\u3002",
        "Thanks for the report, I will take a look at this issue.",
        "\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898",
        "\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u5e0c\u671b\u53ef\u4ee5\u5c3d\u5feb\u4fee\u590d",
        "dubbo2.7\u7248\u672c\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\u4e86\u3002\r\nfailed to execute\r\njavax.ws.rs.NotFoundException: Could not find resource for full path: http://xxxxx.com/rest/getxxx\r\n        at org.jboss.resteasy.core.registry.ClassNode.match(ClassNode.java:73)\r\n        at org.jboss.resteasy.core.registry.RootClassNode.match(RootClassNode.java:48)\r\n        at org.jboss.resteasy.core.ResourceMethodRegistry.getResourceInvoker(ResourceMethodRegistry.java:444)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.getInvoker(SynchronousDispatcher.java:234)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:171)\r\n        at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:220)\r\n        at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:56)\r\n        at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:51)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)\r\n        at org.apache.dubbo.rpc.protocol.rest.DubboHttpServer$RestHandler.handle(DubboHttpServer.java:89)\r\n        at org.apache.dubbo.remoting.http.servlet.DispatcherServlet.service(DispatcherServlet.java:61)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)\r\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)\r\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:528)\r\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1099)\r\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:670)\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n        at java.lang.Thread.run(Thread.java:745)",
        "\u83b7\u53d6\u5230\u7684contextPath\u662f\u9519\u8bef\u7684\uff0c\u81ea\u5df1\u6539\u4e86\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u6253\u4e86\u4e2a\u5305\u597d\u7528\u4e86\uff1a\r\n\r\n```\r\nprotected String getContextPath(URL url) {\r\n        int pos = url.getPath().lastIndexOf(\"/\");\r\n        return pos > 0 ? url.getPath().substring(0, pos) : \"\";\r\n}\r\n```",
        "I meet the same problem, when change dubbo version to 2.7.1  then fix it !"
    ],
    "2475": [],
    "2090": [],
    "4877": [],
    "2729": [],
    "4196": [],
    "1722": [],
    "5601": [],
    "4904": [],
    "1716": [],
    "4334": [],
    "2559": [],
    "3202": [],
    "1796": [],
    "2523": [],
    "3476": [
        "> 1. write a project that is a provider side exposed serviceA and in the service implimentation invokes another remote service serviceB. The invoke code is like this SpringContainer.getContext().getBean(\"ref\");\r\n\r\nI don't understand why `SpringContainer.getContext().getBean(\"ref\");` will throw NPE, by the time `contextRefreshedEvent` is send, the reference of ServiceB should be ready in ApplicationContext for use.  \r\n\r\n`context.start()` should only be responsible for those beans that have implemented Lifecycle, as the javadoc showed:\r\n```java\r\n/**\r\n\t * Start all registered beans that implement {@link Lifecycle} and are <i>not</i>\r\n\t * already running. Any bean that implements {@link SmartLifecycle} will be\r\n\t * started within its 'phase', and all phases will be ordered from lowest to\r\n\t * highest value. All beans that do not implement {@link SmartLifecycle} will be\r\n\t * started in the default phase 0. A bean declared as a dependency of another bean\r\n\t * will be started before the dependent bean regardless of the declared phase.\r\n\t */\r\n\t@Override\r\n\tpublic void start() {\r\n\t\tstartBeans(false);\r\n\t\tthis.running = true;\r\n\t}\r\n```",
        "> > 1. write a project that is a provider side exposed serviceA and in the service implimentation invokes another remote service serviceB. The invoke code is like this SpringContainer.getContext().getBean(\"ref\");\r\n> \r\n> I don't understand why `SpringContainer.getContext().getBean(\"ref\");` will throw NPE, by the time `contextRefreshedEvent` is send, the reference of ServiceB should be ready in ApplicationContext for use.\r\n> \r\n> `context.start()` should only be responsible for those beans that have implemented Lifecycle, as the javadoc showed:\r\n> \r\n> ```java\r\n> /**\r\n> \t * Start all registered beans that implement {@link Lifecycle} and are <i>not</i>\r\n> \t * already running. Any bean that implements {@link SmartLifecycle} will be\r\n> \t * started within its 'phase', and all phases will be ordered from lowest to\r\n> \t * highest value. All beans that do not implement {@link SmartLifecycle} will be\r\n> \t * started in the default phase 0. A bean declared as a dependency of another bean\r\n> \t * will be started before the dependent bean regardless of the declared phase.\r\n> \t */\r\n> \t@Override\r\n> \tpublic void start() {\r\n> \t\tstartBeans(false);\r\n> \t\tthis.running = true;\r\n> \t}\r\n> ```\r\n\r\n\u56e0\u4e3a\u670d\u52a1\u66b4\u9732\u662f\u5728Spring\u7684ContextRefresh\u9636\u6bb5\uff0c\u670d\u52a1\u66b4\u9732\u540e\uff0c\u5c31\u4f1a\u6709\u4ea4\u6613\u8fdb\u6765\u3002\u8fd9\u4e2a\u9636\u6bb5SpringContainer\u4e2d\u7684XMLClasspathApplicationContext\u5bf9\u8c61\u8fd8\u5728\u542f\u52a8\u4e2d\uff0c\u5e76\u6ca1\u6709\u8d4b\u503c\u6210\u529f\uff0c\u4f46\u662f\u670d\u52a1\u5df2\u7ecf\u66b4\u9732\u4e86\uff0c\u5982\u679c\u4ea4\u6613\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u5b9e\u73b0\u7c7b\u91cc\u9762\u901a\u8fc7SpringContainer.getContext().getBean(\"ref\");\u53bb\u83b7\u53d6\u53e6\u5916\u4e00\u4e2a\u670d\u52a1\u7684\u5f15\u7528\uff0c\u80af\u5b9a\u4f1a\u62a5NPE\u7684\uff0c\u4e0d\u77e5\u9053\u8bf4\u6e05\u695a\u4e86\u6ca1\u3002",
        "\u591a\u8c22\uff0c\u660e\u767d\u95ee\u9898\u4e86\uff1a\r\nSpringContainer.getContext()\u8fd4\u56denull\r\n\u6211\u521a\u5f00\u59cb\u7406\u89e3\u6210SpringContainer.getContext().getBean(\"ref\");\u627e\u4e0d\u5230bean\u3002",
        "> \u591a\u8c22\uff0c\u660e\u767d\u95ee\u9898\u4e86\uff1a\r\n> SpringContainer.getContext()\u8fd4\u56denull\r\n> \u6211\u521a\u5f00\u59cb\u7406\u89e3\u6210SpringContainer.getContext().getBean(\"ref\");\u627e\u4e0d\u5230bean\u3002\r\n\r\n\u6211\u4eec\u6709\u4e2a\u89e3\u51b3\u601d\u8def\uff0c\u628acontextrefresh \u4e8b\u4ef6\u6362\u6210contextstarted\u4e8b\u4ef6\uff0c\u8fd9\u6837\u7684\u6539\u6cd5\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bf7\u4f60\u4eec\u770b\u4e0b\u662f\u5426\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u8fd9\u4e2a\u4fee\u6539\u65b9\u6848\uff0c\u6211\u63d0\u4e00\u4e2aPR",
        "3 question\uff1a\r\n1.  Why not ust ApplicationContext.getBean to get a Bean directly\uff1f\r\n2. I think exporting service when context refresh event is invoked is\r\nreasonable.\r\n3. I think there are some problem when online or offline service . So you\r\ncan refer :\r\nhttp://dubbo.apache.org/zh-cn/docs/user/demos/graceful-shutdown.html\r\n\r\nI donot know what I said can answer your question. If not , let me know.\r\n\r\nLongfei Xia <notifications@github.com> \u4e8e2019\u5e742\u670821\u65e5\u5468\u56db \u4e0b\u534811:50\u5199\u9053\uff1a\r\n\r\n> \u591a\u8c22\uff0c\u660e\u767d\u95ee\u9898\u4e86\uff1a\r\n> SpringContainer.getContext()\u8fd4\u56denull\r\n> \u6211\u521a\u5f00\u59cb\u7406\u89e3\u6210SpringContainer.getContext().getBean(\"ref\");\u627e\u4e0d\u5230bean\u3002\r\n>\r\n> \u6211\u4eec\u6709\u4e2a\u89e3\u51b3\u601d\u8def\uff0c\u628acontextrefresh\r\n> \u4e8b\u4ef6\u6362\u6210contextstarted\u4e8b\u4ef6\uff0c\u8fd9\u6837\u7684\u6539\u6cd5\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bf7\u4f60\u4eec\u770b\u4e0b\u662f\u5426\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u8fd9\u4e2a\u4fee\u6539\u65b9\u6848\uff0c\u6211\u63d0\u4e00\u4e2aPR\r\n>\r\n> \u2014\r\n> You are receiving this because you are subscribed to this thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/incubator-dubbo/issues/3476#issuecomment-466040627>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AD5mbN8dErjtIizaMi31nqEJ1jabbVqwks5vPrpdgaJpZM4a7Lal>\r\n> .\r\n>\r\n\r\n\r\n-- \r\n\r\nBest Regard!\r\ncvitory\r\n",
        "> 3 question\uff1a 1. Why not ust ApplicationContext.getBean to get a Bean directly\uff1f 2. I think exporting service when context refresh event is invoked is reasonable. 3. I think there are some problem when online or offline service . So you can refer : http://dubbo.apache.org/zh-cn/docs/user/demos/graceful-shutdown.html I donot know what I said can answer your question. If not , let me know. Longfei Xia <notifications@github.com> \u4e8e2019\u5e742\u670821\u65e5\u5468\u56db \u4e0b\u534811:50\u5199\u9053\uff1a\r\n> [\u2026](#)\r\n> \u591a\u8c22\uff0c\u660e\u767d\u95ee\u9898\u4e86\uff1a SpringContainer.getContext()\u8fd4\u56denull \u6211\u521a\u5f00\u59cb\u7406\u89e3\u6210SpringContainer.getContext().getBean(\"ref\");\u627e\u4e0d\u5230bean\u3002 \u6211\u4eec\u6709\u4e2a\u89e3\u51b3\u601d\u8def\uff0c\u628acontextrefresh \u4e8b\u4ef6\u6362\u6210contextstarted\u4e8b\u4ef6\uff0c\u8fd9\u6837\u7684\u6539\u6cd5\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bf7\u4f60\u4eec\u770b\u4e0b\u662f\u5426\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u8fd9\u4e2a\u4fee\u6539\u65b9\u6848\uff0c\u6211\u63d0\u4e00\u4e2aPR \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <[#3476 (comment)](https://github.com/apache/incubator-dubbo/issues/3476#issuecomment-466040627)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AD5mbN8dErjtIizaMi31nqEJ1jabbVqwks5vPrpdgaJpZM4a7Lal> .\r\n> -- Best Regard! cvitory\r\n\r\n\u5728\u4e00\u4e2a\u670d\u52a1\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u5185\u90e8\uff0c\u6211\u4eec\u662f\u6ca1\u6cd5\u83b7\u53d6\u5230ApplicationContext\u5bf9\u8c61\u7684\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fmain\u65b9\u6cd5\u542f\u52a8\u7684\u65f6\u5019\u624d\u6709\uff0c\u800c\u4e14\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4e5f\u662fnull\uff0c\u65e0\u6cd5\u901a\u8fc7\u4ed6\u6765getbean",
        "> \u5728\u4e00\u4e2a\u670d\u52a1\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u5185\u90e8\uff0c\u6211\u4eec\u662f\u6ca1\u6cd5\u83b7\u53d6\u5230ApplicationContext\u5bf9\u8c61\u7684\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fmain\u65b9\u6cd5\u542f\u52a8\u7684\u65f6\u5019\u624d\u6709\uff0c\u800c\u4e14\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4e5f\u662fnull\uff0c\u65e0\u6cd5\u901a\u8fc7\u4ed6\u6765getbean\r\n\r\n\u6211\u7684\u610f\u89c1\u662f\uff0c\u8fd9\u79cd\u7528\u6cd5\u4e0d\u592a\u5bf9\uff0cservice \u5b9e\u73b0\u7c7b\u76f4\u63a5\u5b9e\u73b0 `ApplicationContextAware` \u81ea\u7136\u800c\u7136\u5c31\u62ff\u5230 context \u5b9e\u4f8b\u4e86\u3002\u76f8\u53cd\uff0c\u6211\u89c9\u5f97 SpringContainer \u4e0a\u6839\u672c\u5c31\u4e0d\u5e94\u8be5\u66b4\u9732 getContext \u65b9\u6cd5\u3002\r\n",
        "@stoneapple Did you start `SpringContainer` in concurrency? Why you have to get a nulling  `ClassPathXmlApplicationContext`?",
        "otherwise we may change the original impl to:\r\n\r\n```java\r\n    @Override\r\n    public void start() {\r\n        String configPath = ConfigUtils.getProperty(SPRING_CONFIG);\r\n        if (StringUtils.isEmpty(configPath)) {\r\n            configPath = DEFAULT_SPRING_CONFIG;\r\n        }\r\n        context = new ClassPathXmlApplicationContext(configPath.split(\"[,\\\\s]+\"), false);\r\n        context.refresh();\r\n        context.start();\r\n    }\r\n```",
        "\u9664\u4e86\u672c\u8eab\u4f18\u5316\u5916\uff0c\u4f7f\u7528\u4f18\u96c5\u4e0a\u7ebf\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5427\u3002\r\n\u6574\u4e2aspring\u8fd8\u6ca1\u542f\u52a8\u597d\uff0c\u88ab\u63d0\u65e9\u4f9d\u8d56\u5176\u4ed6bean\u3002"
    ],
    "3477": [
        "reproduce this problem with samples/dubbo-samples-rest"
    ],
    "3478": [],
    "4235": [],
    "3252": [],
    "4957": [],
    "5567": [],
    "3494": [
        "At least, this could avoid the recreation of URL in the `export` and `refer` process.\r\n\r\nBut, please keep in mind that the URL is designed to be immutable when `Invoker` is created.",
        "@chickenlj The **SOLUTION** I proposed doesn't break the immutability of `URL`, the proposed `URLBuilder` is used to reduce the **middle state objects** when building a new `URL` from an old one.\r\n\r\n```java\r\nnew URL(\"dubbo\", NetUtils.getLocalHost(), port, RegistryService.class.getName()) // useless middle state URL\r\n                        .setPath(RegistryService.class.getName()) // useless middle state URL\r\n                        .addParameter(Constants.INTERFACE_KEY, RegistryService.class.getName()) // useless middle state URL\r\n                        .addParameter(Constants.CLUSTER_STICKY_KEY, \"true\") // useless middle state URL\r\n                        .addParameter(Constants.CALLBACK_INSTANCES_LIMIT_KEY, \"1000\") // useless middle state URL\r\n                        .addParameter(\"ondisconnect\", \"disconnect\") // useless middle state URL\r\n                        .addParameter(\"subscribe.1.callback\", \"true\") // useless middle state URL\r\n                        .addParameter(\"unsubscribe.1.callback\", \"false\")));\r\n```\r\n\r\nproduces 7 useless `URL` objects, and\r\n\r\n```java\r\nnew URLBuilder(\"dubbo\", NetUtils.getLocalHost(), port, RegistryService.class.getName())\r\n                        .setPath(RegistryService.class.getName())\r\n                        .addParameter(Constants.INTERFACE_KEY, RegistryService.class.getName())\r\n                        .addParameter(Constants.CLUSTER_STICKY_KEY, \"true\")\r\n                        .addParameter(Constants.CALLBACK_INSTANCES_LIMIT_KEY, \"1000\")\r\n                        .addParameter(\"ondisconnect\", \"disconnect\")\r\n                        .addParameter(\"subscribe.1.callback\", \"true\")\r\n                        .addParameter(\"unsubscribe.1.callback\", \"false\")\r\n                        .build()));\r\n```\r\n\r\nleverages the same `URLBuilder` object and finally got the `URL` wanted.\r\n\r\nIf it's not clear for you to understand my point, consider the `URLBuilder` implementation as follows:\r\n\r\n```java\r\n\r\npublic final class URLBuilder {\r\n    private String protocol;\r\n\r\n    private String username;\r\n\r\n    private String password;\r\n\r\n    // by default, host to registry\r\n    private String host;\r\n\r\n    // by default, port to registry\r\n    private int port;\r\n\r\n    private String path;\r\n\r\n    private Map<String, String> parameters;\r\n\r\n    public URLBuilder() {\r\n        protocol = null;\r\n        username = null;\r\n        password = null;\r\n        host = null;\r\n        port = 0;\r\n        path = null;\r\n        parameters = new HashMap<>();\r\n    }\r\n\r\n    public URL build() {\r\n        if (StringUtils.isEmpty(username) && StringUtils.isNotEmpty(password)) {\r\n            throw new IllegalArgumentException(\"Invalid url, password without username!\");\r\n        }\r\n        port = port < 0 ? 0 : port;\r\n        // trim the leading \"/\"\r\n        int firstNonSlash = 0;\r\n        if (path != null) {\r\n            while (firstNonSlash < path.length() && path.charAt(firstNonSlash) == '/') {\r\n                firstNonSlash++;\r\n            }\r\n            if (firstNonSlash >= path.length()) {\r\n                path = \"\";\r\n            } else if (firstNonSlash > 0) {\r\n                path = path.substring(firstNonSlash);\r\n            }\r\n        }\r\n        return new URL(protocol, username, password, host, port, path, parameters);\r\n    }\r\n\r\n\r\n    public URLBuilder setProtocol(String protocol) {\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder setUsername(String username) {\r\n        this.username = username;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder setPassword(String password) {\r\n        this.password = password;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder setHost(String host) {\r\n        this.host = host;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder setPort(int port) {\r\n        this.port = port;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder setAddress(String address) {\r\n        int i = address.lastIndexOf(':');\r\n        String host;\r\n        int port = this.port;\r\n        if (i >= 0) {\r\n            host = address.substring(0, i);\r\n            port = Integer.parseInt(address.substring(i + 1));\r\n        } else {\r\n            host = address;\r\n        }\r\n        this.host = host;\r\n        this.port = port;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder setPath(String path) {\r\n        this.path = path;\r\n        return this;\r\n    }\r\n\r\n    public URLBuilder addParameterAndEncoded(String key, String value) {\r\n        if (StringUtils.isEmpty(value)) {\r\n            return this;\r\n        }\r\n        return addParameter(key, URL.encode(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, boolean value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, char value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, byte value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, short value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, int value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, long value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, float value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, double value) {\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, Enum<?> value) {\r\n        if (value == null) {\r\n            return this;\r\n        }\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, Number value) {\r\n        if (value == null) {\r\n            return this;\r\n        }\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n    public URLBuilder addParameter(String key, CharSequence value) {\r\n        if (value == null || value.length() == 0) {\r\n            return this;\r\n        }\r\n        return addParameter(key, String.valueOf(value));\r\n    }\r\n\r\n// AND MORE METHODS\r\n```",
        "Great, looking forward to URLBuilder being available soon.",
        "@chickenlj FYI, I've opened a PR #3500 to fix this issue",
        "Cool, I am on it.",
        "I've started a thread discussing this feature on the mailing list. "
    ],
    "1333": [],
    "1575": [],
    "4205": [],
    "4197": [],
    "2759": [],
    "782": [],
    "2932": [],
    "3603": [],
    "3514": [
        "Yes, it's missed. \r\nFor 2.7.0, please add `dubbo-metadata-redis` dependency to solve this problem."
    ],
    "3693": [],
    "3518": [
        "I believe exchanger was accidentally checked in here, we should remove it or change to dispatcher.",
        "> I believe exchanger was accidentally checked in here, we should remove it or change to dispatcher.\r\n\r\nWell,I think it's an accidentally,too.Could I commit a pr to fix it?",
        "Please feel free to submit."
    ],
    "5371": [],
    "2893": [],
    "5422": [],
    "3533": [],
    "3537": [
        "\u770b\u8d77\u6765\u662f dubbox \u4e0e dubbo \u4e4b\u95f4\u534f\u8bae\u4e0d\u517c\u5bb9\u7684\u95ee\u9898\u3002",
        "\u9047\u4e0a\u540c\u6837\u95ee\u9898, \u4f7f\u7528dubbo2.6.5\u4e5f\u662f\u4e0d\u884c,  \u5e8f\u5217\u5316\u4f7f\u7528\u7684\u662fhessian2",
        "\u5efa\u8bae\u4e5f\u53ef\u53bbdubbox\u54a8\u8be2\u3002",
        "Sadly, these two branches have been proved to have compatible problems working with each other.",
        "\u6700\u7ec8\u4fee\u6539dubbox\u7684com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult#decode(com.alibaba.dubbo.remoting.Channel, java.io.InputStream)\r\n\u8ba9\u5b83\u652f\u6301\u534f\u8bae\u4e2d\u8fd4\u56de\u76843\u30014\u30015\r\n\r\n`/*\r\n * Copyright 1999-2011 Alibaba Group.\r\n *\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n *  you may not use this file except in compliance with the License.\r\n *  You may obtain a copy of the License at\r\n *\r\n *       http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *  See the License for the specific language governing permissions and\r\n *  limitations under the License.\r\n */\r\n\r\npackage com.alibaba.dubbo.rpc.protocol.dubbo;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.lang.reflect.Type;\r\nimport java.util.Map;\r\n\r\nimport com.alibaba.dubbo.common.logger.Logger;\r\nimport com.alibaba.dubbo.common.logger.LoggerFactory;\r\nimport com.alibaba.dubbo.common.serialize.Cleanable;\r\nimport com.alibaba.dubbo.common.serialize.ObjectInput;\r\nimport com.alibaba.dubbo.common.utils.Assert;\r\nimport com.alibaba.dubbo.common.utils.StringUtils;\r\nimport com.alibaba.dubbo.remoting.Channel;\r\nimport com.alibaba.dubbo.remoting.Codec;\r\nimport com.alibaba.dubbo.remoting.Decodeable;\r\nimport com.alibaba.dubbo.remoting.exchange.Response;\r\nimport com.alibaba.dubbo.remoting.transport.CodecSupport;\r\nimport com.alibaba.dubbo.rpc.Invocation;\r\nimport com.alibaba.dubbo.rpc.RpcResult;\r\nimport com.alibaba.dubbo.rpc.support.RpcUtils;\r\n\r\nimport javax.annotation.Resource;\r\n\r\n/**\r\n * @author <a href=\"mailto:gang.lvg@alibaba-inc.com\">kimi</a>\r\n */\r\npublic class DecodeableRpcResult extends RpcResult implements Codec, Decodeable {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(DecodeableRpcResult.class);\r\n\r\n    private Channel     channel;\r\n\r\n    private byte        serializationType;\r\n\r\n    private InputStream inputStream;\r\n\r\n    private Response    response;\r\n\r\n    private Invocation  invocation;\r\n\r\n    private volatile boolean hasDecoded;\r\n\r\n    public DecodeableRpcResult(Channel channel, Response response, InputStream is, Invocation invocation, byte id) {\r\n        Assert.notNull(channel, \"channel == null\");\r\n        Assert.notNull(response, \"response == null\");\r\n        Assert.notNull(is, \"inputStream == null\");\r\n        this.channel = channel;\r\n        this.response = response;\r\n        this.inputStream = is;\r\n        this.invocation = invocation;\r\n        this.serializationType = id;\r\n    }\r\n\r\n    @Override\r\n    public void encode(Channel channel, OutputStream output, Object message) throws IOException {\r\n        throw new UnsupportedOperationException();\r\n    }\r\n\r\n    @Override\r\n    public Object decode(Channel channel, InputStream input) throws IOException {\r\n        ObjectInput in = CodecSupport.getSerialization(channel.getUrl(), serializationType)\r\n            .deserialize(channel.getUrl(), input);\r\n\r\n        try {\r\n            byte flag = in.readByte();\r\n            switch (flag) {\r\n                case DubboCodec.RESPONSE_NULL_VALUE:\r\n                    break;\r\n                case DubboCodec.RESPONSE_VALUE:\r\n                    handleValue(in);\r\n                    break;\r\n                case DubboCodec.RESPONSE_WITH_EXCEPTION:\r\n                    handleException(in);\r\n                    break;\r\n                case DubboCodec.RESPONSE_NULL_VALUE_WITH_ATTACHMENTS:\r\n                    handleAttachment(in);\r\n                    break;\r\n                case DubboCodec.RESPONSE_VALUE_WITH_ATTACHMENTS:\r\n                    handleValue(in);\r\n                    handleAttachment(in);\r\n                    break;\r\n                case DubboCodec.RESPONSE_WITH_EXCEPTION_WITH_ATTACHMENTS:\r\n                    handleException(in);\r\n                    handleAttachment(in);\r\n                    break;\r\n                default:\r\n                    throw new IOException(\"Unknown result flag, expect '0' '1' '2', get \" + flag);\r\n            }\r\n            return this;\r\n        } finally {\r\n            // modified by lishen\r\n            if (in instanceof Cleanable) {\r\n                ((Cleanable) in).cleanup();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void decode() throws Exception {\r\n        if (!hasDecoded && channel != null && inputStream != null) {\r\n            try {\r\n                decode(channel, inputStream);\r\n            } catch (Throwable e) {\r\n                if (log.isWarnEnabled()) {\r\n                    log.warn(\"Decode rpc result failed: \" + e.getMessage(), e);\r\n                }\r\n                response.setStatus(Response.CLIENT_ERROR);\r\n                response.setErrorMessage(StringUtils.toString(e));\r\n            } finally {\r\n                hasDecoded = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void handleValue(ObjectInput in) throws IOException {\r\n        try {\r\n            Type[] returnTypes = RpcUtils.getReturnTypes(invocation);\r\n            Object value = null;\r\n            if (returnTypes == null || returnTypes.length == 0) {\r\n                value = in.readObject();\r\n            } else if (returnTypes.length == 1) {\r\n                value = in.readObject((Class<?>) returnTypes[0]);\r\n            } else {\r\n                value = in.readObject((Class<?>) returnTypes[0], returnTypes[1]);\r\n            }\r\n            setValue(value);\r\n        } catch (ClassNotFoundException e) {\r\n            rethrow(e);\r\n        }\r\n    }\r\n\r\n    private void handleException(ObjectInput in) throws IOException {\r\n        try {\r\n            Object obj = in.readObject();\r\n            if (!(obj instanceof Throwable)) {\r\n                throw new IOException(\"Response data error, expect Throwable, but get \" + obj);\r\n            }\r\n            setException((Throwable) obj);\r\n        } catch (ClassNotFoundException e) {\r\n            rethrow(e);\r\n        }\r\n    }\r\n\r\n    private void handleAttachment(ObjectInput in) throws IOException {\r\n        try {\r\n            setAttachments((Map<String, String>) in.readObject(Map.class));\r\n        } catch (ClassNotFoundException e) {\r\n            rethrow(e);\r\n        }\r\n    }\r\n\r\n    private void rethrow(Exception e) throws IOException {\r\n        throw new IOException(StringUtils.toString(\"Read response data failed.\", e));\r\n    }\r\n}\r\n`",
        "Dubbox was released with version 2.8.x, which is higher than the latest official version. We simply consider any version higher than 2.6.x can recognize the newly added response numbers and did not consider 2.8.x into account.\r\n\r\nI think it's worth discuss in the next version about to keep compatibility with dubbox or not.",
        "\u6211\u4eec\u90e8\u5206\u670d\u52a1\u7528\u7684 dubbo-2.6.0 \u90e8\u5206\u670d\u52a1\u7528\u7684 dubbox-2.8.4 \u76ee\u524d\u770b\u6765\u76f8\u4e92\u8c03\u7528\u65f6\u6ca1\u95ee\u9898\u7684  hessian\u534f\u8bae",
        "dubbox-2.8.x \u662f\u4ece alibaba dubbo-2.5.4 \u7684\u57fa\u7840\u4e0a\u6269\u5c55\u51fa\u6765\u7684",
        "Use spi extension replace Codec Official implementation\r\nIf dubbo fix the bug of codec,use spi extension and provider config replace default implementation\r\nSee what i am said in the issue https://github.com/apache/dubbo/pull/3996"
    ],
    "4534": [],
    "407": [],
    "1705": [],
    "2457": [],
    "3555": [
        "It works fine for me on the master branch. Could you pls provide a demo to reproduce this issue.",
        "download project https://github.com/apache/incubator-dubbo-samples\r\nIN dubbo-samples-generic-call\r\ncase1: start GenericCallProvider,start GenericCallConsumer. result ok\r\ncase2: start Provider,change consumer to direct call like:\r\n```\r\n ApplicationConfig applicationConfig = new ApplicationConfig();\r\n        applicationConfig.setName(\"generic-call-consumer\");\r\n\r\n        ReferenceConfig<GenericService> referenceConfig = new ReferenceConfig<>();\r\n        referenceConfig.setInterface(\"org.apache.dubbo.samples.generic.call.api.HelloService\");\r\n        referenceConfig.setUrl(\"dubbo://127.0.0.1:20880\");\r\n        referenceConfig.setApplication(applicationConfig);\r\n        referenceConfig.setGeneric(true);\r\n        referenceConfig.setGroup(\"1.0.0\");\r\n        GenericService genericService = referenceConfig.get();\r\n        Object result = genericService.$invoke(\"sayHello\", new String[]{\"java.lang.String\"}, new Object[]{\"world\"});\r\n        System.out.println(\"....\" + result);\r\n```\r\nresult OK!.  group is mismatch in fact\r\ncase 3: change generic-provider.xml,add group=\"1.0.0\" to dubbo:service.start provider.\r\nstart generic direct consumer in case 2, result error : Not found exported service\r\n",
        "Thanks, I have reproduced this issue and I'll take a look at this problem latter."
    ],
    "4722": [],
    "2923": [],
    "3336": [],
    "4840": [],
    "2763": [],
    "1021": [],
    "3570": [
        "I think change the compatible as showed below may work:\r\n```java\r\n@Deprecated\r\npublic interface Invoker<T> extends org.apache.dubbo.rpc.Invoker<T> {\r\n\r\n    Result invoke(Invocation invocation) throws RpcException;\r\n\r\n    URL getUrl();\r\n\r\n    default org.apache.dubbo.rpc.Invoker<T> getOriginal() {\r\n        return null;\r\n    }\r\n\r\n    class CompatibleInvoker<T> implements Invoker<T> {\r\n\r\n        private org.apache.dubbo.rpc.Invoker<T> invoker;\r\n\r\n        public CompatibleInvoker(org.apache.dubbo.rpc.Invoker<T> invoker) {\r\n            this.invoker = invoker;\r\n        }\r\n\r\n        @Override\r\n        public Class<T> getInterface() {\r\n            return invoker.getInterface();\r\n        }\r\n\r\n        @Override\r\n        public org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation invocation) throws org.apache.dubbo.rpc.RpcException {\r\n            return invoker.invoke(invocation);\r\n        }\r\n\r\n        @Override\r\n        public Result invoke(Invocation invocation) throws RpcException {\r\n            return new Result.CompatibleResult(invoker.invoke(invocation.getOriginal()));\r\n        }\r\n\r\n        @Override\r\n        public URL getUrl() {\r\n            return new URL(invoker.getUrl());\r\n        }\r\n\r\n        @Override\r\n        public boolean isAvailable() {\r\n            return invoker.isAvailable();\r\n        }\r\n\r\n        @Override\r\n        public void destroy() {\r\n            invoker.destroy();\r\n        }\r\n\r\n        @Override\r\n        public org.apache.dubbo.rpc.Invoker<T> getOriginal() {\r\n            return invoker;\r\n        }\r\n    }\r\n}\r\n```",
        "@chickenlj \r\nI remain the interface:\r\n```java\r\n@Override\r\nResult invoke(org.apache.dubbo.rpc.Invocation invocation) throws RpcException;\r\n```\r\nThe remain code are almost same as yours\uff0cit works.\r\n\r\nAs the `URL getUrl();` method is in parent `Node` interface,\r\nin this way many interface need modify to be compatible, \r\nsuch as `Invoker`\u3001`RpcContext` and so on, since user may invoke in their custorm Filter,\r\ne.g. user may call `RpcContext.getContext.setAttachment`.\r\n\r\n```java\r\npublic static RpcContext getContext() {\r\n    return LOCAL.get();\r\n}\r\n```\r\nAs the getContext is a static method, haven't found a good way to do it yet.\r\n\r\n\r\n",
        "> As the `URL getUrl();` method is in parent `Node` interface,\r\nin this way many interface need modify to be compatible,\r\n\r\n1. Why would `getUrl()` in other place need to be modified? I think keep compatibility as needed would be enough, for those popular SPI extensions, such as Filter, Invoker, Result, ...\r\n\r\n>user may call `RpcContext.getContext.setAttachment`.\r\n2. Agree, compatible `com.alibaba.dubbo.common.RpcContext` now is not enough to guarantee comaptibility. \r\n"
    ],
    "3573": [
        "Could you pull a request for it? :D ",
        "we should remove dubbo-test completely from the main trunk."
    ],
    "2248": [],
    "593": [],
    "2564": [],
    "3582": [],
    "4383": [],
    "3030": [],
    "4901": [],
    "3430": [],
    "4146": [],
    "3598": [
        "check all collections in monitorFilter, move them to metricsFilter"
    ],
    "3599": [
        "relate to #3599.",
        "Why you are linking to the same issue? Typo?",
        "Sorry, I mean this one https://github.com/apache/incubator-dubbo/issues/3084",
        "duplicate of #4066 "
    ],
    "5126": [],
    "3273": [],
    "5271": [],
    "2357": [],
    "2387": [],
    "2440": [],
    "4955": [],
    "3433": [],
    "3615": [
        "\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u7528spring boot\uff0c\u7136\u540e\u4f7f\u7528import dubbo xml\u65b9\u5f0f\u4e5f\u662f\u6709\u8fd9\u4e2a\u95ee\u9898\u3002",
        "\u8fd9\u4e2a\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff0c2.7.1\uff0cspring:UNKOWN\r\n` // [Issue] SpringStatusChecker execute errors on non-XML Spring configuration\r\n            // issue : https://github.com/apache/incubator-dubbo/issues/3615\r\n            if(c instanceof GenericWebApplicationContext) { // ignore GenericXmlApplicationContext\r\n                continue;\r\n            }`\r\nc\u662f\u4e00\u4e2aGenericWebApplicationContext\u4f46\u88ab\u5ffd\u7565\u4e86\uff0c\u53f3\u4fa7\u7684\u6ce8\u91ca\u662f\u8bf4\u5ffd\u7565GenericXmlApplicationContext\uff1f"
    ],
    "3437": [],
    "4767": [],
    "2186": [],
    "3620": [
        "Can you pls provide a demo to reproduce the problem ?",
        "Thanks for reporting, I can reproduce from the official sample  'dubbo-samples-async-original-future',  will try to figure it out.",
        "I find this problem also exists in sync mode. It is because the code following:\r\nContextFilter.java\r\n![image](https://user-images.githubusercontent.com/3047563/54224548-b5124480-4534-11e9-97e4-f3f12af623c5.png)\r\nThe ContextFilter will remove ServerContext after invoke. So the attachments are removed.\r\n",
        "> The ContextFilter will remove ServerContext after invoke. So the attachments are removed.\r\n\r\nare you sure about this ? i don't think so . invoker.invoke returns AyncRpcResult first. then RpcContext clear it's context . ",
        "@lizanle521 You can debug it",
        "@tswstarplanet yes,i did it yesterday . and i doubted it also .but it is not the cause . \r\nas i said bebore, before RpcContext.removeContext , invoker.invoke return a AsyncRpcResult  object. \r\nthat object hold a copy of serverConext . \r\n\r\n",
        "sorry, I didn't intend to edit your reply, it is a misoperation",
        "I just test the sync invoke"
    ],
    "4023": [],
    "4142": [],
    "3048": [],
    "5020": [],
    "3625": [
        "I can fix this.",
        "Cool, please go ahead and send pull request."
    ],
    "3629": [
        "sure this exception is misleading,do you have any idea to improve this?",
        "@kexianjun\r\n\r\nI do have some ideas after reviewing the source code of `ServiceConfig`.\r\n\r\nFirst, the existing implementation by using two variables for controlling `ServiceConfig` exporting state is not only awkward to code, but also can theoretically lead invalid state transitions (`exported` and `export` both simultaneously true or false).\r\n\r\nSecondly, the `exported` is set in `doExport()` method which could be called asynchronously, this makes it hard to refactor to prevent duplication exporting. \r\n\r\nOkay, there's not \"last but not least\".\r\n\r\nI'll suggest to introduce the following changes:\r\n\r\n1. refactor the two variables aforementioned into one `AtomicInteger` variable.\r\n2. `compare and set` exporting state in `export()` and `unexport()` methods **before doing anything**.\r\n3. it's obviously to see that we can now safely remove the `synchronized` from the two methods.\r\n\r\n",
        "> @kexianjun\r\n> \r\n> I do have some ideas after reviewing the source code of `ServiceConfig`.\r\n> \r\n> First, the existing implementation by using two variables for controlling `ServiceConfig` exporting state is not only awkward to code, but also can theoretically lead invalid state transitions (`exported` and `export` both simultaneously true or false).\r\n> \r\n> Secondly, the `exported` is set in `doExport()` method which could be called asynchronously, this makes it hard to refactor to prevent duplication exporting.\r\n> \r\n> Okay, there's not \"last but not least\".\r\n> \r\n> I'll suggest to introduce the following changes:\r\n> \r\n> 1. refactor the two variables aforementioned into one `AtomicInteger` variable.\r\n> 2. `compare and set` exporting state in `export()` and `unexport()` methods **before doing anything**.\r\n> 3. it's obviously to see that we can now safely remove the `synchronized` from the two methods.\r\n\r\ncould you pls send a pr about your suggestion?",
        "I'll try to work out a PR for this issue this evening. @kexianjun ",
        "I think PR 3629 doesn't catch the reason. I submit a new pr for the problem."
    ],
    "4761": [],
    "1395": [],
    "4302": [],
    "3640": [
        "I try to reproduce the problem, but it fails. Can you provide a demo project ?",
        "> I try to reproduce the problem, but it fails. Can you provide a demo project ?\r\n\r\n\r\nI looked at this problem. It really exists. It should be a bug in hessian-lite. Let me fix it.",
        "> > I try to reproduce the problem, but it fails. Can you provide a demo project ?\r\n> \r\n> I looked at this problem. It really exists. It should be a bug in hessian-lite. Let me fix it.\r\n@CrazyHZM \r\n\u54e5\u4eec\uff0c\u4f60\u4e4b\u524d\u7684\u4fee\u590d\u601d\u8def\u4e0d\u592a\u5bf9\u554a~~~\uff0c\u9ebb\u70e6\u5e2e\u5fd9\u770b\u770b\u8fd9\u4e2a\uff1f[https://github.com/dubbo/hessian-lite/pull/11](https://github.com/dubbo/hessian-lite/pull/11)"
    ],
    "3646": [],
    "2699": [],
    "2823": [],
    "3650": [
        "This is a normal result.\r\nThe asynchronous side of the server should of course not affect the client.\r\n\r\nI don't think this is a problem. Do u have any questions about it?",
        "Once provider upgrade to 2.7.0, invoke be changed from async to sync, that means client cannot get result from context future. \r\n\r\nAlso, what will the async config for in provider side?",
        "`Once provider upgrade to 2.7.0, invoke be changed from async to sync`\r\n\r\nI don't get your point..  Why does upgrading to 2.7 change from synchronous to asynchronous?\r\n\r\n`Also, what will the async config for in provider side?`\r\n\r\n`<dubbo:service interface=\"...\" async=\"true\">` is enough",
        "Provider 2.5.x, consumer 2.5.x, provider specific async, consumer keeps default. \r\n<dubbo:service interface=\"...\" async=\"true\">\r\n<dubbo:reference interface=\"...\">\r\n\r\nFor consumer, they have to get value from RpcContext.\r\nclient.sayHello() returns null.\r\nRpcContext.getContext.getFuture() returns value.\r\n\r\nProvider 2.7.0, consumer 2.5.x, provider speicif async, consumer keeps default.\r\n<dubbo:service interface=\"...\" async=\"true\">\r\n<dubbo:reference interface=\"...\">\r\n\r\nFor consumer, the value form RpcContext is null, this is incompatible.\r\nclient.sayHello() returns value.\r\nRpcContext.getContext.getFuture() returns null.\r\n\r\n",
        "Got it.\r\n\r\nIn the new version (2.7.x), the asynchronous of the provider and consumer is isolated. However, in the old version, consumer asynchronous and provider asynchronous are still bound.\r\n\r\nIs this situation considered? @chickenlj  Maybe it is a problem that we need to fix.",
        "Is provider async redundancy as we are able to return CompletableFuture? \r\n\r\nIt's sync for provider.\r\nString sayHello(String msg);\r\n\r\nIt's async for provider.\r\nCompletable<String> sayHello(String msg);"
    ],
    "4436": [],
    "4592": [],
    "3657": [
        "This issue has been fixed."
    ],
    "3504": [],
    "4425": [],
    "1612": [],
    "3601": [],
    "4945": [],
    "2892": [],
    "2032": [],
    "4746": [],
    "2889": [],
    "3568": [],
    "3684": [],
    "1569": [],
    "3695": [
        "I'll try to reproduce this problem",
        "I have reproduce this issue",
        "@mercyblitz  can you have a look to this issue ?",
        "This's an issue in 2.6.6"
    ],
    "3698": [
        "\u6700\u540e\u600e\u4e48\u89e3\u51b3\u7684\u5462",
        "2.6.5\u4e4b\u540e\u7684\u6240\u6709\u7248\u672c\uff0cserialization\u4f7f\u7528java\u65f6\u5747\u53ef\u590d\u73b0\u6b64\u95ee\u9898",
        "we meet this problem too\u2026\u2026",
        "java.io.StreamCorruptedException: invalid stream header: 322E352E\r\n\tat java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:804)\r\n\tat java.io.ObjectInputStream.<init>(ObjectInputStream.java:299)\r\n\tat com.alibaba.dubbo.common.serialize.java.JavaObjectInput.<init>(JavaObjectInput.java:33)\r\n\tat com.alibaba.dubbo.common.serialize.java.JavaSerialization.deserialize(JavaSerialization.java:47)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation.decode(DecodeableRpcInvocation.java:90)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation.decode(DecodeableRpcInvocation.java:70)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboCodec.decodeBody(DubboCodec.java:131)\r\n\tat com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:125)\r\n\tat com.alibaba.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:85)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboCountCodec.decode(DubboCountCodec.java:46)\r\n\tat com.alibaba.dubbo.remoting.transport.netty4.NettyCodecAdapter$InternalDecoder.decode(NettyCodecAdapter.java:95)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
        "dup of #3951"
    ],
    "3110": [],
    "4939": [],
    "3708": [
        "I am sorry that I made a mistaken link to a irrelative PR. "
    ],
    "3713": [],
    "570": [],
    "3108": [],
    "2133": [],
    "3721": [
        "i'd like to fix it, pls assign it to me",
        "> i'd like to fix it, pls assign it to me\r\n\r\n\r\nPlease feel free to submit",
        "we should have maven plugin to do this check?\r\ndo we have any configuration issue for that plugin?",
        "Now rat plugin can check the asf header , but some file type is excluded. @beiwei30, can you please point out the file type check list ?"
    ],
    "3455": [],
    "3727": [
        "\u5806\u6808\u4fe1\u606f\r\n```java\r\n2019-03-25 14:15:23.279  WARN [-,,,] 10982 --- [20860-thread-64] o.a.d.r.exchange.support.DefaultFuture   :  [DUBBO] The timeout response finally returned at 2019-03-25 14:15:23.276, response Response [id=165, version=2.0.2, status=40, event=false, error=io.netty.handler.codec.EncoderException: java.lang.NullPointerException\r\nio.netty.handler.codec.EncoderException: java.lang.NullPointerException\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:125)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.handler.timeout.IdleStateHandler.write(IdleStateHandler.java:304)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.channel.ChannelDuplexHandler.write(ChannelDuplexHandler.java:106)\r\n\tat org.apache.dubbo.remoting.transport.netty4.NettyClientHandler.write(NettyClientHandler.java:87)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:801)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:814)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:794)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:837)\r\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1036)\r\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:304)\r\n\tat org.apache.dubbo.remoting.transport.netty4.NettyChannel.send(NettyChannel.java:101)\r\n\tat org.apache.dubbo.remoting.transport.AbstractPeer.send(AbstractPeer.java:53)\r\n\tat org.apache.dubbo.remoting.transport.netty4.NettyClientHandler.userEventTriggered(NettyClientHandler.java:126)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:329)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:315)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:307)\r\n\tat io.netty.handler.timeout.IdleStateHandler.channelIdle(IdleStateHandler.java:371)\r\n\tat io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:494)\r\n\tat io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:466)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:127)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.dubbo.common.serialize.protostuff.utils.WrapperUtils.needWrapper(WrapperUtils.java:105)\r\n\tat org.apache.dubbo.common.serialize.protostuff.ProtostuffObjectOutput.writeObject(ProtostuffObjectOutput.java:50)\r\n\tat org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.encodeEventData(ExchangeCodec.java:381)\r\n\tat org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.encodeEventData(ExchangeCodec.java:437)\r\n\tat org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.encodeRequest(ExchangeCodec.java:236)\r\n\tat org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.encode(ExchangeCodec.java:69)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboCountCodec.encode(DubboCountCodec.java:38)\r\n\tat org.apache.dubbo.remoting.transport.netty4.NettyCodecAdapter$InternalEncoder.encode(NettyCodecAdapter.java:70)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107)\r\n\t... 36 more\r\n, result=null], channel: /192.168.200.232:64308 -> /192.168.200.232:20860, dubbo version: 2.7.1-SNAPSHOT, current host: 192.168.200.232\r\n```",
        " \u662f\u7684\uff0c\u8fd9\u91cc\u5e94\u8be5\u6709\u5224\u7a7a\u5904\u7406\u3002",
        "Could you please send a pull request?",
        " #3734"
    ],
    "3728": [
        "skywalking\u6682\u65f6\u4e0d\u7528\u505a\u517c\u5bb9\uff1a\r\n![image](https://user-images.githubusercontent.com/4089452/59676559-6989c980-91fa-11e9-98e0-084373f9a12f.png)\r\n"
    ],
    "4539": [],
    "4048": [],
    "791": [],
    "3744": [],
    "2203": [],
    "3746": [
        "\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u63d0\u4ea4\u4e0a\u53bb\uff1f\u73b0\u5728\u7ebf\u4e0a\u90fd\u662f\u8fd9\u4e48\u6b7b\u5faa\u73af\u3002"
    ],
    "2934": [],
    "2271": [],
    "2432": [],
    "3786": [],
    "3761": [
        "Can you describe it in detail? Because I checked the README.md file of the project, there is no such image.",
        "![image](https://user-images.githubusercontent.com/16064908/55145168-385ea780-517d-11e9-9b6d-20f64aecddec.png)\r\n",
        "Could you pull request to fix it?"
    ],
    "3764": [
        "Should I add as a dependency in dubbo-all, right? I did it and I changed the name of the package for org.apache.dubbo (previously was io.github.kimmking) but there's no snapshot in https://repository.apache.org/content/groups/snapshots/org/apache/dubbo/ and this is why the build is failing.\r\n\r\nCan u help me?\r\n",
        "What is the exact error you got?",
        "The error was:\r\n\r\n> Could not resolve dependencies for project org.apache.dubbo:dubbo:jar:2.7.2-SNAPSHOT: Failure to find org.apache.dubbo:dubbo-rpc-xmlrpc:jar:2.7.2-SNAPSHOT in https://repository.apache.org/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of apache.snapshots has elapsed or updates are forced\r\n\r\nI made a lot of confusion, I was needed:\r\n- rename packages from \"com.alibaba\" to \"org.apache\"\r\n- add xmlrpc as a module in pom.xml of dubbo-rpc \r\n\r\nI fixed it. Could u please review my PR? I'm not sure if everything is ok",
        "This will be available from 2.7.2 onwards."
    ],
    "4077": [],
    "3765": [
        "I`m working on fixing the units tests  "
    ],
    "3495": [],
    "2367": [],
    "3735": [],
    "3790": [
        "jcip-annotations: https://github.com/stephenc/jcip-annotations/blob/master/LICENSE.txt\r\njsr173_api:http://svn.apache.org/repos/asf/beehive/trunk/LICENSE.jsr173-api"
    ],
    "3797": [
        "Please add the maven dependency separately:\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>org.apache.dubbo</groupId>\r\n  <artifactId>dubbo-registry-nacos</artifactId>\r\n  <version>2.7.1</version>\r\n</dependency>\r\n```"
    ],
    "4758": [],
    "5029": [],
    "3547": [],
    "4490": [],
    "2415": [],
    "1031": [],
    "5097": [],
    "110": [],
    "3817": [
        "I posted a survey https://github.com/apache/incubator-dubbo/issues/2886 .\n\nI think i will recheck this issue and provide cluster support in this week.\n\nwuhulala <notifications@github.com> \u4e8e2019\u5e744\u67087\u65e5\u5468\u65e5 \u4e0a\u534811:49\u5199\u9053\uff1a\n\n>\n>    - I have searched the issues\n>    <https://github.com/apache/incubator-dubbo/issues> of this repository\n>    and believe that this is not a duplicate.\n>    - I have checked the FAQ\n>    <https://github.com/apache/incubator-dubbo/blob/master/FAQ.md> of this\n>    repository and believe that this is not a duplicate.\n>\n> Environment\n>\n>    - Dubbo version: 2.7.2-SNAPSHOT\n>    - Operating System version: windows1\n>    - Java version: 1.8\n>\n> Steps to reproduce this issue\n>\n> public class RedisMetadataReport extends AbstractMetadataReport {\n>\n>\n>\n>     private final static Logger logger = LoggerFactory.getLogger(RedisMetadataReport.class);\n>\n>\n>\n>     final JedisPool pool;\n>\n>\n>\n>     public RedisMetadataReport(URL url) {\n>\n>         super(url);\n>\n>         pool = new JedisPool(new JedisPoolConfig(), url.getHost(), url.getPort());\n>\n>     }\n>\n> }\n>\n> I see the construct method used JedisPool,\n> *if cluster \uff0chow should do\uff1f*\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/incubator-dubbo/issues/3817>, or mute the\n> thread\n> <https://github.com/notifications/unsubscribe-auth/AD5mbNImGGIEGiQNtBgr6sio_GGnrkWoks5veWrIgaJpZM4cgi2d>\n> .\n>\n\n\n-- \n\nBest Regard!\ncvitory\n"
    ],
    "3096": [],
    "3157": [],
    "4322": [],
    "5556": [],
    "5177": [],
    "327": [],
    "3282": [],
    "4998": [],
    "2709": [],
    "2607": [],
    "3848": [],
    "58": [],
    "3639": [],
    "3861": [
        "\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u534f\u8bae\u7684\u6cdb\u5316\u8c03\u7528\uff0c\u6211\u6765\u590d\u73b0\u4e00\u4e0b\u770b\u770b",
        "\u5b83\u5176\u5b9e\u4e0d\u662f\u6cdb\u5316\u7684\u95ee\u9898\uff0c\u800c\u662f\u5e8f\u5217\u5316\u7684\u95ee\u9898\uff0c\u4f60\u5e94\u8be5\u7528\u7684\u662fhessian\u5e8f\u5217\u5316\u5427\uff0chessian\u5e8f\u5217\u5316\u4f1a\u5728\u628afloat\u7c7b\u578b\u6309\u7167double\u6765\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u6240\u4ee5\u4f1a\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u540e\u662fdouble\u7c7b\u578b\u7684\uff0c\u624d\u51fa\u73b0\u4f60\u7684\u95ee\u9898",
        "> \u5b83\u5176\u5b9e\u4e0d\u662f\u6cdb\u5316\u7684\u95ee\u9898\uff0c\u800c\u662f\u5e8f\u5217\u5316\u7684\u95ee\u9898\uff0c\u4f60\u5e94\u8be5\u7528\u7684\u662fhessian\u5e8f\u5217\u5316\u5427\uff0chessian\u5e8f\u5217\u5316\u4f1a\u5728\u628afloat\u7c7b\u578b\u6309\u7167double\u6765\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u6240\u4ee5\u4f1a\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u540e\u662fdouble\u7c7b\u578b\u7684\uff0c\u624d\u51fa\u73b0\u4f60\u7684\u95ee\u9898\r\n\r\n\u90a3\u610f\u601d\u662f\u8bf4\u5728\u4e0d\u4fee\u6539provider\u5e8f\u5217\u5316\u7684\u524d\u63d0\u4e0b\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u5b9a\u4f1a\u51fa\u73b0\u7684\u5417\uff1f",
        "> \u5b83\u5176\u5b9e\u4e0d\u662f\u6cdb\u5316\u7684\u95ee\u9898\uff0c\u800c\u662f\u5e8f\u5217\u5316\u7684\u95ee\u9898\uff0c\u4f60\u5e94\u8be5\u7528\u7684\u662fhessian\u5e8f\u5217\u5316\u5427\uff0chessian\u5e8f\u5217\u5316\u4f1a\u5728\u628afloat\u7c7b\u578b\u6309\u7167double\u6765\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u6240\u4ee5\u4f1a\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u540e\u662fdouble\u7c7b\u578b\u7684\uff0c\u624d\u51fa\u73b0\u4f60\u7684\u95ee\u9898\r\n\r\n\u90a3\u4e3a\u4ec0\u4e48\u5982\u679c\u662f\u901a\u8fc7Reference\u6ce8\u5165\u7684\u5f62\u5f0f\u8c03\u7528\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u901a\u8fc7\u6cdb\u5316\u8c03\u7528\u5c31\u4f1a\u51fa\u73b0\u5462",
        "\u4e5f\u662f\u4e00\u4e2aFloat\u7c7b\u578b\u5417\uff0c\u5982\u679c\u662f\u653e\u5728\u6570\u7ec4\u91cc\u9762\u7684\uff0c\u4f8b\u5982float[]\u7c7b\u578b\u7684\uff0c\u662f\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684"
    ],
    "3083": [],
    "1221": [],
    "3866": [
        "\u9047\u5230\u540c\u6837\u7684\u95ee\u9898",
        "\u540c\u95ee\uff0c\u5347\u964dcurator\u548czk\u7684\u7248\u672c\u4f9d\u7136\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898",
        "@ZM227 @yintiefu  can you try to in 2.7.2-SNAPSHOT?"
    ],
    "2280": [],
    "4300": [],
    "4289": [],
    "1003": [],
    "3823": [],
    "4448": [],
    "2356": [],
    "5562": [],
    "3303": [],
    "4026": [],
    "3882": [],
    "580": [],
    "1497": [],
    "3663": [],
    "2261": [],
    "4865": [],
    "932": [],
    "3142": [],
    "4995": [],
    "2168": [],
    "5307": [],
    "5164": [],
    "4472": [],
    "4095": [],
    "1890": [],
    "3914": [
        "#3915 ",
        "@CrazyHZM  @kexianjun "
    ],
    "4948": [],
    "4666": [],
    "3923": [
        "hi, could you tell me what configuration you declared for consul registry, I would like to help with it.",
        "I just open a pr which contains the integration test about consul registry. check this   https://github.com/apache/incubator-dubbo/pull/3906 \r\n\r\nIt seems when we covert healthService to URL, some services got a null meta variable, so NPE happens. I can solve it ASAP.",
        "@Moriadry Hi buddy, How's it going ",
        "> I just open a pr which contains the integration test about consul registry. check this #3906\r\n> \r\n> It seems when we covert healthService to URL, some services got a null meta variable, so NPE happens. I can solve it ASAP.\r\n\r\nyes, I check meta=null",
        "@byronzoz sorry for the delay reply, I'm just waiting for my integration test to be reviewed. I am trying to add a consul sample for Dubbo, to fix this bug, and to ensure we can use consul-registry well. https://github.com/apache/incubator-dubbo-samples/issues/73",
        "@byronzoz would you mind to take a look at my change #3931 which should solve this issue?",
        "I will check and give you a feedback later @beiwei30 ",
        "@beiwei30 @Moriadry NPE has been solved. It seems to have problems.\r\n\r\nprovider side: (service has started)\r\n```\r\n2019-04-26 14:27:11 main INFO org.apache.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:111):111  [DUBBO] The service ready on spring started. service: com.byronzoz.common.service.facade.SessionContentFacade, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:11 main WARN org.apache.dubbo.config.AbstractInterfaceConfig.checkMetadataReport(AbstractInterfaceConfig.java:226):226  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:22 main INFO org.apache.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:593):593  [DUBBO] Export dubbo service com.byronzoz.common.service.facade.SessionContentFacade to local registry, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:22 main INFO org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:537):537  [DUBBO] Export dubbo service com.byronzoz.common.service.facade.SessionContentFacade to url dubbo://3.0.1.130:20880/com.byronzoz.common.service.facade.SessionContentFacade?anyhost=true&application=provider&bean.name=com.byronzoz.common.service.facade.SessionContentFacade&bind.ip=3.0.1.130&bind.port=20880&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.SessionContentFacade&methods=sayHello&owner=byronzoz&pid=90822&qos.enable=false&register=true&release=2.7.1&revision=1.0&side=provider&timestamp=1556260041936, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:22 main INFO org.apache.dubbo.config.AbstractInterfaceConfig.checkMonitor(AbstractInterfaceConfig.java:198):198  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:22 main INFO org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:547):547  [DUBBO] Register dubbo service com.byronzoz.common.service.facade.SessionContentFacade url dubbo://3.0.1.130:20880/com.byronzoz.common.service.facade.SessionContentFacade?anyhost=true&application=provider&bean.name=com.byronzoz.common.service.facade.SessionContentFacade&bind.ip=3.0.1.130&bind.port=20880&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.SessionContentFacade&methods=sayHello&owner=byronzoz&pid=90822&qos.enable=false&register=true&release=2.7.1&revision=1.0&side=provider&timestamp=1556260041936 to registry registry://10.100.12.2:8500/org.apache.dubbo.registry.RegistryService?application=provider&dubbo=2.0.2&owner=byronzoz&pid=90822&qos.enable=false&registry=consul&release=2.7.1&timestamp=1556260031916, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:22 main INFO org.apache.dubbo.qos.protocol.QosProtocolWrapper.startQosServer(QosProtocolWrapper.java:89):89  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:32 main INFO org.apache.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65):65  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /3.0.1.130:20880, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:32 main INFO org.apache.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:261):261  [DUBBO] Register: dubbo://3.0.1.130:20880/com.byronzoz.common.service.facade.SessionContentFacade?anyhost=true&application=provider&bean.name=com.byronzoz.common.service.facade.SessionContentFacade&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.SessionContentFacade&methods=sayHello&owner=byronzoz&pid=90822&register=true&release=2.7.1&revision=1.0&side=provider&timestamp=1556260041936, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:27:32 main INFO org.apache.dubbo.container.Main.main(Main.java:90):90  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.7.1, current host: 3.0.1.130\r\n[2019-04-26 14:27:32] Dubbo service server started!\r\n```\r\n\r\nserver side: (also started)\r\n\r\n```\r\n2019-04-26 14:49:55 main INFO org.apache.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:111):111  [DUBBO] The service ready on spring started. service: com.byronzoz.common.service.facade.TestFacade, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:49:55 main WARN org.apache.dubbo.config.AbstractInterfaceConfig.checkMetadataReport(AbstractInterfaceConfig.java:226):226  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:50:06 main INFO org.apache.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:593):593  [DUBBO] Export dubbo service com.byronzoz.common.service.facade.TestFacade to local registry, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:50:06 main INFO org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:537):537  [DUBBO] Export dubbo service com.byronzoz.common.service.facade.TestFacade to url rest://3.0.1.130:8099/com.byronzoz.common.service.facade.TestFacade?anyhost=true&application=consumer&bean.name=com.byronzoz.common.service.facade.TestFacade&bind.ip=3.0.1.130&bind.port=8099&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.TestFacade&methods=call&owner=byronzoz&pid=96317&qos.enable=false&register=true&release=2.7.1&revision=1.0&server=tomcat&side=provider&timestamp=1556261405970, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:50:06 main INFO org.apache.dubbo.config.AbstractInterfaceConfig.checkMonitor(AbstractInterfaceConfig.java:198):198  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:50:06 main INFO org.apache.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:547):547  [DUBBO] Register dubbo service com.byronzoz.common.service.facade.TestFacade url rest://3.0.1.130:8099/com.byronzoz.common.service.facade.TestFacade?anyhost=true&application=consumer&bean.name=com.byronzoz.common.service.facade.TestFacade&bind.ip=3.0.1.130&bind.port=8099&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.TestFacade&methods=call&owner=byronzoz&pid=96317&qos.enable=false&register=true&release=2.7.1&revision=1.0&server=tomcat&side=provider&timestamp=1556261405970 to registry registry://10.100.12.2:8500/org.apache.dubbo.registry.RegistryService?application=consumer&dubbo=2.0.2&owner=byronzoz&pid=96317&qos.enable=false&registry=consul&release=2.7.1&timestamp=1556261395943, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:50:06 main INFO org.apache.dubbo.qos.protocol.QosProtocolWrapper.startQosServer(QosProtocolWrapper.java:89):89  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.1, current host: 3.0.1.130\r\nApr 26, 2019 2:50:06 PM org.apache.coyote.AbstractProtocol init\r\nINFO: Initializing ProtocolHandler [\"http-nio-8099\"]\r\nApr 26, 2019 2:50:06 PM org.apache.tomcat.util.net.NioSelectorPool getSharedSelector\r\nINFO: Using a shared selector for servlet write/read\r\nApr 26, 2019 2:50:06 PM org.apache.catalina.core.StandardService startInternal\r\nINFO: Starting service Tomcat\r\nApr 26, 2019 2:50:06 PM org.apache.catalina.core.StandardEngine startInternal\r\nINFO: Starting Servlet Engine: Apache Tomcat/8.0.11\r\nApr 26, 2019 2:50:06 PM org.apache.coyote.AbstractProtocol start\r\nINFO: Starting ProtocolHandler [\"http-nio-8099\"]\r\n2019-04-26 14:50:07 main INFO org.apache.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:261):261  [DUBBO] Register: rest://3.0.1.130:8099/com.byronzoz.common.service.facade.TestFacade?anyhost=true&application=consumer&bean.name=com.byronzoz.common.service.facade.TestFacade&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.TestFacade&methods=call&owner=byronzoz&pid=96317&register=true&release=2.7.1&revision=1.0&server=tomcat&side=provider&timestamp=1556261405970, dubbo version: 2.7.1, current host: 3.0.1.130\r\n2019-04-26 14:50:07 main INFO org.apache.dubbo.container.Main.main(Main.java:90):90  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.7.1, current host: 3.0.1.130\r\n[2019-04-26 14:50:07] Dubbo service server started!\r\n```\r\nbut when call service from consumer side, throw `RpcException` as following:\r\n\r\n```\r\n@Test\r\n@ContextConfiguration(locations = { \"classpath*:META-INF/spring/*.xml\" })\r\npublic class BasicTest extends AbstractTestNGSpringContextTests {\r\n\r\n    @Autowired\r\n    private TestFacade testFacade;\r\n\r\n    @Test\r\n    private void callTest() {\r\n        testFacade.call(\"byronzoz\");\r\n    }\r\n\r\n}\r\n```\r\n\r\n```\r\n2019-04-26 14:53:34 main INFO org.apache.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:261):261  [DUBBO] Register: rest://3.0.1.130:8099/com.byronzoz.common.service.facade.TestFacade?anyhost=true&application=consumer&bean.name=com.byronzoz.common.service.facade.TestFacade&default.deprecated=false&default.dynamic=false&default.register=true&deprecated=false&dubbo=2.0.2&dynamic=false&generic=false&interface=com.byronzoz.common.service.facade.TestFacade&methods=call&owner=byronzoz&pid=97095&register=true&release=2.7.1&server=tomcat&side=provider&timestamp=1556261613848, dubbo version: 2.7.1, current host: 3.0.1.130  \r\n2019-04-26 14:53:34 dubbo-consul-notifier-thread-1 WARN org.apache.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:376):376  [DUBBO] Ignore empty notify urls for subscribe url consumer://3.0.1.130/com.byronzoz.common.service.facade.SessionContentFacade?application=consumer&category=providers,configurators,routers&check=false&default.lazy=false&default.sticky=false&dubbo=2.0.2&interface=com.byronzoz.common.service.facade.SessionContentFacade&lazy=false&methods=sayHello&owner=byronzoz&pid=97095&qos.enable=false&release=2.7.1&revision=1.0&side=consumer&sticky=false&timestamp=1556261608006, dubbo version: 2.7.1, current host: 3.0.1.130  \r\nFAILED: callTest\r\norg.apache.dubbo.rpc.RpcException: Failed to invoke the method sayHello in the service com.byronzoz.common.service.facade.SessionContentFacade. No provider available for the service com.byronzoz.common.service.facade.SessionContentFacade from registry 10.100.12.2:8500 on the consumer 3.0.1.130 using the dubbo version 2.7.1. Please check if the providers have been started and registered.\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.checkInvokers(AbstractClusterInvoker.java:265)\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:57)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:242)\r\n\tat org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:76)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:57)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.sayHello(proxy0.java)\r\n\tat com.byronzoz.biz.service.impl.TestFacadeImpl.call(TestFacadeImpl.java:27)\r\n\tat com.byronzoz.test.BasicTest.callTest(BasicTest.java:29)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)\r\n\tat org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)\r\n\tat org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:170)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:707)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:767)\r\n\tat org.testng.TestRunner.run(TestRunner.java:617)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:334)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:240)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1123)\r\n\tat org.testng.TestNG.run(TestNG.java:1031)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)\r\n```\r\n\r\nwith `ifconfig`, I get some basic network info.\r\n```\r\nen0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500\r\n\tether 88:e9:fe:88:ee:91\r\n\tinet 10.20.16.200 netmask 0xfffffc00 broadcast 10.20.19.255\r\n\tmedia: autoselect\r\n\tstatus: active\r\ntun0: flags=8851<UP,POINTOPOINT,RUNNING,SIMPLEX,MULTICAST> mtu 1400\r\n\tinet 3.0.1.130 --> 3.0.1.130 netmask 0xffffffff\r\n\topen (pid 25598)\r\n```\r\n\r\nAnd the IP(3.0.1.130) is unreachable from localhost.\r\n```\r\n~$ ping 3.0.1.130\r\nPING 3.0.1.130 (3.0.1.130): 56 data bytes\r\nRequest timeout for icmp_seq 0\r\nRequest timeout for icmp_seq 1\r\n```\r\n\r\n[question]\r\n\r\n> No provider available for the service com.byronzoz.common.service.facade.SessionContentFacade from registry 10.100.12.2:8500 on the consumer 3.0.1.130 using the dubbo version 2.7.1. Please check if the providers have been started and registered.\r\n\r\nIt seems that the consumer side doesn't find the service from provider side. I found a phenomenon the service bind the ip to 3.0.1.130, rather than 10.20.16.200?\r\n\r\n",
        "> It seems that the consumer side doesn't find the service from provider side. I found a phenomenon the service bind the ip to 3.0.1.130, rather than 10.20.16.200?\r\n\r\nYes, in this way, you have to specify IP explicitly to `10.20.16.200` associated to the network interface **en0**, by specifying `-Dbind.ip=10.20.16.200`"
    ],
    "1425": [],
    "1486": [],
    "1982": [],
    "5135": [],
    "2201": [],
    "3932": [],
    "1327": [],
    "2818": [],
    "3942": [
        "## \u5e94\u7528\u7c92\u5ea6\u6ce8\u518c\r\n\r\n### \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\r\n![image](https://user-images.githubusercontent.com/18097545/57497422-37876c80-730a-11e9-98b9-784cd2a6ea35.png)\r\n\r\n\r\n### \u89e3\u51b3\u5fae\u670d\u52a1\u62c6\u5206\u7684\u95ee\u9898\r\n\r\n\u5982\u5e94\u7528app1\u4e00\u62c6\u4e3a\u4e8c\uff1aapp1\u3001app3\uff0c\u9762\u5411application\u7684\u670d\u52a1\u53d1\u73b0\u65e0\u6cd5\u76d1\u542c\u65b0\u589e\u7684app3\uff0c\u53ef\u80fd\u5bfc\u81f4\u5730\u5740\u65e0\u6cd5\u63a8\u9001\u3001\u670d\u52a1\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u3002\r\n\r\n**\u89e3\u51b3\u65b9\u6848\uff1a**\u4e2d\u5fc3\u5316\u5b58\u50a8\u4e2d\u589e\u52a0interface -> application\u6620\u5c04\u5173\u7cfb\uff0c\u6d88\u8d39\u7aef\u540c\u65f6\u76d1\u542cinterfaces\u3001services\u4e0b\u7684\u4e24\u7ea7\u76ee\u5f55\r\n\r\n- \u5bf9\u4e8eDubbo\u9762\u5411\u63a5\u53e3\u7684\u670d\u52a1\u53d1\u73b0\u4e0e\u8c03\u7528\uff0c\u4e3a\u4e86\u505a\u5230\u8ba9\u7528\u6237\u4fa7\u65e0\u9700\u611f\u77e5\u5e94\u7528\u62c6\u5206\uff0c\u989d\u5916\u4fdd\u5b58interfaces\u6570\u636e\r\n- \u5bf9\u4e8e\u5fae\u670d\u52a1\u9762\u5411\u5e94\u7528\uff0c\u7528\u6237\u9700\u660e\u786e\u611f\u77e5\u5e94\u7528\u62c6\u5206\r\n![image](https://user-images.githubusercontent.com/18097545/57497413-2dfe0480-730a-11e9-8cf6-9fe9306699ee.png)\r\n\r\n\r\n### \u5b9e\u4f8b\u8282\u70b9\u5143\u6570\u636e\r\n\r\n```json\r\n{\r\n  endpoints: [{protocol, ip, port}, {protocol, ip, port}]\r\n  // \u5b9e\u4f8b\u73af\u5883\u6807\r\n  weight:100,\r\n  version:v1,\r\n  environment:test\r\n}\r\n```\r\n\r\n### MetadataService\r\n\r\n1. \u63a5\u53e3\u5b9a\u4e49\uff08\u521d\u6b65\u8bbe\u60f3\uff09\r\n```java\r\npublic interface DubboMetadataService {\r\n    String VERSION = \"1.0.0\";\r\n\r\n    String getVersion(); //\u5982\u679c\u8981\u505a\u7248\u672c\u9694\u79bb\uff1ametadataservice\u5b9a\u4e49\u5c31\u9700\u8981\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6216\u8005\u5c31\u9700\u8981\u904d\u5386\u6bcf\u4e2a\u5b9e\u4f8b\u7684getVersion()\r\n\r\n    List<String> getExportedUrls();\r\n\r\n    List<String> getReferedUrls();\r\n\r\n    String getExportedURLs(String serviceInterface, String group, String version);\r\n\r\n    String getExportedURLs(String serviceInterface);\r\n}\r\n```\r\n\r\n2. \u66b4\u9732\r\n\r\n   - \u4e0e\u6807\u51c6Dubbo\u3001REST\u534f\u8bae\u5171\u7528\u7aef\u53e3\uff0c\u591a\u534f\u8bae\u66b4\u9732\u7684\u60c5\u51b5\u4e0b\uff0cmetadataservice\u5728\u6bcf\u4e2a\u7aef\u53e3\u90fd\u66b4\u9732\uff1f\r\n   - MetaddataService\u5143\u6570\u636e\u53ef\u5f00\u653e\u914d\u7f6e\u9879\uff0c\u4f46\u662f\u4e0d\u5f80\u6ce8\u518c\u4e2d\u5fc3\u6ce8\u518c\u3002\r\n\r\n   - \u4f7f\u7528\u6807\u51c6Protocol\u3001ProxyFactory\u66b4\u9732\u670d\u52a1\uff0c\u53c2\u8003DubboMonitorFactory\u5173\u4e8eMonitorService\u7684\u505a\u6cd5\r\n\r\n3. \u76d1\u542c\r\n\r\n- \u5b9e\u4f8b\u6309\u7248\u672c\u53f7\u5206\u7ec4\uff0c\u7248\u672c\u53f7\u662f\u6839\u636eprovider\u7aef\u7684\u5143\u6570\u636e\uff08interface\u3001method\u7b7e\u540d\u7b49\uff09\u81ea\u52a8\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u5e76\u5728\u6bcf\u6b21\u5b9e\u4f8b\u91cd\u542f\u65f6\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u4f8b\u7684\u5143\u6570\u636e\u4e2d\u3002\r\n- Online/offline \u67d0\u4e2a\u63a5\u53e3\u7684\u89e3\u51b3\u65b9\u6cd5\uff1f\r\n\r\n## \u4f7f\u7528\u65b9\u5f0f\r\n\r\n\u5173\u952e\u4fe1\u606f\uff1a**\u6d88\u8d39\u7684application\u5217\u8868\u3001application\u548creference\u7684\u5305\u542b\u5173\u7cfb\u3001registry\u6ce8\u518c\u6a21\u5f0f**\r\n\r\n- Dubbo\u5185\u4e92\u8c03\uff0c\u6ce8\u518c\u4e2d\u5fc3\u989d\u5916\u7ef4\u62a4interface -> application\u6620\u5c04\u5173\u7cfb\u3002\r\n  ```xml\r\n  <dubbo:reference interface=\"org.xxx.DemoService\" />\r\n  ```\r\n- \u5fae\u670d\u52a1\u4e92\u901a\uff0c\u6307\u5b9aprovider\u5e94\u7528\u540d\r\n  ```xml\r\n  <dubbo:reference interface=\"org.xxx.DemoService\" service=\"app-name\"/>\r\n  ```\r\n\r\n\u8fc1\u79fb\u4e0e\u6539\u9020\r\n\r\n```xml\r\n<!-- \u8fc1\u79fb\u9700\u8981\u5b9a\u4e49\u4e24\u4e2aregistry\uff0c\u9ed8\u8ba4\u662f\u8001\u7684\u6ce8\u518c\u6a21\u578b\uff0c\u4f7f\u7528\u65b0\u6a21\u578b\u52a0mode=application\u53c2\u6570 -->\r\n<dubbo:registry address=\"zookeeper://127.0.0.1:2181\"/>\r\n<dubbo:registry address=\"zookeeper://127.0.0.1:2181?mode=application\"/>\r\n\r\n<!-- \u7ec8\u6001\u3002\u67d0\u4e2a\u7248\u672c\u5f00\u59cb\u9ed8\u8ba4\u4ee5\u65b0\u7684\u6a21\u578b\u505a\u670d\u52a1\u6ce8\u518c\u53d1\u73b0 -->\r\n<dubbo:registry address=\"zookeeper://127.0.0.1:2181\"/>\r\n```\r\n\r\n## \u5143\u6570\u636e\u5b58\u50a8\r\nApplicationModel\r\n\r\n## \u6ce8\u518c\u4e2d\u5fc3\r\n\r\n- \u6ce8\u518c\uff0c\u5e94\u7528\u7ea7\u4e8b\u4ef6\uff0c\u5728\u5143\u6570\u636e\u3001\u7aef\u53e3\u76d1\u542c\u5b8c\u6210\u540e\uff0c\u5199\u5165\u5230\u6ce8\u518c\u4e2d\u5fc3\u4e00\u6b21\uff1b\u591a\u6ce8\u518c\u4e2d\u5fc3\u5219\u6ce8\u518c\u591a\u4efd\r\n- \u76d1\u542c\uff0c\u5728\u5e94\u7528\u7ea7\u76d1\u542c\uff0c\u6bcf\u4e2a\u6ce8\u518c\u4e2d\u5fc3\u90fd\u505a\u76d1\u542c\uff1b\u76d1\u542c\u5e94\u5728refer\u4e4b\u524d\uff0crefer\u8fc7\u7a0b\u91c7\u96c6\u63a5\u53e3\u5143\u6570\u636e\r\n\r\n\r\n\r\n**\u5b9a\u4e49\u4e00\u5957\u65b0\u7684\u5e94\u7528\u7ea7\u522b\u7684\u670d\u52a1\u53d1\u73b0\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0\u9762\u5411\u5e94\u7528\u7684Registry\u548cDiscoveryClient\uff0c\u9a71\u52a8\u8001\u7684Regsitry\u63a5\u53e3\u4e0eMetadataService\u7684\u5bf9\u63a5\uff0c\u4ee5\u5b9e\u73b0\u590d\u7528\u8001\u7684URL\u8fd0\u8f6c\u6d41\u7a0b**\r\n\r\n\r\n\r\n**\u88f8\u7684API\u65b9\u5f0f\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u542f\u52a8\u5165\u53e3\uff0c\u4ee5\u5b9e\u73b0\u5e94\u7528\u7ea7\u522b\u7684\u670d\u52a1\u66b4\u9732\u4e0e\u6ce8\u518c**\uff0cSpring\u7684\u4e8b\u4ef6\u5165\u53e3\uff0c\u5982ContextRefreshedEvent\uff1f\u4ee3\u7406\u5230API\u5165\u53e3\r\n"
    ],
    "2453": [],
    "2959": [],
    "3946": [],
    "3951": [
        "duplicate of #3698",
        "How to solve it...",
        "> How to solve it...\r\n\r\nI found a way to fix~ But I need to make a pull request\r\nIt's related to \r\nhttps://github.com/apache/dubbo/issues/1903\r\nhttps://github.com/apache/dubbo/pull/2656"
    ],
    "3952": [
        "I have fixed it in this pr\r\nhttps://github.com/apache/incubator-dubbo/pull/3957",
        "This bug has been fixed from 2.7.2 onwards."
    ],
    "4480": [],
    "1761": [],
    "2147": [],
    "2343": [],
    "191": [],
    "2594": [],
    "3606": [],
    "188": [],
    "114": [],
    "1435": [],
    "2681": [],
    "827": [],
    "4683": [],
    "2638": [],
    "3984": [],
    "605": [],
    "2826": [],
    "4073": [],
    "3990": [
        "\u6211\u53d1\u73b0,\u5f53dubbo\u7684\u4e00\u4e2a\u63d0\u4f9b\u8005,\u4f9d\u8d56openFeign\u7684bean \u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898,\u4e0d\u4f9d\u8d56\u5219\u6ca1\u95ee\u9898",
        "\u6211dubbo\u548cfeign\u6df7\u7528\u6ca1\u9047\u5230\u8fd9\u6837\u5b50\u7684\u60c5\u51b5\u989d2.7.1",
        "\u4e00\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\r\n```java\r\n@Autowired\r\n@Lazy\r\nF6HttpInterface f6HttpInterface;\r\n```\r\n",
        "this issue does appear on 2.7.1 but disappears on 2.7.2 and later, we are still investigating.",
        "2.7.3 still remains.",
        "This error was caused by Spring Cloud Feign design, every `@FeignClient` will generate a Feign proxy with a new child Spring `ApplicationContext` that may be refreshed before its' parent `ApplicationContext`. If any Dubbo service bean annotated `@Service` was scanned by the child context, this Dubbo `ServiceBean` also will be initialized and it's no guarantee its dependent Spring beans are ready in that time, thus there are two ways to resolve this issue :\r\n\r\n1. Avoid Dubbo `@Service` Bean to register into the child context\r\n2. Via the `contextId` attribute of `@FeignClient` to specify the Spring Boot server `ApplicationContext`\r\n",
        "@mercyblitz Thanks for take a look at this. I'm a reader of your book \u300aSpringBoot\u7f16\u7a0b\u601d\u60f3\u300b.\r\nTo be honest, your solutions is not easy to achieve.\r\n\r\nDubbo `@Service` Bean is not registered by child context created by Feign. The child context sets its parent context to which `ApplicationContextAware` will set to. We can do nothing to prevent the `ContextRefreshedEvent` received by `ServiceBean`. Because the event is also published to parent context by `AbstractApplicationContext`.\r\n\r\nTo see the event and source published by feign, it's easy to implement a EventListener `ApplicationListener<ContextRefreshedEvent>`\r\n\r\n```\r\n@Component\r\npublic class FakeListener implements ApplicationListener<ContextRefreshedEvent>, ApplicationContextAware {\r\n  private ApplicationContext applicationContext;\r\n\r\n  @Override\r\n  public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\r\n    this.applicationContext = applicationContext;\r\n  }\r\n\r\n  @Override\r\n  public void onApplicationEvent(ContextRefreshedEvent event) {\r\n    ApplicationContext eventApplicationContext = event.getApplicationContext();\r\n\r\n    if (applicationContext == eventApplicationContext) {\r\n      //Here is the right opportunity that Spring beans are ready.\r\n    }\r\n....\r\n}\r\n```\r\n\r\nIf we print the `ContextRefreshedEvent`'s class name and its parent class name.\r\nWe will see like this:\r\n```\r\n//Published by Feign\r\n :  org.springframework.context.annotation.AnnotationConfigApplicationContext@2cc3b0a7  FeignContext-XXXXXXXX\r\n : ----- application-1  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c1b9e4b\r\n : ---------- bootstrap  org.springframework.context.annotation.AnnotationConfigApplicationContext@27adc16e\r\n\r\n\r\n//Published by Spring when all Beans are ready\r\n :  application-1  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c1b9e4b\r\n : ----- bootstrap  org.springframework.context.annotation.AnnotationConfigApplicationContext@27adc16e\r\n\r\n```\r\n\r\nWhatever the `ApplicationContext` class is, the right one is setted by `ApplicationContextAware` .\r\nSo the right way to fix this, is to let `ServiceBean` listen the Event published by right context. \r\n\r\nAnd there is a advantage for checking what `ApplicationContext` we really want, to make it invoked only once.\r\n\r\nMy advice is to change the `ServiceBean` code:\r\n```\r\n    @Override\r\n    public void onApplicationEvent(ContextRefreshedEvent event) {\r\n        if (!isExported() && !isUnexported()) {\r\n            if (logger.isInfoEnabled()) {\r\n                logger.info(\"The service ready on spring started. service: \" + getInterface());\r\n            }\r\n            ApplicationContext eventApplicationContext = event.getApplicationContext();\r\n           if (applicationContext == eventApplicationContext) {\r\n               export();//Here is the right opportunity that Spring beans are ready.\r\n           }\r\n          \r\n        }\r\n    }\r\n```\r\n\r\n**To those who meet this issue and want to fix this issue urgently**:\r\nWhen dubbo provider depends on a FeignClient, we can use ApplicationContextAware, and get the client by\r\n```\r\nFeignClientInterface client = applicationContext.getBean(FeignClientInterface.class);\r\n```\r\n\r\n",
        "@slankka \u65b9\u6848\u4e0d\u53ef\u884c\uff0cfeign\u89e6\u53d1onApplicationEvent\u7684\u65f6\u5019applicationContext\u8fd8\u672a\u6ce8\u5165\uff0c\u662fnull\u3002\r\n",
        "@crazyzh1984 \r\n```applicationContext == eventApplicationContext```, \u4e0d\u4f1a\u62a5\u9519\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4export\u610f\u5916\u89e6\u53d1\u3002\r\n",
        "@slankka \u55ef\uff0cOK\u4e86\uff0c\u53ef\u4ee5\u3002\r\n\r\nOpenFeign\u4f1a\u521b\u5efa\u591a\u4e2achild context\uff0c\u6bcf\u4e2a\u90fd\u4f1a\u89e6\u53d1refresh\uff0c\r\n\u6240\u4ee5\u8fd8\u662f\u8981\u6bd4\u8f83\u662f\u5426event\u662f\u6240\u5c5econtext\u89e6\u53d1\u624d\u6bd4\u8f83\u5408\u7406\u3002\r\n\r\ndubbo \u7684 ServiceBean \u662f\u5728parent context\u4e2d\u7ba1\u7406\u7684\uff0c\u5e76\u4e0d\u5728child context\u4e2d\uff0c\r\n\u6240\u4ee5\u4e5f\u4e0d\u662fbean\u6ce8\u5165\u7684\u95ee\u9898\u3002\r\n\r\n\u95ee\u9898\u7684\u6839\u6e90\u662f\uff1a\r\n\u5f85\u6ce8\u5165\u7684ServiceBean\uff0c\u5728\u8fd8\u6ca1\u6709\u521d\u59cb\u5316\u5b8c\u6210\u524d\uff0c\r\n\u5c31\u56e0\u4e3aOpenFeign\u521b\u5efa\u7684child context\u89e6\u53d1refresh\u800c\u63d0\u524d\u8fdb\u884cexport\u4e86\u3002\r\n\u89e6\u53d1\u7684\u6761\u4ef6\u662f\uff0cServiceBean\u7684ref\u5bf9\u8c61\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u7684\u4f9d\u8d56\u4e86OpenFeign\u7684client\u3002",
        "OpenFeign child AnnotationConfigApplicationContext fired \r\nparent.publishEvent(ContextRefreshedEvent)\r\n![image](https://user-images.githubusercontent.com/2596302/67617795-74dca980-f819-11e9-8e0d-ebb86058b1fa.png)\r\n"
    ],
    "3991": [
        "https://github.com/apache/dubbo/pull/3993"
    ],
    "3031": [],
    "3994": [],
    "1526": [],
    "681": [],
    "3999": [
        "Hi,\r\n\r\nI am a college student from China who have experience on open source and not accepted by Google Summer of Code with other community. I have experience on using netty and spring. Could you please give me some introduction on contribute to it?",
        "I just saw this issue at JIRA and wonder if it is available because I found it was discussed already.\r\n\r\nIn addition, is there any communication ways like gitter,etc.  I want to talk about this sub-project.",
        "in our org, we have implemented raw `thrift`,`unary gRPC` support on `dubbo` depend on `armeria`, looking forward to the official native support.",
        "From the text I assume that is there code and doc's links not put?\r\n\r\nAlso, I have writtern some demo of gRPC and dubbo and wonder should I read about the part of Hessian and Thirf to work out how they run or any other directions?",
        "Hi @cvictory\r\n\r\nI have some questions about gRPC extenstion. \r\n\r\n1. When I refer to the Thirft implementation of Dubbo I found there are native-thrift and thrift, and thrift was deprecated. I wonder the differences between them, is that mean dubbo no longer support dubbo custom thrift?\r\n\r\n2. When I use gRPC and Thrift found they have the similarity that use theirselves compiler to compile from .protobuf or .thrift file to .java not using custom encodng.\r\nBut I found the thrift codec2 implementation was customized, and what should gRPC protocol do about the protocl codec? Using native gRPC protocol of customeize a codec for gRPC.",
        "1. If you use thrift,  use native-thrift directly. I don't know the thrift but only know native thrift.  refer to : http://dubbo.apache.org/zh-cn/docs/user/references/protocol/thrift.html.  \r\n\r\n2. I think we have two ways to implements. \r\n2.1 You can introduce gRpc, and the protocl , transport and serialization are managed with gRpc. \r\n\r\n\u5f15\u5165gRPC\uff0cgRPC\u8d1f\u8d23\u4e86\u534f\u8bae\uff0c\u901a\u4fe1\u7b49\u6240\u6709\u7684\u4e8b\u60c5\u3002\r\n\r\n2.2 You can refer to gRPC, and you implement the [Http/2](https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md).  Finally, you can invoke between the dubbo app used gRpc protocol and the gRpc app.",
        "@cvictory \r\nThanks for your reply.\r\n\r\nThere is a draft proposal, the way to integrate gRPC (as same as native-thrift) is talked about in it. Please review and write your comments at your convenience.\r\n\r\nhttps://docs.google.com/document/d/1Es3hYCeo6DlWx5iXD23QKrDx16YVKzxi9_ATLKiv0hE/edit?usp=sharing",
        "> https://docs.google.com/document/d/1Es3hYCeo6DlWx5iXD23QKrDx16YVKzxi9_ATLKiv0hE/edit?usp=sharing\r\n\r\nok. I will check it.  And you can prepare the proposal firstly.",
        "There is my commit after sorting out, please feel free to review it.\r\n\r\nThe grpc code-gen plugin is relay on https://github.com/chickenlj/grpc-java/tree/grpc-codegen-dubbo/compiler\r\n\r\nIs it necessary to create a PR to upstream repo?\r\n\r\n@chickenlj @cvictory ",
        "It works well with:\r\nhttps://github.com/arjenzhou/grpc-demo/blob/master/src/main/java/org/apache/dubbo/rpc/protocol/grpc/api/gRPCServer.java\r\nand\r\nhttps://github.com/arjenzhou/dubbo-demo/blob/master/src/main/java/org/apache/dubbo/samples/basic/BasicConsumer.java"
    ],
    "315": [],
    "4997": [],
    "4007": [
        "should init primitive before new instance\r\ncom.alibaba.dubbo.common.utils.PojoUtils#newInstance:L527\r\npseudo code like this\r\n```java\r\nClass<?>[] parameterTypes = constructor.getParameterTypes();\r\nObject[] parameters = new Object[parameterTypes.length];\r\nfor (int i = 0; i < parameterTypes.length; i++) {\r\n    if (parameterTypes[i].isPrimitive()) {\r\n        // init primitive type \r\n        parameters[i] = getPrimitiveDefaultValue(parameterTypes[i]);\r\n    }\r\n}\r\nreturn constructor.newInstance(parameters);\r\n```"
    ],
    "4232": [],
    "2148": [],
    "2094": [],
    "3692": [],
    "1973": [],
    "4841": [],
    "4552": [],
    "4504": [],
    "1": [],
    "5112": [],
    "3350": [],
    "4050": [],
    "4698": [],
    "4059": [
        "Turns out this is not a real bug.",
        "https://github.com/apache/incubator-dubbo/blob/cdce2b278364c6391a07e35bca8dd5750529a63e/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/configurator/AbstractConfigurator.java#L128"
    ],
    "1448": [],
    "1016": [],
    "5533": [],
    "2467": [],
    "1511": [],
    "4071": [
        "same as #3695 "
    ],
    "3135": [],
    "2676": [],
    "1496": [],
    "1808": [],
    "3229": [],
    "639": [],
    "1152": [],
    "3112": [],
    "4090": [
        "@dntbeSris \u592a\u68d2\u4e86\uff0c\u6211\u8ba4\u4e3aK8S\u7684\u652f\u6301\u662f\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u91cd\u8981\u65b9\u5411\uff0c\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u5b9e\u73b0\u63d0\u4ea4\u4e3apull request\uff0c\u793e\u533a\u4f1a\u968f\u65f6\u7ed9\u4e88\u53cd\u9988\u7684\u3002"
    ],
    "145": [],
    "3714": [],
    "4093": [],
    "4096": [],
    "5440": [],
    "4104": [],
    "2624": [],
    "1811": [],
    "4111": [
        "This should be fixe from 2.7.2 onwards."
    ],
    "4027": [],
    "4115": [
        "@zonghaishang  How about this issue?  If you don't have time to fix it, I will modify the milestone to 2.7.3.",
        "fixed: https://github.com/zonghaishang/dubbo/commit/7bacc825343bcc37c2d04327cf736518d86b49a0\r\n\r\nWhat is the release deadline for the 2.7.2 release?",
        "I am starting to review this. @cvictory ",
        "This issue has been fixed from 2.7.2 onwards."
    ],
    "4119": [],
    "4120": [],
    "4121": [],
    "4127": [],
    "2053": [],
    "4125": [
        "\u6211\u611f\u89c9\u8fd9\u91cc\u7684\u610f\u601d\u662f\u5728\u521d\u59cb\u5316Dubbo\u65f6\uff0c\u9700\u8981\u5148\u786e\u4fdd\u8fde\u63a5\u4e0a\u914d\u7f6e\u4e2d\u5fc3\u4e86\uff0c\u624d\u80fd\u7ee7\u7eed\u5f80\u540e\u6267\u884c\u3002",
        "> \u6211\u611f\u89c9\u8fd9\u91cc\u7684\u610f\u601d\u662f\u5728\u521d\u59cb\u5316Dubbo\u65f6\uff0c\u9700\u8981\u5148\u786e\u4fdd\u8fde\u63a5\u4e0a\u914d\u7f6e\u4e2d\u5fc3\u4e86\uff0c\u624d\u80fd\u7ee7\u7eed\u5f80\u540e\u6267\u884c\u3002\r\n\r\n\u5982\u679c\u8bbe\u7f6e\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\uff0cdubbo\u5c31\u53ef\u80fd\u4e0d\u4f1a\u4ece\u914d\u7f6e\u4e2d\u5fc3\u8bfb\u53d6\u914d\u7f6e\u4e86\uff0c\u90a3\u4e48\u53ef\u80fd\u5c31\u4f1a\u4ece\u5176\u4ed6\u5730\u65b9\u53bb\u8bfb\u53d6\u914d\u7f6e\u4e86\uff0c\u8fd9\u4e2a\u6d41\u7a0b\u884c\u4e0d\u884c\u611f\u89c9\u9700\u8981\u597d\u597d\u8ba8\u8bba\u4e00\u4e0b",
        "dubbo\u540e\u7eed\u7684\u521d\u59cb\u5316\uff0c\u4f9d\u8d56zk\u914d\u7f6e\u4e2d\u5fc3\u7684\u6570\u636e\uff0c\u4e2a\u4eba\u89c9\u5f97\uff0c\u5f3a\u4f9d\u8d56\u548c\u5f31\u4f9d\u8d56\u65f6\u5e94\u91c7\u53d6\u4e0d\u540c\u7684\u7b56\u7565\u3002\r\n1\uff64 \u5f3a\u4f9d\u8d56zk\u914d\u7f6e\u4e2d\u5fc3\u65f6\uff0c\u957f\u65f6\u95f4\u6b7b\u7b49\u4e5f\u8bb8\u662f\u6700\u4f18\u7684\u7b56\u7565\uff0c\u5728\u8fde\u63a5\u6062\u590d\u6b63\u786e\u540c\u6b65\u914d\u7f6e\u540e\uff0c\u518d\u505a\u540e\u7eed\u521d\u59cb\u5316\u3002\r\n2\uff64 \u975e\u5f3a\u4f9d\u8d56zk\u914d\u7f6e\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5e94\u7528\u4f18\u5148\u542f\u52a8\uff0c\u5f85zk\u540c\u6b65\u540e\u518d\u66f4\u65b0\u3002",
        "\u8fd9\u91cc\u6700\u5173\u952e\u7684\u95ee\u9898\u662f\uff0c\u5f3a\u4f9d\u8d56 zk \u65f6\uff0c\u5730\u5740\u914d\u7f6e\u9519\u8bef\uff0c\u4e3b\u7ebf\u7a0b\u5361\u6b7b\u5728\u8fd9\u91cc\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94\uff0c\u8fd0\u7ef4\u770b\u4e0d\u5230\u4efb\u4f55\u4fe1\u606f\u3002\r\n\r\n\u5982\u679c\u4e0d\u589e\u52a0\u8d85\u65f6\u65f6\u95f4\uff0c\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u989d\u5916\u7ebf\u7a0b\u8f93\u51fa\u8fd9\u91cc\u7684\u7b49\u5f85\u4fe1\u606f\u3002\u81f3\u5c11\u80fd\u770b\u5230\u7a0b\u5e8f\u76ee\u524d\u5728\u7b49\u4ec0\u4e48\uff0c\u65b9\u4fbf\u8fd0\u7ef4\u89e3\u51b3\u95ee\u9898\u3002",
        "\u91cd\u73b0\u65b9\u5f0f\uff0c\u542f\u52a8redis\uff0c\u7136\u540e\u5c06\u539f\u6765zookeeper\u7684\u914d\u7f6e\u9879\u7684\u7aef\u53e3\u4ece2181\u7f16\u7a0b6379\uff0c\u542f\u52a8\u5c31\u4f1ahold\u3002\r\n\r\n\u4e5f\u5c31\u662f\u53ea\u8981\u6709\u7aef\u53e3\u53ef\u4ee5\u8fde\u63a5\u4e0a\uff0c\u4f46\u662f\u6ca1\u6cd5\u901a\u8fc7zookeeper\u534f\u8bae\u4f20\u64ad\uff0c\u5c31\u4f1a\u7b49\u5f85\u3002",
        "pls.check #4134"
    ],
    "1759": [],
    "1199": [],
    "3452": [],
    "4162": [],
    "2751": [],
    "3051": [],
    "449": [],
    "729": [],
    "248": [],
    "5099": [],
    "4866": [],
    "3521": [],
    "3322": [],
    "4509": [],
    "5037": [],
    "646": [],
    "4175": [],
    "2719": [],
    "3036": [],
    "2872": [],
    "2269": [],
    "1616": [],
    "79": [],
    "2042": [],
    "4201": [],
    "3854": [],
    "3953": [],
    "3557": [],
    "5417": [],
    "3904": [],
    "4218": [
        "Can you submit a PR to fix it?",
        "@CrazyHZM  I have send one PR",
        "Thank you, I have already dealt with it."
    ],
    "2250": [],
    "5386": [],
    "2852": [],
    "1906": [],
    "4260": [],
    "4238": [],
    "2337": [],
    "4413": [],
    "3649": [],
    "4248": [
        "add the code \r\nif(parameter.excluded())\r\n   continue;\r\n",
        "centos update the jdk version to oracle jdk java version \"1.8.0_211\" it is same to openjdk\u3002\r\nmaybe different platform compile is different\uff0cmethods sequence different.\r\nit is ok run with dubbo-2.6.2",
        "https://github.com/apache/dubbo/pull/4678"
    ],
    "1584": [],
    "1445": [],
    "5499": [],
    "4137": [],
    "2139": [],
    "3241": [],
    "4265": [],
    "4268": [],
    "4834": [],
    "472": [],
    "307": [],
    "3816": [],
    "5516": [],
    "2963": [],
    "4744": [],
    "4294": [
        "nacos log console\uff1a\r\n\r\n```\r\norg.apache.dubbo.rpc.RpcException: Failed to invoke the method sayHello in the service org.apache.dubbo.samples.basic.api.DemoService. Tried 1 times of the providers [30.5.124.63:20880] (1/1) from the registry 127.0.0.1:8848 on the consumer 30.5.124.63 using the dubbo version 2.7.2. Last error is: Failed to invoke remote method: sayHello, provider: dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490, cause: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:113)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)\r\n\tat org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.sayHello(proxy0.java)\r\n\tat org.apache.dubbo.samples.basic.BasicConsumer.main(BasicConsumer.java:34)\r\nCaused by: org.apache.dubbo.remoting.RemotingException: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.remoting.transport.AbstractClient.send(AbstractClient.java:175)\r\n\tat org.apache.dubbo.remoting.transport.AbstractPeer.send(AbstractPeer.java:53)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannel.request(HeaderExchangeChannel.java:118)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.request(HeaderExchangeClient.java:84)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClient.request(ReferenceCountExchangeClient.java:80)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboInvoker.doInvoke(DubboInvoker.java:99)\r\n\tat org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:155)\r\n\tat org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:50)\r\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:54)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:58)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:150)\r\n\tat org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)\r\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:82)\r\n\t... 5 more\r\norg.apache.dubbo.rpc.RpcException: Failed to invoke the method sayHello in the service org.apache.dubbo.samples.basic.api.DemoService. Tried 1 times of the providers [30.5.124.63:20880] (1/1) from the registry 127.0.0.1:8848 on the consumer 30.5.124.63 using the dubbo version 2.7.2. Last error is: Failed to invoke remote method: sayHello, provider: dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490, cause: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:113)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)\r\n\tat org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.sayHello(proxy0.java)\r\n\tat org.apache.dubbo.samples.basic.BasicConsumer.main(BasicConsumer.java:34)\r\nCaused by: org.apache.dubbo.remoting.RemotingException: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.remoting.transport.AbstractClient.send(AbstractClient.java:175)\r\n\tat org.apache.dubbo.remoting.transport.AbstractPeer.send(AbstractPeer.java:53)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannel.request(HeaderExchangeChannel.java:118)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.request(HeaderExchangeClient.java:84)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClient.request(ReferenceCountExchangeClient.java:80)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboInvoker.doInvoke(DubboInvoker.java:99)\r\n\tat org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:155)\r\n\tat org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:50)\r\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:54)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:58)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:150)\r\n\tat org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)\r\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:82)\r\n\t... 5 more\r\norg.apache.dubbo.rpc.RpcException: Failed to invoke the method sayHello in the service org.apache.dubbo.samples.basic.api.DemoService. Tried 1 times of the providers [30.5.124.63:20880] (1/1) from the registry 127.0.0.1:8848 on the consumer 30.5.124.63 using the dubbo version 2.7.2. Last error is: Failed to invoke remote method: sayHello, provider: dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490, cause: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:113)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)\r\n\tat org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.sayHello(proxy0.java)\r\n\tat org.apache.dubbo.samples.basic.BasicConsumer.main(BasicConsumer.java:34)\r\nCaused by: org.apache.dubbo.remoting.RemotingException: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.remoting.transport.AbstractClient.send(AbstractClient.java:175)\r\n\tat org.apache.dubbo.remoting.transport.AbstractPeer.send(AbstractPeer.java:53)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannel.request(HeaderExchangeChannel.java:118)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.request(HeaderExchangeClient.java:84)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClient.request(ReferenceCountExchangeClient.java:80)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboInvoker.doInvoke(DubboInvoker.java:99)\r\n\tat org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:155)\r\n\tat org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:50)\r\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:54)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:58)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:150)\r\n\tat org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)\r\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:82)\r\n\t... 5 more\r\norg.apache.dubbo.rpc.RpcException: Failed to invoke the method sayHello in the service org.apache.dubbo.samples.basic.api.DemoService. Tried 1 times of the providers [30.5.124.63:20880] (1/1) from the registry 127.0.0.1:8848 on the consumer 30.5.124.63 using the dubbo version 2.7.2. Last error is: Failed to invoke remote method: sayHello, provider: dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490, cause: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:113)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)\r\n\tat org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.sayHello(proxy0.java)\r\n\tat org.apache.dubbo.samples.basic.BasicConsumer.main(BasicConsumer.java:34)\r\nCaused by: org.apache.dubbo.remoting.RemotingException: message can not send, because channel is closed . url:dubbo://30.5.124.63:20880/org.apache.dubbo.samples.basic.api.DemoService?anyhost=true&application=demo-consumer&bean.name=org.apache.dubbo.samples.basic.api.DemoService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=org.apache.dubbo.samples.basic.api.DemoService&lazy=false&methods=sayHello&path=org.apache.dubbo.samples.basic.api.DemoService&pid=35157&protocol=dubbo&register=true&register.ip=30.5.124.63&release=2.7.2&remote.application=demo-provider&retries=0&side=consumer&sticky=false&timestamp=1560936057490\r\n\tat org.apache.dubbo.remoting.transport.AbstractClient.send(AbstractClient.java:175)\r\n\tat org.apache.dubbo.remoting.transport.AbstractPeer.send(AbstractPeer.java:53)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannel.request(HeaderExchangeChannel.java:118)\r\n\tat org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.request(HeaderExchangeClient.java:84)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClient.request(ReferenceCountExchangeClient.java:80)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboInvoker.doInvoke(DubboInvoker.java:99)\r\n\tat org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:155)\r\n\tat org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:50)\r\n\tat org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:54)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:58)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:150)\r\n\tat org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)\r\n\tat org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)\r\n\tat org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:82)\r\n\t... 5 more\r\n```\r\n\r\n----\r\n\r\nThe right log as following:\r\n\r\n```\r\norg.apache.dubbo.rpc.RpcException: No provider available from registry 127.0.0.1:8848 for service org.apache.dubbo.samples.basic.api.DemoService on consumer 30.5.124.63 use dubbo version 2.7.3-SNAPSHOT, please check status of providers(disabled, not registered or in blacklist).\r\n\tat org.apache.dubbo.registry.integration.RegistryDirectory.doList(RegistryDirectory.java:567)\r\n\tat org.apache.dubbo.rpc.cluster.directory.AbstractDirectory.list(AbstractDirectory.java:85)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.list(AbstractClusterInvoker.java:280)\r\n\tat org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:245)\r\n\tat org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.sayHello(proxy0.java)\r\n\tat org.apache.dubbo.samples.basic.BasicConsumer.main(BasicConsumer.java:34)\r\n```",
        "etcd worked well.  Consul have the same issue with nacos."
    ],
    "3451": [],
    "4299": [],
    "3435": [],
    "1556": [],
    "4971": [],
    "4309": [
        "@gaoxinge good catch, it looks like a bug.",
        "@beiwei30 Nice! Thanks!"
    ],
    "4310": [
        "`/MEAT-INF/dubbo/` be revised as `/META-INF/dubbo/`"
    ],
    "2622": [],
    "4376": [],
    "1391": [],
    "4855": [],
    "2658": [],
    "2905": [],
    "4330": [
        "\r\nIs it because @DubboComponentScan scans into the context that the class declared by @Service is not injected? Recently watching",
        "I think you have introduced dubbo-compatible jar.  \r\n\r\nAnd I think If you want to keep @Service and @Reference in com.alibaba package, you can put @CompatibleDubboComponentScan together with @DubboComponentScan. \r\n\r\nIf you still have some problem, let me know."
    ],
    "4331": [
        "Script in jenkins job (https://builds.apache.org/job/Apache%20Dubbo/job/apache-dubbo-apidoc-deployment/) also updated"
    ],
    "2700": [],
    "3101": [],
    "2497": [],
    "4106": [],
    "3245": [],
    "3782": [],
    "2385": [],
    "4344": [
        "fixed"
    ],
    "4345": [],
    "4347": [
        "I'd like to create a PR for this issue. \r\n\r\nShould I simply remove the reference to `com.alibaba.nacos.client.naming.utils.StringUtils` from `NacosRegistryFactory ` ?\r\n\r\n@cvictory ",
        "https://github.com/apache/dubbo/pull/4308"
    ],
    "4348": [],
    "1554": [],
    "4351": [
        "I will fix it"
    ],
    "935": [],
    "4353": [
        "maybe also consider upgrade nacos client version to latest one",
        "i was try it ,but it also report bug like this ,may be there are some bugs in nacos or dubbo ",
        "Can you provide the relevant code and configuration? I cannot reproduce this issue."
    ],
    "4357": [
        "fix in https://github.com/apache/dubbo/pull/4358"
    ],
    "2595": [],
    "5559": [],
    "1453": [],
    "3655": [],
    "3810": [],
    "4374": [
        "no, pls see the import statement\r\n```java\r\nimport static org.apache.dubbo.rpc.Constants.ACCESS_LOG_KEY;\r\n\r\n```"
    ],
    "4377": [],
    "4301": [],
    "1236": [],
    "4384": [],
    "1568": [],
    "3210": [],
    "5295": [],
    "4393": [],
    "2381": [],
    "5574": [],
    "4602": [],
    "4400": [
        "```\r\n<dependency>\r\n                <groupId>org.apache.tomcat.embed</groupId>\r\n                <artifactId>tomcat-embed-core</artifactId>\r\n                <version>${tomcat_embed_version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>org.apache.tomcat.embed</groupId>\r\n                <artifactId>tomcat-embed-logging-juli</artifactId>\r\n                <version>${tomcat_embed_version}</version>\r\n            </dependency>\r\n```\r\n\r\nwhat are they used for?",
        "I will try to delete this in next release"
    ],
    "4402": [
        "We can fix it in 2.7.4"
    ],
    "2034": [],
    "4406": [],
    "5602": [],
    "4409": [],
    "4412": [
        "I will fixed it",
        "left `default` not set or set it to ``",
        "I have post a pr but i donot know why the issue is closed."
    ],
    "2978": [],
    "4493": [],
    "4529": [],
    "5501": [],
    "1438": [],
    "4435": [],
    "2439": [],
    "3227": [],
    "4439": [],
    "4177": [],
    "4445": [
        "I will try it \ud83d\ude04 "
    ],
    "2760": [],
    "596": [],
    "598": [],
    "4455": [],
    "5066": [],
    "2202": [],
    "3399": [],
    "5448": [],
    "4938": [],
    "3256": [],
    "3857": [],
    "4145": [],
    "4209": [],
    "3632": [],
    "3699": [],
    "4470": [
        "Maybe we should count `reference id` as part of the key. \r\n\r\n```java\r\nString key = reference.id() + \"/\" + interfaceName +\r\n            \"/\" + reference.version() +\r\n            \"/\" + reference.group();\r\n```",
        "\u90a3\u662f\u6781\u597d\u7684\uff0c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898",
        "This issue has been fixed, please update 2.6.6~ or refer https://github.com/apache/dubbo/blob/f9325699388f653ebbcd921cbdd0baf02d838715/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/beans/factory/annotation/ReferenceAnnotationBeanPostProcessor.java#L178",
        "\u6211\u770b\u4e862.6.6\u7248\u672c\uff0c\u95ee\u9898\u5e76\u5f97\u5230\u6ca1\u6709\u89e3\u51b3\r\n![image](https://user-images.githubusercontent.com/26024578/60815841-0b358280-a1cb-11e9-83b4-2ddcc8dabbf2.png)\r\ntimeout\u548cretries\u5c5e\u6027\u5b8c\u5168\u88ab\u5ffd\u7565\r\n![image](https://user-images.githubusercontent.com/26024578/60815967-3cae4e00-a1cb-11e9-90c0-e1e46ada8369.png)\r\n![image](https://user-images.githubusercontent.com/26024578/60816083-7a12db80-a1cb-11e9-8140-077ea6727264.png)\r\n\u4ecd\u7136\u672a\u8003\u8651\u5230\u5176\u5b83Reference\u5c5e\u6027\r\n",
        "Please wait for 2.6.7",
        "It's still an issue for local `@Servnce`  that was referenced by multiple `@Reference` with different attributes. If the service annotated `@Servnce` is remote, it works.",
        "duplicate to #4674"
    ],
    "2070": [],
    "3042": [],
    "5599": [],
    "4954": [],
    "3417": [],
    "5149": [],
    "3479": [],
    "4487": [],
    "3756": [],
    "3528": [],
    "4497": [
        "Hello, can you post a pull request for this issue ?",
        "\u5df2\u63d0\uff1ahttps://github.com/apache/dubbo/pull/4505\r\ndubbo-spring-boot-project\u4e5f\u9700\u8981\u4fee\u6539"
    ],
    "4498": [],
    "4499": [],
    "15": [],
    "4501": [],
    "4508": [],
    "4511": [
        "\u9700\u8981\u5728\r\n```java\r\n   registries.stream().filter(RegistryConfig::isZookeeperProtocol).findFirst().ifPresent(rc -> {\r\n            // we use the loading status of DynamicConfiguration to decide whether ConfigCenter has been initiated.\r\n            Environment.getInstance().getDynamicConfiguration().orElseGet(() -> {\r\n                ConfigManager configManager = ConfigManager.getInstance();\r\n                ConfigCenterConfig cc = configManager.getConfigCenter().orElse(new ConfigCenterConfig());\r\n                cc.setProtocol(rc.getProtocol());\r\n                cc.setAddress(rc.getAddress());\r\n                cc.setHighestPriority(false);\r\n                cc.setClient(rc.getClient)); // \u6539\u8fdb\r\n                setConfigCenter(cc);\r\n                startConfigCenter();\r\n                return null;\r\n            });\r\n        });\r\n```\r\n`ConfigCenterConfig`\u4e2d\u5e94\u8be5\u589e\u52a0client\u5c5e\u6027\uff0c\u4ee5\u5c06zk\u7684`ZookeeperTransporter`\u65b9\u5f0f\u4f20\u9012\u7ed9`ConfigCenterConfig`\uff0c\u4fdd\u8bc1\u6b64\u5904zk\u5ba2\u6237\u7aef\u521d\u59cb\u5316\u548c`ZookeeperRegistry`\u521d\u59cb\u5316zk\u5ba2\u6237\u7aef\u7684\u65b9\u5f0f\u4e00\u6837\u3002",
        "\u770b\u8d77\u6765\u662f configcenter \u52a0\u8f7d  ZookeeperTransporter \u7684\u903b\u8f91\u8ddf registry \u90a3\u5757\u7684\u903b\u8f91\u4e0d\u4e00\u81f4\uff0c\u6ca1\u6709\u6839\u636e client \u5b57\u6bb5\u53bb\u52a0\u8f7d SPI \u6269\u5c55\u3002\u6709\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u63d0\u4ea4\u4e00\u4e2a pr \u5e2e\u5fd9\u4fee\u590d\u4e00\u4e0b",
        "\u597d\u7684\uff0c\u6211\u8bd5\u8bd5\u63d0pr",
        "Fixed by #4513"
    ],
    "5070": [],
    "182": [],
    "2502": [],
    "4820": [],
    "5192": [],
    "5413": [],
    "2927": [],
    "3440": [],
    "2713": [],
    "2488": [],
    "4525": [],
    "2145": [],
    "255": [],
    "4535": [],
    "740": [],
    "4464": [],
    "3413": [],
    "2577": [],
    "4541": [],
    "4542": [],
    "5139": [],
    "4021": [],
    "398": [],
    "940": [],
    "4551": [],
    "5024": [],
    "5303": [],
    "4556": [
        "When I configured `/etc/hosts`:\r\n\r\n```properties\r\nxx.xx.xx.xx(ip) hostname\r\n```\r\n\r\nDubbo returned to normal.\r\n\r\nSo I think it needs to increase the timeout here:\r\n\r\nhttps://github.com/apache/dubbo/blob/c304bf356c2ed9b228d017b289475aa7f7940eba/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/ServiceConfig.java#L685"
    ],
    "2528": [],
    "4558": [],
    "1801": [],
    "4565": [
        "@qixiaobo Can you fire a pull request?   I find it is very severe problem when there are override methods.",
        "> @qixiaobo Can you fire a pull request? I find it is very severe problem when there are override methods.\r\nNo override , but overwrite.\r\n\r\nYeah, I  was told by  @beiwei30 at morning .  I will have a try .",
        "@qixiaobo sorry about it, I think I should have time to review it tomorrow.",
        "> @qixiaobo sorry about it, I think I should have time to review it tomorrow.\r\n\r\nNever mind",
        "Hope you may have time"
    ],
    "4569": [
        "Can you optimize the code and post pull request?"
    ],
    "3438": [],
    "4577": [
        "DUBBO\u7248\u672c2.7.1\uff0cnacos\u4eceRC3\u52301.1.0\u90fd\u4e0d\u597d\u7528",
        "\u770b\u4e0b\u662f\u4e0d\u662f #4013 \u9020\u6210\u7684",
        "\u6211\u7684\u610f\u601d\u662f\uff0c\u6211\u60f3\u901a\u8fc7nacos\u7684\u4e0b\u7ebf\u6309\u94ae\u64cd\u4f5c\u5bf9dubbo\u670d\u52a1\u7684\u4e0b\u7ebf\u548c\u4e0a\u7ebf\uff0c\u4f46\u662f\u53d1\u73b0\u4e0d\u751f\u6548",
        "nacos\u63a7\u5236\u53f0\u7248\u672c\u53f71.1.0\r\ndubbo\u7248\u672c2.7.2",
        "\u6709\u4ee5\u4e0b2.7.2\u5df2\u77e5\u95ee\u9898\uff0c\u540c\u65f6\u57282.7.3\u5df2\u7ecf\u4fee\u590d\uff0c\u4e0d\u77e5\u548c\u4f60\u9047\u5230\u7684\u573a\u666f\u662f\u5426\u76f8\u7b26\uff1a\r\nnacos\u7531\u4e8e\u6ca1\u6709\u9075\u5faaEMPTY\u534f\u8bae\uff0cNacos\u65e0\u6cd5\u5b8c\u6210\u4e0b\u7ebf\u6240\u6709\u670d\u52a1\u3002\r\n\r\n\u5373\uff0c\u5982\u67093\u4e2a\u670d\u52a1\uff0c\u4e0b\u7ebf\u5176\u4e2d2\u4e2a\u662f\u53ef\u4ee5\u505a\u5230\u7684\uff0c3\u4e2a\u90fd\u4e0b\u7ebf\u5219\u57282.7.2\u7248\u672c\u4e0d\u751f\u6548\u3002",
        "\u6211\u66f4\u65b0\u4e862.7.3\u7248\u672c\uff0c\u4e0b\u7ebf\u8fd8\u662f\u4e0d\u53ef\u4ee5\uff0c\u96be\u9053\u662f\u6211\u53ea\u6709\u4e00\u4e2a\u63d0\u4f9b\u8005\u548c\u4e00\u4e2a\u6d88\u8d39\u8005\u670d\u52a1\u7684\u95ee\u9898\u5417\uff1f",
        "\u7136\u540e\u6211\u5347\u7ea7\u4e86nacos1.1.1 \u5ba2\u6237\u7aef\u7248\u672c\uff0c\u7136\u540e\u8fd8\u662f\u70b9\u51fb\u4e0b\u7ebf\u8fd8\u662f\u4e0d\u53ef\u4ee5",
        "![image](https://user-images.githubusercontent.com/30397655/61768002-9f812580-ae18-11e9-8efe-b7a6a2212372.png)\r\n\u70b9\u51fb\u4e0b\u7ebf\uff0c\u6211\u770b\u63a7\u5236\u53f0\u7206\u51fa\u4e86WRAN\u5f02\u5e38",
        "\u5927\u4f6c\uff0c\u6709\u8054\u7cfb\u65b9\u5f0f\u5417\uff1f\u6211\u4e5f\u548c\u4f60\u9047\u5230\u540c\u6837\u95ee\u9898\uff0c\u6211\u73b0\u5728\u5c31\u662f\u7528\u6700\u65b0\u7684dubbo\u8fd8\u662f\u4e0d\u884c\uff0cdubbo2.7.3\u548cnacos 1.1.3",
        "> \u5927\u4f6c\uff0c\u6709\u8054\u7cfb\u65b9\u5f0f\u5417\uff1f\u6211\u4e5f\u548c\u4f60\u9047\u5230\u540c\u6837\u95ee\u9898\uff0c\u6211\u73b0\u5728\u5c31\u662f\u7528\u6700\u65b0\u7684dubbo\u8fd8\u662f\u4e0d\u884c\uff0cdubbo2.7.3\u548cnacos 1.1.3\r\n\r\n\u7ed9\u4e2a\u90ae\u7bb1"
    ],
    "3418": [],
    "4585": [
        "@chickenlj  I review a pr about exception. It is the same as this one?"
    ],
    "2749": [],
    "4594": [
        "can i commit a pr for this?"
    ],
    "4595": [],
    "779": [],
    "5053": [],
    "282": [],
    "5042": [],
    "4610": [],
    "4612": [
        "fixed by https://github.com/apache/dubbo/pull/4530",
        "Has been released at 2.6.7",
        "> Has been released at 2.6.7\r\n\r\nYou should say 2.6.x, maybe I think 2.6.8 will"
    ],
    "5235": [],
    "308": [],
    "5026": [],
    "4622": [],
    "4623": [
        "The same with https://github.com/apache/dubbo/issues/4575"
    ],
    "3754": [],
    "786": [],
    "4537": [],
    "5575": [],
    "4885": [],
    "4114": [],
    "187": [],
    "4632": [
        "\u5b8c\u6574\u5f02\u5e38\u6808\r\n```\r\norg.apache.dubbo.rpc.RpcException: Failed to invoke remote method: createUser, provider: dubbo://localhost:8080/org.apache.dubbo.benchmark.service.UserServicePb?application=dubbo-protostuff-client&check=false&client=netty4&dubbo=2.0.2&interface=org.apache.dubbo.benchmark.service.UserServicePb&lazy=false&methods=existUser,getUser,createUser,listUser&pid=16632&reference.filter=-default&register.ip=10.4.144.235&remote.application=&revision=1.0-SNAPSHOT&serialization=protobuf-json&side=consumer&sticky=false&timestamp=1563791866651, cause: org.apache.dubbo.remoting.RemotingException: io.netty.handler.codec.EncoderException: java.lang.IllegalArgumentException: This serialization only support google protobuf object, the object class is: java.lang.String\r\nio.netty.handler.codec.EncoderException: java.lang.IllegalArgumentException: This serialization only support google protobuf object, the object class is: java.lang.String\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:125)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.handler.timeout.IdleStateHandler.write(IdleStateHandler.java:304)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.channel.ChannelDuplexHandler.write(ChannelDuplexHandler.java:106)\r\n\tat org.apache.dubbo.remoting.transport.netty4.NettyClientHandler.write(NettyClientHandler.java:87)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1081)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1128)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:465)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.IllegalArgumentException: This serialization only support google protobuf object, the object class is: java.lang.String\r\n\tat org.apache.dubbo.common.serialize.protobuf.support.GenericProtobufObjectOutput.writeObject(GenericProtobufObjectOutput.java:94)\r\n\tat org.apache.dubbo.common.serialize.protobuf.support.GenericProtobufObjectOutput.writeUTF(GenericProtobufObjectOutput.java:74)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboCodec.encodeRequestData(DubboCodec.java:176)\r\n\tat org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.encodeRequest(ExchangeCodec.java:238)\r\n\tat org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.encode(ExchangeCodec.java:69)\r\n\tat org.apache.dubbo.rpc.protocol.dubbo.DubboCountCodec.encode(DubboCountCodec.java:40)\r\n\tat org.apache.dubbo.remoting.transport.netty4.NettyCodecAdapter$InternalEncoder.encode(NettyCodecAdapter.java:70)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107)\r\n\t... 23 more\r\n\r\n\tat org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:63)\r\n\tat org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:150)\r\n\tat org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)\r\n\tat org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)\r\n\tat org.apache.dubbo.common.bytecode.proxy0.createUser(proxy0.java)\r\n\tat org.apache.dubbo.benchmark.ClientPb.createUser(ClientPb.java:82)\r\n\tat org.apache.dubbo.benchmark.generated.ClientPb_createUser_jmhTest.createUser_Throughput(ClientPb_createUser_jmhTest.java:78)\r\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)\r\n\tat org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n```"
    ],
    "5035": [],
    "3839": [],
    "1828": [],
    "3127": [],
    "1889": [],
    "11": [],
    "4641": [
        "https://github.com/apache/dubbo-samples/tree/master/dubbo-samples-generic/dubbo-samples-generic-impl/dubbo-samples-generic-impl-provider/src/main/java/org/apache/dubbo/samples/generic/call",
        "I will check this issue."
    ],
    "2887": [],
    "5593": [],
    "4769": [],
    "4647": [],
    "2465": [],
    "3597": [],
    "5607": [],
    "525": [],
    "3162": [],
    "3094": [],
    "762": [],
    "5319": [],
    "4495": [],
    "4346": [],
    "2774": [],
    "4671": [],
    "4674": [
        "@mercyblitz  Which @Reference configuration can be use is depends on spring's load order, such as I have a default @Reference and a custom @Reference, I expect custom @Reference work, but spring may   load bean first which use default @Reference,I think that is a problem",
        "The problem still exists."
    ],
    "4194": [],
    "4685": [
        "Can you submit a PR to clean this part."
    ],
    "5473": [],
    "4687": [],
    "4053": [],
    "4690": [],
    "391": [],
    "249": [],
    "2647": [],
    "4697": [
        "sounds like an issue that generic invocation doesn't support new type in Java8.",
        "Yeah, Java8's new time type is not supported.Thanks for added this feature of milestone.",
        "looking forward this feature too \ud83d\ude4f",
        "\u8fd9\u4e2a\u6709\u4e86\u5417\u5bf9java8\u4e2d\u7684LocalDateTime\u7684\u652f\u6301\uff1f",
        "@complone Could you help to fix this issue ?"
    ],
    "4029": [],
    "4699": [],
    "3637": [],
    "312": [],
    "2790": [],
    "4712": [
        "I think I will add some code such as `Thread.getContextClassLoader` to fix this issue. \r\n\r\nYou should add some code `java.lang.Thread#setContextClassLoader`.  Please make sure you can do it.",
        "yean , now I had change the code with 2.7.0 source code . use Thread context class loader",
        "> yean , now I had change the code with 2.7.0 source code . use Thread context class loader\r\n\r\n@fangxiaorui Let me know if you are interested in fixing this particular issue by submitting a pull request.\r\n\r\n"
    ],
    "4713": [],
    "2565": [],
    "4720": [
        "This has been fixed since 2.7.4 onwards."
    ],
    "1938": [],
    "4447": [],
    "5199": [],
    "3141": [],
    "2019": [],
    "4980": [],
    "3481": [],
    "5385": [],
    "5617": [],
    "4747": [],
    "3371": [],
    "3054": [],
    "4725": [],
    "4759": [],
    "4760": [
        "@complone I think your solution is not right, because the zookeeper transporter is not only used by config-center. It will not use \"config.timeout\" as timeout key when it is used by Zookeeper Registry.\r\n",
        "> @complone I think your solution is not right, because the zookeeper transporter is not only used by config-center. It will not use \"config.timeout\" as timeout key when it is used by Zookeeper Registry.\r\n\r\nSo what do I do right?I followed the \u2018dubbo-samples/dubbo-samples-annotation\u2019 and reported the error. My configuration file is as follows:\r\n![10](https://user-images.githubusercontent.com/7754030/62614894-dd189f00-b93e-11e9-97ea-bf3c10398478.png)\r\n![11](https://user-images.githubusercontent.com/7754030/62614896-ddb13580-b93e-11e9-96bf-7d15ad31299e.png)\r\n![12](https://user-images.githubusercontent.com/7754030/62614897-de49cc00-b93e-11e9-8a58-b5f9ed759952.png)\r\n\r\n",
        "> @complone I think your solution is not right, because the zookeeper transporter is not only used by config-center. It will not use \"config.timeout\" as timeout key when it is used by Zookeeper Registry.\r\n\r\n\r\nThank you for your correction.I saw your [Dubbo-4760](https://github.com/apache/dubbo/pull/4763)"
    ],
    "4851": [],
    "4397": [],
    "2370": [],
    "629": [],
    "3718": [],
    "4772": [
        "can you send a pr to fix it ?",
        "I think reverting `beanName.equals(this.beanName)` to `this.beanName.equals(beanName)` should help. Should I make PR?",
        "> I think reverting `beanName.equals(this.beanName)` to `this.beanName.equals(beanName)` should help. Should I make PR?\r\n\r\nI think we should check if the beanName is null first",
        "Ok,I while send a pr",
        " +1 to @tswstarplanet \u6211\u770b\u4e86\u4e0b\uff0c\u8fd9\u91cc\u662f\u6700\u597d\u505a\u4e00\u4e0b\u975e\u7a7a\u68c0\u67e5\u7684\uff0c\u90a3\u4e2apr\u6211\u5df2\u7ecf\u5408\u5e76\u4e86\uff0c\u4f60\u53ef\u4ee5\u53e6\u884c\u63d0\u4ea4\u4e00\u4e2a\u6dfb\u52a0\u975e\u7a7a\u68c0\u67e5\u7684pr\u3002",
        "@lixiaojie\r\n\u8fd9\u4e2a\u7c7b\u7684beanName\u5c5e\u6027\u53ef\u80fd\u4e3anull\u5417\uff1f",
        "\u4e0d\u53ef\u80fd\uff0c\u8fd9\u4e2a\u7c7b\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u5bf9beanName\u505a\u4e86\u6821\u9a8c\uff0c\u4ed6\u8fd9\u4e2apr\u6ca1\u95ee\u9898"
    ],
    "4774": [],
    "5144": [],
    "1527": [],
    "3143": [],
    "5528": [],
    "3008": [],
    "4784": [
        "same as \"group\",  \"ClusterUtils.mergeUrl\" at line 84, remove the group key , so lost the group value",
        "Would you please submit a pr to fix it ?",
        "> Would you please submit a pr to fix it ?\r\nOK\uff0cI submit a pr to fix it\uff0c",
        "the modify in the issues https://github.com/apache/dubbo/issues/4525 leads to this problem.\r\nI just fix GROUP_KEY and VERSION_KEY\uff0c\r\n- when consumer has theirs value\uff0cand provider dose not have\uff0c use the consumer's value\r\n- when provider has theirs value\uff0c use the provider's value",
        "@z529192557 but I tried  it on main branch, but failed to reproduce.",
        "> @z529192557 but I tried it on main branch, but failed to reproduce.\r\n\r\nI didn't realize your test is direct invocation, pls. ignore my previous comment.",
        "> > @z529192557 but I tried it on main branch, but failed to reproduce.\r\n> \r\n> I didn't realize your test is direct invocation, pls. ignore my previous comment.\r\n\r\nYes\uff0cit\u2018s direct invocation\uff0conly in direct invocation via API\uff0c can reproduce."
    ],
    "3378": [],
    "3217": [],
    "4180": [],
    "1407": [],
    "4807": [],
    "4808": [],
    "2646": [],
    "4813": [],
    "5527": [],
    "4815": [],
    "1802": [],
    "3505": [],
    "1740": [],
    "1347": [],
    "4828": [
        "![image](https://user-images.githubusercontent.com/2881751/63034254-89342a00-beeb-11e9-9543-3c2f838a624b.png)\r\n",
        "2019-08-15 14:17:54,187 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x1004228f12d5154 type:create cxid:0x495 zxid:0x7c8c87 txntype:-1 reqpath:n/a Error Path:/f6-test/XXX/providers Error:KeeperErrorCode = NodeExists for /f6-test/XXX/providers",
        " tail -n 10000 zookeeper.out |grep  NodeExists|wc -l\r\n9732\r\nWe can see almost 97% NodeExistsException"
    ],
    "3044": [],
    "4704": [],
    "2451": [],
    "4858": [],
    "5611": [],
    "3274": [],
    "3993": [],
    "4845": [],
    "4854": [],
    "2848": [],
    "2596": [],
    "4857": [],
    "1302": [],
    "3611": [],
    "4868": [],
    "4873": [],
    "2445": [],
    "4875": [],
    "3405": [],
    "5521": [],
    "2307": [],
    "2386": [],
    "3412": [],
    "2691": [],
    "4898": [
        "SkyWalking header is using BASE64 encoding, w/ leveraging the Dubbo Attachments. Recently we received the feedback about the limit in Dubbo REST. \r\n\r\nWould Dubbo team explain why have this limit? And is there any possibility to remove it?",
        "I think it can be improved, I will submit a pr."
    ],
    "3954": [],
    "2913": [],
    "4902": [],
    "4903": [],
    "5496": [],
    "4905": [],
    "4583": [],
    "4907": [],
    "4910": [],
    "5098": [],
    "4920": [],
    "4925": [],
    "310": [],
    "3300": [],
    "5642": [],
    "4296": [],
    "4937": [],
    "1491": [],
    "2361": [],
    "4940": [],
    "405": [],
    "4942": [],
    "2679": [],
    "4944": [],
    "1809": [],
    "4947": [],
    "426": [],
    "2888": [],
    "2917": [],
    "3672": [],
    "4959": [],
    "4961": [
        "it should be caused by the fact that zulu jdk 7 doesn't support javascript."
    ],
    "5412": [],
    "4500": [],
    "3466": [],
    "2284": [],
    "4981": [],
    "4982": [
        "because the feign use the jackson to serialize and deserialize, but the TypeDefinition don't have the no-arguments constructor",
        "@CodingSinger I am fine with your proposed change, would you mind to explain when this issue will happen?"
    ],
    "5165": [],
    "4992": [],
    "5146": [],
    "5598": [],
    "1531": [],
    "1672": [],
    "3160": [],
    "5001": [
        "\u80fd\u5426\u7ed9\u4e2a\u4f8b\u5b50\u8bf4\u660e\uff0c\u5e76\u4e14\u8bf4\u660e\u662f\u54ea\u4e2a\u7248\u672c\u3002",
        "\u7248\u672c2.7.3\r\n<dubbo:config-center timeout=\"10000\" protocol=\"zookeeper\" address=\"172.16.1.20\"/>\r\ntimeout\u4e0d\u751f\u6548\r\n<dubbo:config-center protocol=\"zookeeper\" address=\"172.16.1.20?timeout=10000\"/>\r\ntimeout\u751f\u6548"
    ],
    "4795": [],
    "2797": [],
    "1776": [],
    "1051": [],
    "1264": [],
    "1944": [],
    "5009": [],
    "3490": [],
    "5452": [],
    "4154": [],
    "4132": [],
    "2536": [],
    "48": [],
    "5034": [],
    "5328": [],
    "4261": [],
    "5605": [],
    "5049": [],
    "5052": [
        "\u6211\u5728\u672c\u5730debug\u786e\u5b9e\u53d1\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u6cdb\u5316\u8c03\u7528\u65f6\r\nRpcStatus Map\u4e2d\u4f1a\u5b58\u5728$invoke->RpcStatus\u3002\r\nExecuteLimitListener\u56de\u8c03\u4e2dendCount\u65b9\u6cd5\u6263\u51cf\u7684\u662f$invoke\u65b9\u6cd5\u7684active\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u6263\u51cf\u771f\u5b9emethod\u7684active\uff1f\r\n\u662f\u8bbe\u8ba1\u4e0a\u6cdb\u5316\u8c03\u7528$invoke\u5c31\u662f\u5355\u72ec\u7edf\u8ba1\u5417  \r\nping @cvictory @htynkn \r\n\u5982\u679c\u7b97bug\u7684\u8bdd \u6211\u4f1a\u63d0\u4e00\u4e2aPR",
        "\u4f60\u4eec\u8bf4\u7684\u662f`\u6cdb\u5316\u5b9e\u73b0`\u5427\uff1f\u4e0d\u662f`\u6cdb\u5316\u8c03\u7528`"
    ],
    "4609": [],
    "4058": [],
    "3171": [],
    "1836": [],
    "4179": [],
    "3387": [],
    "4503": [],
    "1002": [],
    "3519": [],
    "3987": [],
    "4787": [],
    "5085": [],
    "3134": [],
    "3558": [],
    "4516": [],
    "4680": [],
    "1741": [],
    "5091": [],
    "3028": [],
    "5093": [],
    "2287": [],
    "1918": [],
    "5100": [
        "hello,thanks for your suggest. can you submit a pr for this?",
        "@CodingSinger OK\uff0ci will do it later."
    ],
    "2696": [],
    "1351": [],
    "4709": [],
    "5205": [],
    "3053": [],
    "3670": [],
    "4567": [],
    "3511": [],
    "5244": [],
    "5127": [],
    "4358": [],
    "2082": [],
    "4189": [],
    "602": [],
    "2816": [],
    "5003": [],
    "1490": [],
    "2712": [],
    "2366": [],
    "1378": [],
    "4049": [],
    "143": [],
    "2354": [],
    "1994": [],
    "5197": [],
    "5200": [],
    "4072": [],
    "5202": [
        "which class\uff1f",
        "> which class\uff1f\r\n\r\norg.apache.dubbo.common.URL.getAuthority()",
        "Refer to https://www.ietf.org/rfc/rfc3986.txt\r\n\r\n> 3.2.1.  User Information\r\n> \r\n>    The userinfo subcomponent may consist of a user name and, optionally,\r\n>    scheme-specific information about how to gain authorization to access\r\n>    the resource.  The user information, if present, is followed by a\r\n>    commercial at-sign (\"@\") that delimits it from the host.\r\n> \r\n>       userinfo    = *( unreserved / pct-encoded / sub-delims / \":\" )\r\n> \r\n>    Use of the format \"user:password\" in the userinfo field is\r\n>    deprecated.  Applications should not render as clear text any data\r\n>    after the first colon (\":\") character found within a userinfo\r\n>    subcomponent unless the data after the colon is the empty string\r\n>    (indicating no password).  Applications may choose to ignore or\r\n>    reject such data when it is received as part of a reference and\r\n>    should reject the storage of such data in unencrypted form.  The\r\n>    passing of authentication information in clear text has proven to be\r\n>    a security risk in almost every case where it has been used.\r\n> \r\n>    Applications that render a URI for the sake of user feedback, such as\r\n>    in graphical hypertext browsing, should render userinfo in a way that\r\n>    is distinguished from the rest of a URI, when feasible.  Such\r\n>    rendering will assist the user in cases where the userinfo has been\r\n>    misleadingly crafted to look like a trusted domain name\r\n>    (Section 7.6).\r\n\r\n",
        "@maslke Can you submit a request to fix it?"
    ],
    "3734": [],
    "4726": [],
    "5215": [
        "In theory , if index plus mSize is negative ,functions take & put & remove also throw IndexOutOfBoundsException.But your idea will make it more complete."
    ],
    "1376": [],
    "1614": [],
    "3664": [],
    "4600": [],
    "5435": [],
    "2051": [],
    "4613": [],
    "2846": [],
    "2433": [],
    "4006": [],
    "5103": [],
    "1806": [],
    "3211": [],
    "3709": [],
    "2414": [],
    "2292": [],
    "4766": [],
    "1795": [],
    "5265": [],
    "2443": [],
    "5570": [],
    "1107": [],
    "5104": [],
    "1595": [],
    "4874": [],
    "4046": [],
    "4593": [],
    "5306": [],
    "5309": [],
    "5312": [],
    "5313": [],
    "5316": [],
    "5317": [],
    "5321": [],
    "5322": [
        "`ConfigCenterConfig` and `MetadataReportConfig` don't have `port` attribute as well as  RegistryConfig\u3002\r\nWhen using  zookeeper and `ConfigCenterConfig` is null,don't set port attribute.\r\n```\r\n                    cc.getParameters().put(CLIENT_KEY, registryConfig.getClient());\r\n                    cc.setProtocol(registryConfig.getProtocol());\r\n                    cc.setAddress(registryConfig.getAddress());\r\n                    cc.setNamespace(registryConfig.getGroup());\r\n                    cc.setUsername(registryConfig.getUsername());\r\n                    cc.setPassword(registryConfig.getPassword());\r\n                    cc.setHighestPriority(false);\r\n                    configManager.addConfigCenter(cc);\r\n```",
        "@lkj41110 Could you help to fix it ?",
        "I am willing to do it"
    ],
    "3633": [],
    "5323": [
        "@xiaoheng1 Can you help to fix it ? ",
        "@guohao ok, i will do it later.",
        "@xiaoheng1  A PR is required after committed code ~"
    ],
    "5325": [],
    "5326": [],
    "2738": [],
    "5329": [],
    "2929": [],
    "5336": [
        "\u591a\u8c22\u53cd\u9988\uff0c\u6211\u4eec\u5c06\u5c1d\u8bd5\u719f\u6089 nacos \u7684\u5f00\u53d1\u8005\u4e00\u540c\u534f\u52a9\u89e3\u51b3\u3002",
        "\u6211\u4eec\u628aNacosRegistry.java\u4e2d\u7684\r\n  if (!nacosListeners.containsKey(serviceName)) \r\n\u53bb\u6389\u4e86\r\n\u76ee\u524d\u4f7f\u7528\u6b63\u5e38",
        "\u55ef NacosRegistry\u76ee\u524d\u662f\u5355\u4f8b\u6a21\u5f0f\r\n\u4f60\u8fd9\u4e2a\u76f8\u5f53\u4e8e\u76f8\u540c\u7684\u670d\u52a1\u540d,nacosListeners\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2aserviceName\u7684\u76d1\u542c\r\n\r\n\u8bf4\u767d\u4e86\u4f60\u4e24\u4e2aconsumer\u662f\u5728\u540c\u4e00\u4e2ajvm\u91cc\u9762\r\n![image](https://user-images.githubusercontent.com/32064710/69903573-34eb8200-13d6-11ea-9fca-a6b6656bb660.png)\r\n\r\n",
        "It will be fixed and release in 2.7.5"
    ],
    "5339": [],
    "4705": [],
    "5639": [],
    "3140": [],
    "1564": [],
    "1952": [],
    "3931": [],
    "3362": [],
    "2449": [],
    "5370": [],
    "4060": [],
    "4381": [],
    "1026": [],
    "5389": [
        "Merged."
    ],
    "3769": [],
    "5356": [],
    "2880": [],
    "4964": [],
    "3667": [],
    "12": [],
    "3340": [],
    "2976": [],
    "5398": [
        "The bean name will use the protocol name,  this should not happen.  so can y provide a complete configuration \uff1f ",
        "> The bean name will use the protocol name, this should not happen. so can y provide a complete configuration \uff1f\r\n\r\nwe have tow configurations\uff0capollo and xml\u3002\r\nin the apollo\uff1a\r\n```\r\ndubbo.registry.address = \u2026\u2026\r\ndubbo.metadata-report.address = \u2026\u2026\r\ndubbo.registry.simplified = true\r\ndubbo.protocol.name = dubbo\r\ndubbo.protocol.port = -1\r\ndubbo.provider.timeout = 3000\r\ndubbo.provider.delay = 0\r\ndubbo.consumer.check = false\r\n```\r\nin the xml\uff1a\r\n```\r\n\t<dubbo:protocol  name=\"hessian\"  default=\"false\" port=\"${dubbo.protocol.hessian.port}\" server=\"jetty\"  threads=\"${dubbo.protocol.hessian.threads}\" >\r\n\t\t<dubbo:parameter key=\"hessian.overload.method\" value=\"true\"/>\r\n\t</dubbo:protocol>\r\n\t<dubbo:service interface=\"xxxx1.xxxx1Facade\" ref=\"xxxx1Facade\" />\r\n\t<dubbo:service interface=\"xxxx2.xxxx2Facade\" ref=\"xxxx2Facade\"  protocol=\"hessian\"/>\r\n```\r\nthen the xxxx1Facade register tow protocol service\u3002\r\n\r\nand if  i add \r\n```\r\n<dubbo:provider  protocol=\"dubbo\" default=\"true\"/>\r\n```\r\ninto the xml\uff0cthe error shows :No bean named 'dubbo' available\r\n\r\n"
    ],
    "1323": [],
    "3680": [],
    "5423": [],
    "2682": [],
    "2240": [],
    "5429": [
        "https://github.com/apache/dubbo/issues/5424",
        "i think should replace `java.lang.System#identityHashCode` with `hashCode` .\r\n@chickenlj \r\nwhat's your opinion\uff1f",
        "https://mp.weixin.qq.com/s/ctBM0WO-uWNlTWHI-TPniw \r\nbug\u7684\u8be6\u7ec6\u63cf\u8ff0",
        "@CodingSinger  I commit some comments for your bugfix."
    ],
    "5416": [],
    "3824": [],
    "2584": [],
    "5445": [
        "You can pull a request for it :D"
    ],
    "1949": [],
    "3398": [],
    "3498": [],
    "1862": [],
    "1024": [],
    "4768": [],
    "2468": [],
    "1507": [],
    "1851": [],
    "3489": [],
    "3120": [],
    "1263": [],
    "3807": [],
    "765": [],
    "5470": [],
    "5471": [],
    "3073": [],
    "5479": [],
    "4128": [],
    "5483": [
        "Would you like to submit a pr ?"
    ],
    "5072": [],
    "4242": [],
    "5608": [],
    "4442": [],
    "5495": [],
    "2586": [],
    "4598": [],
    "3567": [],
    "3182": [],
    "5524": [],
    "4853": [],
    "2727": [],
    "5589": [],
    "5511": [
        "Thanks for your feedback, I am working on this issue."
    ],
    "1633": [],
    "2703": [],
    "265": [],
    "933": [],
    "5191": [],
    "3935": [],
    "1859": [],
    "2982": [],
    "1856": [],
    "4911": [],
    "2263": [],
    "4325": [],
    "2730": [],
    "5554": [
        "Can I work on this ? "
    ],
    "4748": [],
    "4204": [],
    "5414": [],
    "3311": [],
    "5019": [],
    "4916": [],
    "1318": [],
    "2566": [],
    "1218": [],
    "726": [],
    "2283": [],
    "1607": [],
    "1916": [],
    "1792": [],
    "3283": [],
    "2117": [],
    "2239": [],
    "3643": [],
    "3706": [],
    "2388": [],
    "528": [],
    "2018": [],
    "574": [],
    "5179": [],
    "3041": [],
    "4934": [],
    "4797": [],
    "5044": [],
    "5008": [],
    "4092": [],
    "3154": [],
    "2047": [],
    "5580": [],
    "1858": [],
    "2206": [],
    "1831": [],
    "3406": [],
    "3131": [],
    "3563": [],
    "1519": [],
    "5535": [],
    "5255": [],
    "1611": [],
    "2895": [],
    "4777": [],
    "3492": [],
    "2666": [],
    "1126": [],
    "2306": [],
    "2688": [],
    "3247": [],
    "5460": [],
    "3755": [],
    "2118": [],
    "2520": [],
    "3544": [],
    "3130": [],
    "2340": [],
    "1381": [],
    "2392": [],
    "3460": [],
    "1686": [],
    "710": [],
    "4974": [],
    "1771": [],
    "2740": [],
    "995": [],
    "2849": [],
    "4812": [],
    "2200": [],
    "3636": [],
    "999": [],
    "2254": [],
    "425": [],
    "1449": [],
    "5201": [],
    "2904": [],
    "4067": [],
    "3534": [],
    "4549": [],
    "5635": [],
    "3659": [],
    "721": [],
    "4234": [],
    "5380": [],
    "2615": [],
    "4476": [],
    "4245": [],
    "3103": [],
    "2001": [],
    "37": [],
    "1615": [],
    "5094": [],
    "2196": [],
    "4424": [],
    "1956": [],
    "2156": [],
    "2885": [],
    "1170": [],
    "5506": [],
    "2434": [],
    "4576": [],
    "2755": [],
    "4521": [],
    "4859": [],
    "3434": [],
    "4852": [],
    "192": [],
    "2417": [],
    "2026": [],
    "4254": [],
    "3013": [],
    "4770": [],
    "3607": [],
    "4839": [],
    "2167": [],
    "3447": [],
    "689": [],
    "2680": [],
    "3238": [],
    "4110": [],
    "4730": [],
    "4130": [],
    "3811": [],
    "4321": [],
    "1553": [],
    "1375": [],
    "4226": [],
    "3173": [],
    "2529": [],
    "1715": [],
    "5541": [],
    "1834": [],
    "3963": [],
    "4375": [],
    "1887": [],
    "5261": [],
    "993": [],
    "5577": [],
    "3869": [],
    "1709": [],
    "3849": [],
    "3278": [],
    "1520": [],
    "3121": [],
    "1657": [],
    "4420": [],
    "1745": [],
    "1662": [],
    "39": [],
    "3742": [],
    "1267": [],
    "5586": [],
    "4956": [],
    "395": [],
    "3530": [],
    "2212": [],
    "83": [],
    "5021": [],
    "550": [],
    "4153": [],
    "2500": [],
    "2778": [],
    "325": [],
    "408": [],
    "4311": [],
    "942": [],
    "2575": [],
    "3910": [],
    "2362": [],
    "2246": [],
    "3360": [],
    "4109": [],
    "1957": [],
    "1401": [],
    "4574": [],
    "5456": [],
    "4012": [],
    "4401": [],
    "2604": [],
    "1400": [],
    "3737": [],
    "4157": [],
    "1326": [],
    "5079": [],
    "4116": [],
    "815": [],
    "3838": [],
    "804": [],
    "2686": [],
    "4169": [],
    "2903": [],
    "5092": [],
    "1384": [],
    "2614": [],
    "1993": [],
    "5054": [],
    "5101": [],
    "1319": [],
    "3374": [],
    "5088": [],
    "106": [],
    "1352": [],
    "5272": [],
    "4220": [],
    "121": [],
    "2161": [],
    "2309": [],
    "5572": [],
    "1578": [],
    "5155": [],
    "1131": [],
    "2220": [],
    "1534": [],
    "2081": [],
    "4088": [],
    "5294": [],
    "5290": [],
    "2863": [],
    "3885": [],
    "3388": [],
    "5087": [],
    "3027": [],
    "2258": [],
    "2741": [],
    "3133": [],
    "1591": [],
    "3016": [],
    "3772": [],
    "4225": [],
    "3284": [],
    "1623": [],
    "2597": [],
    "1900": [],
    "5141": [],
    "5621": [],
    "3344": [],
    "3293": [],
    "2025": [],
    "2369": [],
    "4087": [],
    "445": [],
    "2004": [],
    "2322": [],
    "2697": [],
    "987": [],
    "4978": [],
    "4032": [],
    "1969": [],
    "2396": [],
    "3232": [],
    "4755": [],
    "2374": [],
    "2936": [],
    "5240": [],
    "2554": [],
    "2747": [],
    "2669": [],
    "1675": [],
    "3683": [],
    "2480": [],
    "1096": [],
    "1966": [],
    "624": [],
    "5158": [],
    "2105": [],
    "1644": [],
    "2496": [],
    "5150": [],
    "2347": [],
    "4590": [],
    "5137": [],
    "2938": [],
    "1760": [],
    "1608": [],
    "1412": [],
    "3349": [],
    "5509": [],
    "3139": [],
    "4394": [],
    "4553": [],
    "3427": [],
    "3446": [],
    "2944": [],
    "2086": [],
    "2155": [],
    "4615": [],
    "2876": [],
    "3768": [],
    "1827": [],
    "3199": [],
    "1430": [],
    "5517": [],
    "4223": [],
    "5430": [],
    "3482": [],
    "1272": [],
    "2074": [],
    "2672": [],
    "4811": [],
    "2810": [],
    "5050": [],
    "1196": [],
    "5513": [],
    "5449": [],
    "1794": [],
    "5198": [],
    "4846": [],
    "4451": [],
    "2563": [],
    "5631": [],
    "2661": [],
    "2649": [],
    "4648": [],
    "2761": [],
    "242": [],
    "4056": [],
    "3285": [],
    "3516": [],
    "4237": [],
    "5007": [],
    "3020": [],
    "3937": [],
    "4789": [],
    "4388": [],
    "1912": [],
    "4862": [],
    "4017": [],
    "601": [],
    "3102": [],
    "2627": [],
    "3852": [],
    "3004": [],
    "3988": [],
    "209": [],
    "3381": [],
    "2098": [],
    "1443": [],
    "5491": [],
    "1941": [],
    "5568": [],
    "2402": [],
    "2282": [],
    "4799": [],
    "2267": [],
    "2266": [],
    "1232": [],
    "1663": [],
    "4403": [],
    "1506": [],
    "5498": [],
    "5614": [],
    "4217": [],
    "3099": [],
    "5548": [],
    "4454": [],
    "3738": [],
    "4074": [],
    "104": [],
    "1204": [],
    "3191": [],
    "5526": [],
    "2582": [],
    "1380": [],
    "4660": [],
    "3977": [],
    "3888": [],
    "3453": [],
    "301": [],
    "561": [],
    "1825": [],
    "4031": [],
    "140": [],
    "520": [],
    "438": [],
    "229": [],
    "4573": [],
    "3456": [],
    "4": [],
    "183": [],
    "4407": [],
    "5450": [],
    "4305": [],
    "1460": [],
    "2878": [],
    "1580": [],
    "2879": [],
    "1620": [],
    "3822": [],
    "1676": [],
    "3919": [],
    "172": [],
    "1340": [],
    "4034": [],
    "4617": [],
    "3397": [],
    "4764": [],
    "2260": [],
    "3077": [],
    "3847": [],
    "5330": [],
    "5030": [],
    "1113": [],
    "4895": [],
    "2940": [],
    "591": [],
    "4850": [],
    "2447": [],
    "2175": [],
    "4659": [],
    "3136": [],
    "2822": [],
    "2209": [],
    "1855": [],
    "1249": [],
    "112": [],
    "1572": [],
    "928": [],
    "3513": [],
    "3414": [],
    "3853": [],
    "4129": [],
    "2325": [],
    "4332": [],
    "834": [],
    "2049": [],
    "2285": [],
    "2775": [],
    "2832": [],
    "1071": [],
    "775": [],
    "5212": [],
    "4676": [],
    "1736": [],
    "4415": [],
    "4743": [],
    "4872": [],
    "2073": [],
    "3444": [],
    "4202": [],
    "2616": [],
    "1133": [],
    "521": [],
    "2111": [],
    "5185": [],
    "2907": [],
    "4670": [],
    "3093": [],
    "5033": [],
    "1097": [],
    "2632": [],
    "603": [],
    "5059": [],
    "2379": [],
    "268": [],
    "5027": [],
    "5123": [],
    "1423": [],
    "3668": [],
    "5160": [],
    "5132": [],
    "2745": [],
    "2183": [],
    "1721": [],
    "2": [],
    "5280": [],
    "2617": [],
    "3591": [],
    "3752": [],
    "3208": [],
    "1881": [],
    "5434": [],
    "2670": [],
    "4148": [],
    "4126": [],
    "3432": [],
    "2668": [],
    "2360": [],
    "3018": [],
    "4188": [],
    "2941": [],
    "3590": [],
    "5497": [],
    "5618": [],
    "3146": [],
    "3614": [],
    "3380": [],
    "3454": [],
    "3195": [],
    "4293": [],
    "1139": [],
    "4165": [],
    "699": [],
    "5469": [],
    "5571": [],
    "4483": [],
    "3061": [],
    "2281": [],
    "18": [],
    "2804": [],
    "5353": [],
    "597": [],
    "2951": [],
    "2197": [],
    "4131": [],
    "3976": [],
    "4303": [],
    "4482": [],
    "2448": [],
    "3508": [],
    "2135": [],
    "719": [],
    "4708": [],
    "1980": [],
    "2126": [],
    "4368": [],
    "4510": [],
    "3517": [],
    "2631": [],
    "4522": [],
    "3352": [],
    "3474": [],
    "3943": [],
    "2373": [],
    "5226": [],
    "3647": [],
    "3722": [],
    "149": [],
    "2513": [],
    "4349": [],
    "2143": [],
    "4540": [],
    "3549": [],
    "3114": [],
    "1076": [],
    "1671": [],
    "2705": [],
    "3837": [],
    "4478": [],
    "3087": [],
    "3470": [],
    "611": [],
    "3181": [],
    "3090": [],
    "1708": [],
    "5540": [],
    "281": [],
    "5013": [],
    "4187": [],
    "4932": [],
    "700": [],
    "4554": [],
    "3596": [],
    "2418": [],
    "3703": [],
    "14": [],
    "5419": [],
    "4715": [],
    "3335": [],
    "1601": [],
    "450": [],
    "2068": [],
    "263": [],
    "2084": [],
    "3897": [],
    "2568": [],
    "1370": [],
    "2800": [],
    "504": [],
    "592": [],
    "3015": [],
    "4763": [],
    "3065": [],
    "5530": [],
    "3965": [],
    "107": [],
    "5549": [],
    "3206": [],
    "2662": [],
    "4363": [],
    "1627": [],
    "3602": [],
    "4228": [],
    "1750": [],
    "3067": [],
    "3291": [],
    "88": [],
    "4231": [],
    "4876": [],
    "748": [],
    "3941": [],
    "4844": [],
    "1008": [],
    "2921": [],
    "1780": [],
    "3675": [],
    "3066": [],
    "269": [],
    "5555": [],
    "4710": [],
    "5596": [],
    "1442": [],
    "607": [],
    "3748": [],
    "5102": [],
    "3233": [],
    "2626": [],
    "3788": [],
    "3138": [],
    "5310": [],
    "2097": [],
    "3095": [],
    "434": [],
    "5005": [],
    "3180": [],
    "2873": [],
    "5136": [],
    "3292": [],
    "1570": [],
    "2255": [],
    "917": [],
    "2146": [],
    "2657": [],
    "2831": [],
    "4052": [],
    "3377": [],
    "3605": [],
    "2290": [],
    "1239": [],
    "75": [],
    "2114": [],
    "2273": [],
    "4496": [],
    "4636": [],
    "4215": [],
    "452": [],
    "4365": [],
    "4081": [],
    "2141": [],
    "5525": [],
    "3850": [],
    "4379": [],
    "2041": [],
    "4453": [],
    "4502": [],
    "387": [],
    "2861": [],
    "3502": [],
    "4517": [],
    "3338": [],
    "635": [],
    "5510": [],
    "3825": [],
    "2079": [],
    "131": [],
    "3671": [],
    "4735": [],
    "1703": [],
    "569": [],
    "2359": [],
    "4398": [],
    "1325": [],
    "4155": [],
    "2291": [],
    "1989": [],
    "5023": [],
    "2243": [],
    "3589": [],
    "266": [],
    "1775": [],
    "2494": [],
    "5043": [],
    "621": [],
    "2368": [],
    "3520": [],
    "2338": [],
    "5110": [],
    "2979": [],
    "4432": [],
    "583": [],
    "3717": [],
    "3366": [],
    "3515": [],
    "2223": [],
    "1058": [],
    "2742": [],
    "4996": [],
    "3940": [],
    "4172": [],
    "5573": [],
    "1219": [],
    "3480": [],
    "321": [],
    "2455": [],
    "2077": [],
    "3886": [],
    "1970": [],
    "2505": [],
    "4452": [],
    "3688": [],
    "279": [],
    "4809": [],
    "4372": [],
    "5247": [],
    "2119": [],
    "859": [],
    "5490": [],
    "1921": [],
    "4700": [],
    "4545": [],
    "3337": [],
    "4014": [],
    "4163": [],
    "2946": [],
    "3345": [],
    "4596": [],
    "822": [],
    "1758": [],
    "4655": [],
    "1589": [],
    "788": [],
    "606": [],
    "1459": [],
    "4463": [],
    "4559": [],
    "3665": [],
    "2636": [],
    "1562": [],
    "10": [],
    "2956": [],
    "2302": [],
    "1818": [],
    "1405": [],
    "1291": [],
    "969": [],
    "908": [],
    "4246": [],
    "305": [],
    "4045": [],
    "2487": [],
    "4030": [],
    "3409": [],
    "1118": []
}